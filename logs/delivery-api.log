2025-08-03 11:26:24.500 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 1632 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 11:26:24.538 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 11:26:24.539 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 11:26:24.584 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 11:26:24.594 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 11:26:28.107 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 11:26:28.213 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 95 ms. Found 5 JPA repository interfaces.
2025-08-03 11:26:29.169 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 11:26:29.186 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 11:26:29.190 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 11:26:29.190 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 11:26:29.262 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 11:26:29.263 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4668 ms
2025-08-03 11:26:30.118 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 11:26:30.162 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 11:26:30.349 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 11:26:30.353 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 11:26:30.395 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 11:26:31.458 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 11:26:31.462 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 11:26:31.462 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 11:26:31.462 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 11:26:31.462 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 11:26:31.463 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 11:26:31.468 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 11:26:31.477 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 11:26:31.499 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 11:26:31.501 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 11:26:31.502 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 11:26:31.506 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 11:26:31.509 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 11:26:31.522 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 11:26:31.523 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 11:26:31.525 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 11:26:31.526 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 11:26:31.531 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 11:26:31.981 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 11:26:31.982 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 11:26:32.061 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 11:26:33.232 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 11:26:33.668 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 11:26:33.792 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 11:26:34.092 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 11:26:34.203 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 11:26:34.269 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 11:26:34.974 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 11:26:35.552 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 11:26:35.670 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 11:26:35.689 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 11:26:35.779 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-08-03 11:26:35.780 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-08-03 11:26:35.781 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 11:26:35.781 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 11:26:35.813 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 11:26:35.813 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 119 ms
2025-08-03 11:26:35.828 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 11:26:35.852 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 1 mappings in 'requestMappingHandlerMapping'
2025-08-03 11:26:35.861 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 11:26:35.873 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 11:26:35.880 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2025-08-03 11:26:35.883 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-08-03 11:26:35.906 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 12.507 seconds (process running for 15.298)
2025-08-03 11:26:36.189 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 11:26:36.232 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 11:26:36.234 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 11:26:36.236 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 11:26:36.642 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.654 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.654 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.655 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.656 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.656 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.666 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.667 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.668 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.668 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.669 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.670 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.681 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.683 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.683 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.684 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.685 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.686 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.694 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.702 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.703 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.705 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.706 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.707 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.709 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.710 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.710 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.711 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.712 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.712 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.713 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.713 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.728 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.729 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.730 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.730 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.731 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.731 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.732 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.732 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.733 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.733 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.736 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:26:36.739 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:26:36.740 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:26:36.741 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.743 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.745 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.746 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.752 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:26:36.753 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:26:36.754 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:26:36.755 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.756 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.757 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.758 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.758 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:26:36.760 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:26:36.762 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:26:36.763 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.764 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.765 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.765 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.767 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:26:36.768 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:26:36.768 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:26:36.769 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.770 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.771 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.771 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.773 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:26:36.773 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:26:36.774 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:26:36.775 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:26:36.776 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.777 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.778 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.779 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.779 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.821 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 11:26:36.826 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 11:26:36.835 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 11:26:36.841 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 11:26:36.845 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 11:26:36.850 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 11:26:36.855 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 11:26:36.860 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 11:26:36.862 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.868 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 11:26:36.869 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.873 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 11:26:36.874 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.884 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.885 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.886 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.887 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.891 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 11:26:36.898 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 11:26:36.899 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:26:36.900 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.901 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:26:36.901 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.910 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 11:26:36.912 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:26:36.912 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.914 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:26:36.915 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.916 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:26:36.917 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.924 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 11:30:31.255 [http-nio-8080-exec-1] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 11:30:31.256 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 11:30:31.256 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 11:30:31.256 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 11:30:31.256 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 11:30:31.258 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7c693fa2
2025-08-03 11:30:31.258 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@5b3ac4ed
2025-08-03 11:30:31.259 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 11:30:31.259 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-03 11:30:31.304 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-03 11:30:31.319 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:30:31.322 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:30:31.332 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-03 11:30:31.397 [http-nio-8080-exec-1] DEBUG [4d86e6ccde3f4195] o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-08-03 11:30:31.400 [http-nio-8080-exec-1] DEBUG [4d86e6ccde3f4195] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-03 11:30:31.403 [http-nio-8080-exec-1] DEBUG [4d86e6ccde3f4195] o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-08-03 11:30:31.410 [http-nio-8080-exec-1] DEBUG [4d86e6ccde3f4195] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource actuator/health.]
2025-08-03 11:30:31.411 [http-nio-8080-exec-1] DEBUG [4d86e6ccde3f4195] o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-03 11:30:31.435 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 11:30:31.436 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:30:31.441 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:30:37.109 [http-nio-8081-exec-1] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServletRegistration'
2025-08-03 11:30:37.110 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServletRegistration'
2025-08-03 11:30:37.110 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 11:30:37.110 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 11:30:37.110 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 11:30:37.110 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@25a90cb
2025-08-03 11:30:37.110 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@78e14885
2025-08-03 11:30:37.110 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 11:30:37.110 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-08-03 11:30:37.112 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-03 11:30:37.113 [http-nio-8081-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:30:37.114 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:30:37.114 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:30:37.116 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-03 11:30:37.118 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-08-03 11:30:37.138 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 11:30:37.196 [http-nio-8081-exec-1] DEBUG [] o.s.web.client.RestTemplate - HTTP GET https://httpbin.org/status/200
2025-08-03 11:30:37.202 [http-nio-8081-exec-1] DEBUG [] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 11:30:40.144 [http-nio-8081-exec-1] DEBUG [] o.s.web.client.RestTemplate - Response 200 OK
2025-08-03 11:30:40.160 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 11:30:40.219 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@14344f0d]
2025-08-03 11:30:40.242 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 11:30:40.314 [http-nio-8081-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 11:30:40.319 [http-nio-8081-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:30:40.322 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:30:40.323 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:30:40.335 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:30:40.337 [http-nio-8081-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 11:30:40.338 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:30:40.339 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:30:45.504 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/info
2025-08-03 11:30:45.505 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:30:45.505 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:30:45.506 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/info
2025-08-03 11:30:45.507 [http-nio-8080-exec-5] DEBUG [8259b27e14f040e6] o.s.web.servlet.DispatcherServlet - GET "/actuator/info", parameters={}
2025-08-03 11:30:45.508 [http-nio-8080-exec-5] DEBUG [8259b27e14f040e6] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-03 11:30:45.510 [http-nio-8080-exec-5] DEBUG [8259b27e14f040e6] o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-08-03 11:30:45.512 [http-nio-8080-exec-5] DEBUG [8259b27e14f040e6] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource actuator/info.]
2025-08-03 11:30:45.513 [http-nio-8080-exec-5] DEBUG [8259b27e14f040e6] o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-03 11:30:45.515 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 11:30:45.517 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:30:45.517 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:30:49.061 [http-nio-8081-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/info
2025-08-03 11:30:49.063 [http-nio-8081-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:30:49.064 [http-nio-8081-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:30:49.064 [http-nio-8081-exec-5] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:30:49.065 [http-nio-8081-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/info
2025-08-03 11:30:49.066 [http-nio-8081-exec-5] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/info", parameters={}
2025-08-03 11:30:49.068 [http-nio-8081-exec-5] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 11:30:49.071 [http-nio-8081-exec-5] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 11:30:49.074 [http-nio-8081-exec-5] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{}]
2025-08-03 11:30:49.075 [http-nio-8081-exec-5] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 11:30:49.135 [http-nio-8081-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 11:30:49.136 [http-nio-8081-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:30:49.136 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:30:49.136 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:30:49.137 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:30:49.139 [http-nio-8081-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 11:30:49.140 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:30:49.140 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:31:00.253 [http-nio-8081-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/metrics
2025-08-03 11:31:00.254 [http-nio-8081-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:31:00.255 [http-nio-8081-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:31:00.255 [http-nio-8081-exec-9] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:31:00.257 [http-nio-8081-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/metrics
2025-08-03 11:31:00.257 [http-nio-8081-exec-9] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/metrics", parameters={}
2025-08-03 11:31:00.259 [http-nio-8081-exec-9] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 11:31:00.263 [http-nio-8081-exec-9] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 11:31:00.265 [http-nio-8081-exec-9] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [org.springframework.boot.actuate.metrics.MetricsEndpoint$MetricNamesDescriptor@682b0e46]
2025-08-03 11:31:00.267 [http-nio-8081-exec-9] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 11:31:00.347 [http-nio-8081-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 11:31:00.348 [http-nio-8081-exec-10] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:31:00.348 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:31:00.348 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:31:00.349 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:31:00.350 [http-nio-8081-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 11:31:00.352 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:31:00.352 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:37:07.993 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 11:37:08.029 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 11:37:08.031 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 11:37:08.038 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 11:37:08.148 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 11:37:08.162 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 11:37:08.179 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 11:37:08.181 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 11:37:08.182 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 11:37:08.182 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 11:37:08.182 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 11:37:08.228 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 11:37:08.229 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 11:37:08.233 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 11:37:37.726 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 9704 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 11:37:37.727 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 11:37:37.728 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 11:37:37.778 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 11:37:37.778 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 11:37:40.205 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 11:37:40.355 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 131 ms. Found 5 JPA repository interfaces.
2025-08-03 11:37:41.525 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 11:37:41.551 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 11:37:41.554 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 11:37:41.555 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 11:37:41.657 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 11:37:41.658 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3879 ms
2025-08-03 11:37:42.680 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 11:37:42.712 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 11:37:42.918 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 11:37:42.921 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 11:37:42.964 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 11:37:43.975 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 11:37:43.979 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 11:37:43.979 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 11:37:43.979 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 11:37:43.979 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 11:37:43.980 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 11:37:43.986 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 11:37:43.994 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 11:37:43.995 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 11:37:43.997 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 11:37:43.998 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 11:37:43.999 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 11:37:44.002 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 11:37:44.013 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 11:37:44.014 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 11:37:44.015 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 11:37:44.016 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 11:37:44.019 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 11:37:44.441 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 11:37:44.443 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 11:37:44.540 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 11:37:45.643 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 11:37:46.048 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 11:37:46.154 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 11:37:46.482 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 11:37:46.607 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 11:37:46.669 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 11:37:47.280 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 11:37:47.334 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 11:37:47.414 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 11:37:47.430 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 11:37:47.541 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-08-03 11:37:47.542 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-08-03 11:37:47.543 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 11:37:47.543 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 11:37:47.574 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 11:37:47.574 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 140 ms
2025-08-03 11:37:47.593 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 11:37:47.613 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 1 mappings in 'requestMappingHandlerMapping'
2025-08-03 11:37:47.621 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 11:37:47.630 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 11:37:47.635 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2025-08-03 11:37:47.639 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-08-03 11:37:47.654 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 10.749 seconds (process running for 11.633)
2025-08-03 11:37:47.880 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 11:37:47.915 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 11:37:47.917 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 11:37:47.919 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 11:37:48.317 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.328 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.329 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.330 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.330 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.331 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.339 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.341 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.341 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.342 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.342 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.343 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.355 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.357 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.358 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.358 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.359 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.360 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.367 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.375 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.377 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.378 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.379 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.380 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.381 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.382 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.383 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.384 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.384 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.385 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.385 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.386 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.386 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.387 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.387 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.388 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.389 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.389 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.390 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.390 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.391 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.391 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.394 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:37:48.396 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:37:48.397 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:37:48.398 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.400 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.401 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.402 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.407 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:37:48.408 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:37:48.409 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:37:48.410 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.411 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.412 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.413 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.414 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:37:48.415 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:37:48.416 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:37:48.417 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.418 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.418 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.419 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.420 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:37:48.421 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:37:48.423 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:37:48.424 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.425 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.426 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.426 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.428 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:37:48.429 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:37:48.430 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:37:48.431 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:37:48.432 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.433 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.434 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.435 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.435 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.475 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 11:37:48.479 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 11:37:48.486 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 11:37:48.492 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 11:37:48.496 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 11:37:48.501 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 11:37:48.505 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 11:37:48.509 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 11:37:48.510 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.514 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 11:37:48.516 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.519 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 11:37:48.521 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.522 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.522 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.523 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.524 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.528 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 11:37:48.532 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 11:37:48.534 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:37:48.535 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.537 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:37:48.538 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.545 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 11:37:48.547 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:37:48.549 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.550 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:37:48.551 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.552 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:37:48.553 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.559 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 11:37:56.729 [http-nio-8081-exec-1] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServletRegistration'
2025-08-03 11:37:56.729 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServletRegistration'
2025-08-03 11:37:56.729 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 11:37:56.729 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 11:37:56.729 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 11:37:56.729 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7bf6a60a
2025-08-03 11:37:56.729 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@19f09fcf
2025-08-03 11:37:56.729 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 11:37:56.730 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-03 11:37:56.744 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/info
2025-08-03 11:37:56.764 [http-nio-8081-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:37:56.768 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:37:56.769 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:37:56.777 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/info
2025-08-03 11:37:56.780 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/info", parameters={}
2025-08-03 11:37:56.809 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 11:37:56.821 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 11:37:56.846 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{}]
2025-08-03 11:37:56.860 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 11:37:56.969 [http-nio-8081-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 11:37:56.971 [http-nio-8081-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:37:56.972 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:37:56.972 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:37:56.980 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:37:56.993 [http-nio-8081-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 11:37:56.994 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:37:56.995 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:40:17.009 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 11:40:17.018 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 11:40:17.018 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 11:40:17.024 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 11:40:17.039 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 11:40:17.041 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 11:40:17.043 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 11:40:17.045 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 11:40:17.045 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 11:40:17.059 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 11:40:17.060 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 11:40:17.070 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 11:40:17.071 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 11:40:17.073 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 11:51:30.359 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 17964 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 11:51:30.385 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 11:51:30.386 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 11:51:30.434 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 11:51:30.434 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 11:51:32.896 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 11:51:33.006 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 96 ms. Found 5 JPA repository interfaces.
2025-08-03 11:51:33.928 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 11:51:33.943 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 11:51:33.960 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 11:51:33.960 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 11:51:34.041 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 11:51:34.041 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3606 ms
2025-08-03 11:51:34.917 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 11:51:34.957 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 11:51:35.136 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 11:51:35.139 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 11:51:35.166 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 11:51:36.216 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 11:51:36.221 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 11:51:36.221 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 11:51:36.221 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 11:51:36.221 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 11:51:36.222 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 11:51:36.228 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 11:51:36.236 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 11:51:36.237 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 11:51:36.239 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 11:51:36.240 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 11:51:36.242 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 11:51:36.246 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 11:51:36.257 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 11:51:36.259 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 11:51:36.260 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 11:51:36.261 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 11:51:36.266 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 11:51:36.782 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 11:51:36.784 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 11:51:36.900 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 11:51:38.108 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 11:51:38.487 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 11:51:38.617 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 11:51:38.921 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 11:51:39.046 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 11:51:39.114 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 11:51:39.682 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 11:51:39.747 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 11:51:39.798 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 11:51:39.820 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 11:51:39.916 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-08-03 11:51:39.917 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-08-03 11:51:39.917 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 11:51:39.918 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 11:51:39.944 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 11:51:39.944 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 120 ms
2025-08-03 11:51:39.958 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 11:51:39.977 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 1 mappings in 'requestMappingHandlerMapping'
2025-08-03 11:51:39.983 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 11:51:39.992 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 11:51:39.997 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2025-08-03 11:51:40.002 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-08-03 11:51:40.017 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 10.59 seconds (process running for 11.446)
2025-08-03 11:51:40.242 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 11:51:40.278 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 11:51:40.281 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 11:51:40.284 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 11:51:40.688 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.699 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.700 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.701 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.702 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.702 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.711 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.712 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.713 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.714 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.715 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.716 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.726 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.728 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.728 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.729 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.730 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.731 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.739 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.749 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.751 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.752 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.753 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.754 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.756 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.757 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.758 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.758 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.759 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.760 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.760 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.761 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.761 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.762 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.762 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.763 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.764 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.764 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.765 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.766 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.766 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.767 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.770 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:51:40.773 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:51:40.775 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:51:40.776 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.778 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.780 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.781 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.798 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:51:40.799 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:51:40.800 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:51:40.801 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.802 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.803 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.803 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.805 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:51:40.806 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:51:40.808 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:51:40.809 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.810 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.811 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.812 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.814 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:51:40.815 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:51:40.816 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:51:40.817 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.818 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.819 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.819 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.821 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:51:40.821 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:51:40.824 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:51:40.825 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:51:40.826 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.836 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.837 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.838 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.839 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.882 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 11:51:40.887 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 11:51:40.894 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 11:51:40.901 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 11:51:40.906 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 11:51:40.915 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 11:51:40.923 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 11:51:40.932 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 11:51:40.936 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.946 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 11:51:40.948 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.954 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 11:51:40.955 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.957 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.958 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.959 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.961 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.969 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 11:51:40.978 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 11:51:40.980 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:51:40.982 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.984 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:51:40.985 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.996 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 11:51:40.999 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:51:41.000 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:41.003 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:51:41.004 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:41.006 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:51:41.007 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:41.012 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 11:51:45.527 [http-nio-8081-exec-1] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServletRegistration'
2025-08-03 11:51:45.527 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServletRegistration'
2025-08-03 11:51:45.527 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 11:51:45.527 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 11:51:45.527 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 11:51:45.527 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3ce6e91b
2025-08-03 11:51:45.528 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@25326608
2025-08-03 11:51:45.528 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 11:51:45.528 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-03 11:51:45.544 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/info
2025-08-03 11:51:45.561 [http-nio-8081-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:51:45.563 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:51:45.563 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:51:45.571 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/info
2025-08-03 11:51:45.575 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/info", parameters={}
2025-08-03 11:51:45.593 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 11:51:45.604 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 11:51:45.629 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{}]
2025-08-03 11:51:45.646 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 11:51:45.817 [http-nio-8081-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 11:51:45.820 [http-nio-8081-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:51:45.821 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:51:45.821 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:51:45.832 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:51:45.843 [http-nio-8081-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 11:51:45.845 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:51:45.846 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:54:20.013 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 11:54:20.029 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 11:54:20.031 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 11:54:20.035 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 11:54:20.071 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 11:54:20.077 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 11:54:20.085 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 11:54:20.086 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 11:54:20.087 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 11:54:20.088 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 11:54:20.088 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 11:54:20.114 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 11:54:20.115 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 11:54:20.118 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 11:54:47.634 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 25936 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 11:54:47.636 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 11:54:47.637 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 11:54:47.679 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 11:54:47.680 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 11:54:49.595 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 11:54:49.691 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 82 ms. Found 5 JPA repository interfaces.
2025-08-03 11:54:50.629 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 11:54:50.645 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 11:54:50.648 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 11:54:50.648 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 11:54:50.726 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 11:54:50.726 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3046 ms
2025-08-03 11:54:51.637 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 11:54:51.677 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 11:54:51.865 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 11:54:51.868 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 11:54:51.906 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 11:54:52.900 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 11:54:52.903 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 11:54:52.904 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 11:54:52.904 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 11:54:52.904 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 11:54:52.904 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 11:54:52.908 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 11:54:52.916 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 11:54:52.917 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 11:54:52.920 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 11:54:52.921 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 11:54:52.923 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 11:54:52.926 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 11:54:52.936 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 11:54:52.937 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 11:54:52.938 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 11:54:52.939 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 11:54:52.943 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 11:54:53.328 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 11:54:53.330 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 11:54:53.414 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 11:54:54.478 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 11:54:54.920 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 11:54:55.081 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 11:54:55.548 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 11:54:55.699 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 11:54:55.773 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 11:54:56.473 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 11:54:56.556 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 11:54:56.641 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 11:54:56.659 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 11:54:56.768 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-08-03 11:54:56.769 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-08-03 11:54:56.770 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 11:54:56.770 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 11:54:56.808 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 11:54:56.809 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 146 ms
2025-08-03 11:54:56.829 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 11:54:56.854 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 1 mappings in 'requestMappingHandlerMapping'
2025-08-03 11:54:56.863 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 11:54:56.877 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 11:54:56.884 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2025-08-03 11:54:56.889 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-08-03 11:54:56.906 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 9.969 seconds (process running for 10.725)
2025-08-03 11:54:57.127 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 11:54:57.172 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 11:54:57.175 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 11:54:57.177 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 11:54:57.593 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.608 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.609 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.611 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.612 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.613 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.627 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.629 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.631 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.632 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.633 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.634 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.651 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.654 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.656 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.658 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.659 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.661 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.673 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.682 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.684 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.685 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.686 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.687 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.689 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.691 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.691 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.692 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.693 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.693 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.694 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.695 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.695 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.696 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.697 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.698 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.698 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.699 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.700 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.700 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.701 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.702 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.705 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:54:57.707 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:54:57.708 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:54:57.710 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.711 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.714 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.716 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.723 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:54:57.725 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:54:57.726 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:54:57.728 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.730 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.731 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.732 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.734 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:54:57.735 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:54:57.736 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:54:57.737 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.739 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.740 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.741 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.742 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:54:57.744 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:54:57.745 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:54:57.747 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.748 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.749 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.749 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.751 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:54:57.752 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:54:57.753 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:54:57.754 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:54:57.755 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.757 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.758 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.758 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.759 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.803 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 11:54:57.811 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 11:54:57.819 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 11:54:57.826 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 11:54:57.830 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 11:54:57.837 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 11:54:57.845 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 11:54:57.853 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 11:54:57.856 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.862 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 11:54:57.863 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.866 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 11:54:57.868 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.870 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.872 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.873 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.874 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.878 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 11:54:57.883 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 11:54:57.886 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:54:57.888 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.889 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:54:57.890 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.897 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 11:54:57.898 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:54:57.900 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.902 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:54:57.904 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.905 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:54:57.906 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.912 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 11:55:01.648 [http-nio-8081-exec-1] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServletRegistration'
2025-08-03 11:55:01.666 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServletRegistration'
2025-08-03 11:55:01.666 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 11:55:01.666 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 11:55:01.666 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 11:55:01.666 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@32b76eb2
2025-08-03 11:55:01.666 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@307ac9a5
2025-08-03 11:55:01.667 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 11:55:01.667 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-03 11:55:01.678 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/info
2025-08-03 11:55:01.698 [http-nio-8081-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:55:01.700 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:55:01.701 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:55:01.710 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/info
2025-08-03 11:55:01.713 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/info", parameters={}
2025-08-03 11:55:01.734 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 11:55:01.747 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 11:55:01.773 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{}]
2025-08-03 11:55:01.786 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 11:55:01.863 [http-nio-8081-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 11:55:01.865 [http-nio-8081-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:55:01.866 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:55:01.866 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:55:01.872 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:55:01.880 [http-nio-8081-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 11:55:01.882 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:55:01.882 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:55:05.846 [http-nio-8081-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-03 11:55:05.847 [http-nio-8081-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:55:05.847 [http-nio-8081-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:55:05.847 [http-nio-8081-exec-5] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:55:05.848 [http-nio-8081-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-03 11:55:05.848 [http-nio-8081-exec-5] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-08-03 11:55:05.849 [http-nio-8081-exec-5] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 11:55:05.895 [http-nio-8081-exec-5] DEBUG [] o.s.web.client.RestTemplate - HTTP GET https://httpbin.org/status/200
2025-08-03 11:55:05.898 [http-nio-8081-exec-5] DEBUG [] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 11:55:08.846 [http-nio-8081-exec-5] DEBUG [] o.s.web.client.RestTemplate - Response 200 OK
2025-08-03 11:55:08.856 [http-nio-8081-exec-5] DEBUG [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 11:55:08.883 [http-nio-8081-exec-5] DEBUG [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@1af57daf]
2025-08-03 11:55:08.892 [http-nio-8081-exec-5] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 11:55:08.951 [http-nio-8081-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 11:55:08.953 [http-nio-8081-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:55:08.954 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:55:08.954 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:55:08.955 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:55:08.956 [http-nio-8081-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 11:55:08.957 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:55:08.957 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:55:42.560 [http-nio-8081-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/info
2025-08-03 11:55:42.562 [http-nio-8081-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:55:42.563 [http-nio-8081-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:55:42.563 [http-nio-8081-exec-9] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:55:42.565 [http-nio-8081-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/info
2025-08-03 11:55:42.566 [http-nio-8081-exec-9] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/info", parameters={}
2025-08-03 11:55:42.567 [http-nio-8081-exec-9] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 11:55:42.568 [http-nio-8081-exec-9] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 11:55:42.569 [http-nio-8081-exec-9] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{}]
2025-08-03 11:55:42.570 [http-nio-8081-exec-9] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 11:55:42.600 [http-nio-8081-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 11:55:42.600 [http-nio-8081-exec-10] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:55:42.601 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:55:42.601 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:55:42.603 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:55:42.605 [http-nio-8081-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 11:55:42.606 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:55:42.607 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:55:50.616 [http-nio-8081-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/info
2025-08-03 11:55:50.618 [http-nio-8081-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:55:50.618 [http-nio-8081-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:55:50.618 [http-nio-8081-exec-4] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:55:50.619 [http-nio-8081-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/info
2025-08-03 11:55:50.620 [http-nio-8081-exec-4] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/info", parameters={}
2025-08-03 11:55:50.622 [http-nio-8081-exec-4] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 11:55:50.623 [http-nio-8081-exec-4] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 11:55:50.623 [http-nio-8081-exec-4] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{}]
2025-08-03 11:55:50.624 [http-nio-8081-exec-4] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 11:55:50.654 [http-nio-8081-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 11:55:50.655 [http-nio-8081-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:55:50.656 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:55:50.656 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:55:50.657 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:55:50.659 [http-nio-8081-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 11:55:50.661 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:55:50.662 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:56:56.500 [http-nio-8080-exec-2] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 11:56:56.500 [http-nio-8080-exec-2] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 11:56:56.501 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 11:56:56.501 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 11:56:56.501 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 11:56:56.510 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6cabb6c
2025-08-03 11:56:56.511 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@6056839b
2025-08-03 11:56:56.511 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 11:56:56.511 [http-nio-8080-exec-2] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2025-08-03 11:56:56.598 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-08-03 11:56:56.749 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:56:56.752 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-08-03 11:56:56.789 [http-nio-8080-exec-2] DEBUG [c00669e6b289446d] o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-08-03 11:56:56.789 [http-nio-8080-exec-2] DEBUG [c00669e6b289446d] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.AuthController#login(LoginRequestDTO)
2025-08-03 11:56:56.838 [http-nio-8080-exec-2] DEBUG [c00669e6b289446d] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.deliverytech.delivery.dto.request.LoginRequestDTO@444701a2]
2025-08-03 11:56:56.952 [http-nio-8080-exec-2] DEBUG [c00669e6b289446d] org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.ativo,
        u1_0.data_criacao,
        u1_0.email,
        u1_0.nome,
        u1_0.restaurante_id,
        u1_0.role,
        u1_0.senha 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
        and u1_0.ativo=?
2025-08-03 11:56:57.026 [http-nio-8080-exec-2] DEBUG [c00669e6b289446d] o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-08-03 11:56:57.029 [http-nio-8080-exec-2] DEBUG [c00669e6b289446d] org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.ativo,
        u1_0.data_criacao,
        u1_0.email,
        u1_0.nome,
        u1_0.restaurante_id,
        u1_0.role,
        u1_0.senha 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
        and u1_0.ativo=?
2025-08-03 11:56:57.059 [http-nio-8080-exec-2] DEBUG [c00669e6b289446d] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 11:56:57.060 [http-nio-8080-exec-2] DEBUG [c00669e6b289446d] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@46814aa0]
2025-08-03 11:56:57.067 [http-nio-8080-exec-2] DEBUG [c00669e6b289446d] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 11:57:10.235 [http-nio-8081-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/info
2025-08-03 11:57:10.241 [http-nio-8081-exec-7] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.ativo,
        u1_0.data_criacao,
        u1_0.email,
        u1_0.nome,
        u1_0.restaurante_id,
        u1_0.role,
        u1_0.senha 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
        and u1_0.ativo=?
2025-08-03 11:57:10.243 [http-nio-8081-exec-7] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Authorities do usuário: [ROLE_ADMIN]
2025-08-03 11:57:10.248 [http-nio-8081-exec-7] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Usuário autenticado com sucesso: admin@admin.com
2025-08-03 11:57:10.248 [http-nio-8081-exec-7] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Authorities após autenticação: [ROLE_ADMIN]
2025-08-03 11:57:10.250 [http-nio-8081-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/info
2025-08-03 11:57:10.250 [http-nio-8081-exec-7] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/info", parameters={}
2025-08-03 11:57:10.251 [http-nio-8081-exec-7] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 11:57:10.251 [http-nio-8081-exec-7] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json', given [*/*] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 11:57:10.251 [http-nio-8081-exec-7] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{}]
2025-08-03 11:57:10.252 [http-nio-8081-exec-7] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:00:10.706 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 12:00:10.789 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 12:00:10.792 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 12:00:10.798 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 12:00:10.907 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 12:00:10.920 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 12:00:10.940 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 12:00:10.943 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 12:00:10.944 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 12:00:10.944 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 12:00:10.945 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 12:00:11.018 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 12:00:11.019 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 12:00:11.024 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 12:00:45.624 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 12824 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 12:00:45.625 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 12:00:45.626 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 12:00:45.671 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 12:00:45.671 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 12:00:48.040 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 12:00:48.151 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 100 ms. Found 5 JPA repository interfaces.
2025-08-03 12:00:49.095 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 12:00:49.109 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 12:00:49.112 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 12:00:49.112 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 12:00:49.178 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 12:00:49.178 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3506 ms
2025-08-03 12:00:50.057 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 12:00:50.095 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 12:00:50.292 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 12:00:50.294 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 12:00:50.324 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 12:00:51.358 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 12:00:51.362 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 12:00:51.362 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 12:00:51.364 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 12:00:51.364 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 12:00:51.364 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 12:00:51.369 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 12:00:51.378 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 12:00:51.380 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 12:00:51.381 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 12:00:51.382 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 12:00:51.385 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 12:00:51.387 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 12:00:51.398 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 12:00:51.400 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 12:00:51.401 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 12:00:51.402 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 12:00:51.406 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 12:00:51.922 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 12:00:51.923 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 12:00:52.027 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 12:00:53.157 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 12:00:53.609 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 12:00:53.763 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 12:00:54.105 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 12:00:54.224 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 12:00:54.299 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 12:00:54.863 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 12:00:54.915 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 12:00:54.980 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 12:00:54.997 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 12:00:55.098 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-08-03 12:00:55.099 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-08-03 12:00:55.100 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 12:00:55.101 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 12:00:55.133 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 12:00:55.134 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 132 ms
2025-08-03 12:00:55.154 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 12:00:55.176 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 1 mappings in 'requestMappingHandlerMapping'
2025-08-03 12:00:55.183 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 12:00:55.192 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 12:00:55.197 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2025-08-03 12:00:55.201 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-08-03 12:00:55.217 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 10.322 seconds (process running for 11.201)
2025-08-03 12:00:55.465 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 12:00:55.500 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 12:00:55.502 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 12:00:55.504 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 12:00:55.912 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.923 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.924 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.925 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.926 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.926 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.935 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.936 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.937 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.938 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.938 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.939 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.950 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.952 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.953 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.965 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.966 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.966 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.974 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:55.983 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:55.984 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:55.986 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:55.987 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:55.988 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:55.990 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.991 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.991 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.992 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.993 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.993 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.994 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.994 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.995 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.995 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.996 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.997 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.997 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.998 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.998 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.999 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.000 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.000 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.004 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:00:56.006 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:00:56.008 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:00:56.010 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.012 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.014 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.015 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.021 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:00:56.022 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:00:56.024 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:00:56.025 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.027 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.028 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.029 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.030 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:00:56.032 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:00:56.033 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:00:56.033 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.035 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.036 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.037 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.039 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:00:56.040 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:00:56.041 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:00:56.042 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.043 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.044 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.045 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.046 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:00:56.047 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:00:56.049 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:00:56.049 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:00:56.050 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.052 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.053 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.053 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.054 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.096 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 12:00:56.100 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 12:00:56.107 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 12:00:56.112 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 12:00:56.116 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 12:00:56.121 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 12:00:56.125 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 12:00:56.130 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 12:00:56.132 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.139 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 12:00:56.141 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.145 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 12:00:56.146 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.148 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.148 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.149 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.150 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.154 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 12:00:56.160 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 12:00:56.161 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:00:56.163 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.164 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:00:56.165 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.174 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 12:00:56.175 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:00:56.176 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.177 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:00:56.178 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.179 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:00:56.180 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.186 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 12:01:00.988 [http-nio-8081-exec-1] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServletRegistration'
2025-08-03 12:01:00.988 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServletRegistration'
2025-08-03 12:01:00.988 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 12:01:00.988 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 12:01:00.988 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 12:01:00.989 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@33700fef
2025-08-03 12:01:00.989 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@25a60772
2025-08-03 12:01:00.989 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 12:01:00.989 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-03 12:01:01.020 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/info
2025-08-03 12:01:01.035 [http-nio-8081-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:01:01.039 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:01:01.039 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 12:01:01.047 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/info
2025-08-03 12:01:01.049 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/info", parameters={}
2025-08-03 12:01:01.068 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 12:01:01.080 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 12:01:01.101 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{}]
2025-08-03 12:01:01.113 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:01:01.189 [http-nio-8081-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 12:01:01.190 [http-nio-8081-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:01:01.191 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:01:01.191 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 12:01:01.196 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 12:01:01.203 [http-nio-8081-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 12:01:01.205 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:01:01.205 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 12:01:12.265 [http-nio-8080-exec-2] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 12:01:12.265 [http-nio-8080-exec-2] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 12:01:12.265 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 12:01:12.265 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 12:01:12.265 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 12:01:12.266 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1e3db750
2025-08-03 12:01:12.267 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@7949512
2025-08-03 12:01:12.267 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 12:01:12.267 [http-nio-8080-exec-2] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-03 12:01:12.274 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-08-03 12:01:12.333 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:01:12.335 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-08-03 12:01:12.336 [http-nio-8080-exec-2] DEBUG [d7abfbc8b4214407] o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-08-03 12:01:12.336 [http-nio-8080-exec-2] DEBUG [d7abfbc8b4214407] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.AuthController#login(LoginRequestDTO)
2025-08-03 12:01:12.375 [http-nio-8080-exec-2] DEBUG [d7abfbc8b4214407] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.deliverytech.delivery.dto.request.LoginRequestDTO@7cdbe68c]
2025-08-03 12:01:12.512 [http-nio-8080-exec-2] DEBUG [d7abfbc8b4214407] org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.ativo,
        u1_0.data_criacao,
        u1_0.email,
        u1_0.nome,
        u1_0.restaurante_id,
        u1_0.role,
        u1_0.senha 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
        and u1_0.ativo=?
2025-08-03 12:01:12.578 [http-nio-8080-exec-2] DEBUG [d7abfbc8b4214407] o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-08-03 12:01:12.580 [http-nio-8080-exec-2] DEBUG [d7abfbc8b4214407] org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.ativo,
        u1_0.data_criacao,
        u1_0.email,
        u1_0.nome,
        u1_0.restaurante_id,
        u1_0.role,
        u1_0.senha 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
        and u1_0.ativo=?
2025-08-03 12:01:12.600 [http-nio-8080-exec-2] DEBUG [d7abfbc8b4214407] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:01:12.600 [http-nio-8080-exec-2] DEBUG [d7abfbc8b4214407] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@74e5ed47]
2025-08-03 12:01:12.604 [http-nio-8080-exec-2] DEBUG [d7abfbc8b4214407] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:01:22.993 [http-nio-8081-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/info
2025-08-03 12:01:22.999 [http-nio-8081-exec-7] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.ativo,
        u1_0.data_criacao,
        u1_0.email,
        u1_0.nome,
        u1_0.restaurante_id,
        u1_0.role,
        u1_0.senha 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
        and u1_0.ativo=?
2025-08-03 12:01:23.000 [http-nio-8081-exec-7] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Authorities do usuário: [ROLE_ADMIN]
2025-08-03 12:01:23.002 [http-nio-8081-exec-7] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Usuário autenticado com sucesso: admin@admin.com
2025-08-03 12:01:23.003 [http-nio-8081-exec-7] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Authorities após autenticação: [ROLE_ADMIN]
2025-08-03 12:01:23.004 [http-nio-8081-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/info
2025-08-03 12:01:23.004 [http-nio-8081-exec-7] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/info", parameters={}
2025-08-03 12:01:23.004 [http-nio-8081-exec-7] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 12:01:23.005 [http-nio-8081-exec-7] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json', given [*/*] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 12:01:23.005 [http-nio-8081-exec-7] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{}]
2025-08-03 12:01:23.006 [http-nio-8081-exec-7] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:02:22.310 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 12:02:22.316 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 12:02:22.318 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 12:02:22.322 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 12:02:22.339 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 12:02:22.340 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 12:02:22.342 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 12:02:22.343 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 12:02:22.343 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 12:02:22.344 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 12:02:22.344 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 12:02:22.357 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 12:02:22.357 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 12:02:22.359 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 12:08:23.566 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 23732 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 12:08:23.656 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 12:08:23.657 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 12:08:23.721 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 12:08:23.721 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 12:08:27.160 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 12:08:27.264 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 90 ms. Found 5 JPA repository interfaces.
2025-08-03 12:08:28.391 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 12:08:28.416 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 12:08:28.420 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 12:08:28.421 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 12:08:28.506 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 12:08:28.507 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4785 ms
2025-08-03 12:08:29.414 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 12:08:29.443 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 12:08:29.619 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 12:08:29.622 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 12:08:29.647 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 12:08:30.671 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 12:08:30.674 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 12:08:30.674 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 12:08:30.675 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 12:08:30.675 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 12:08:30.675 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 12:08:30.679 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 12:08:30.687 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 12:08:30.688 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 12:08:30.690 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 12:08:30.691 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 12:08:30.694 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 12:08:30.696 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 12:08:30.706 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 12:08:30.707 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 12:08:30.708 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 12:08:30.709 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 12:08:30.713 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 12:08:31.176 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 12:08:31.177 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 12:08:31.259 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 12:08:32.413 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 12:08:32.805 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 12:08:32.914 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 12:08:33.191 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 12:08:33.294 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 12:08:33.349 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 12:08:33.932 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 12:08:34.176 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 12:08:34.263 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 12:08:34.284 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 12:08:34.374 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-08-03 12:08:34.375 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-08-03 12:08:34.375 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 12:08:34.376 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 12:08:34.410 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 12:08:34.411 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 123 ms
2025-08-03 12:08:34.434 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 12:08:34.465 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 1 mappings in 'requestMappingHandlerMapping'
2025-08-03 12:08:34.472 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 12:08:34.482 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 12:08:34.490 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2025-08-03 12:08:34.496 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-08-03 12:08:34.516 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 12.481 seconds (process running for 13.401)
2025-08-03 12:08:34.771 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 12:08:34.807 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 12:08:34.810 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 12:08:34.812 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 12:08:35.222 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.236 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.237 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.237 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.238 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.239 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.248 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.250 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.250 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.251 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.251 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.252 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.263 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.265 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.266 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.267 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.268 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.268 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.278 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.287 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.288 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.290 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.291 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.292 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.294 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.295 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.295 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.296 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.297 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.297 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.298 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.298 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.299 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.299 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.300 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.301 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.301 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.302 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.302 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.303 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.304 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.304 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.307 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:08:35.310 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:08:35.311 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:08:35.312 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.314 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.316 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.317 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.322 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:08:35.324 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:08:35.325 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:08:35.326 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.327 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.328 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.328 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.330 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:08:35.331 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:08:35.332 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:08:35.333 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.335 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.335 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.336 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.338 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:08:35.339 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:08:35.340 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:08:35.341 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.342 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.343 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.344 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.345 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:08:35.346 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:08:35.347 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:08:35.348 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:08:35.349 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.350 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.351 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.352 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.353 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.392 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 12:08:35.398 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 12:08:35.405 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 12:08:35.412 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 12:08:35.415 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 12:08:35.421 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 12:08:35.425 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 12:08:35.430 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 12:08:35.432 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.438 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 12:08:35.440 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.444 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 12:08:35.445 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.447 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.448 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.448 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.449 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.453 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 12:08:35.458 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 12:08:35.459 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:08:35.460 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.461 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:08:35.463 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.469 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 12:08:35.470 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:08:35.471 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.472 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:08:35.473 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.474 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:08:35.475 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.480 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 12:08:40.217 [http-nio-8081-exec-1] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServletRegistration'
2025-08-03 12:08:40.217 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServletRegistration'
2025-08-03 12:08:40.217 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 12:08:40.217 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 12:08:40.217 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 12:08:40.217 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@78eab227
2025-08-03 12:08:40.217 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@445db8ee
2025-08-03 12:08:40.218 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 12:08:40.218 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-03 12:08:40.240 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/info
2025-08-03 12:08:40.259 [http-nio-8081-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:08:40.262 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:08:40.262 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 12:08:40.269 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/info
2025-08-03 12:08:40.273 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/info", parameters={}
2025-08-03 12:08:40.302 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 12:08:40.315 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 12:08:40.339 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{}]
2025-08-03 12:08:40.351 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:08:40.501 [http-nio-8081-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 12:08:40.503 [http-nio-8081-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:08:40.503 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:08:40.503 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 12:08:40.511 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 12:08:40.521 [http-nio-8081-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 12:08:40.522 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:08:40.523 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 12:10:06.797 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 12:10:06.803 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 12:10:06.804 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 12:10:06.809 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 12:10:06.821 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 12:10:06.823 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 12:10:06.825 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 12:10:06.826 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 12:10:06.826 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 12:10:06.827 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 12:10:06.827 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 12:10:06.837 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 12:10:06.837 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 12:10:06.839 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 12:10:15.160 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 21640 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 12:10:15.162 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 12:10:15.162 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 12:10:15.211 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 12:10:15.211 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 12:10:17.418 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 12:10:17.537 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 104 ms. Found 5 JPA repository interfaces.
2025-08-03 12:10:18.445 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 12:10:18.458 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 12:10:18.460 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 12:10:18.460 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 12:10:18.522 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 12:10:18.523 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3310 ms
2025-08-03 12:10:19.366 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 12:10:19.401 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 12:10:19.596 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 12:10:19.599 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 12:10:19.632 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 12:10:20.731 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 12:10:20.735 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 12:10:20.735 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 12:10:20.735 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 12:10:20.735 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 12:10:20.736 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 12:10:20.740 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 12:10:20.750 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 12:10:20.751 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 12:10:20.753 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 12:10:20.754 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 12:10:20.755 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 12:10:20.758 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 12:10:20.768 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 12:10:20.769 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 12:10:20.771 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 12:10:20.772 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 12:10:20.775 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 12:10:21.263 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 12:10:21.264 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 12:10:21.361 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 12:10:22.508 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 12:10:22.896 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 12:10:23.018 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 12:10:23.350 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 12:10:23.475 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 12:10:23.545 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 12:10:24.114 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 12:10:24.164 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 12:10:24.221 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 12:10:24.239 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 12:10:24.340 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-08-03 12:10:24.342 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-08-03 12:10:24.343 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 12:10:24.343 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 12:10:24.375 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 12:10:24.375 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 133 ms
2025-08-03 12:10:24.392 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 12:10:24.412 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 1 mappings in 'requestMappingHandlerMapping'
2025-08-03 12:10:24.419 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 12:10:24.430 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 12:10:24.435 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2025-08-03 12:10:24.438 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-08-03 12:10:24.452 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 10.209 seconds (process running for 10.903)
2025-08-03 12:10:24.677 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 12:10:24.713 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 12:10:24.715 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 12:10:24.717 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 12:10:25.121 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.133 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.134 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.135 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.136 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.136 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.145 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.146 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.147 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.148 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.148 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.149 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.160 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.161 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.162 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.163 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.163 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.164 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.173 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.184 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.185 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.186 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.187 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.188 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.190 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.191 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.191 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.192 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.193 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.193 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.194 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.194 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.195 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.195 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.196 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.196 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.197 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.198 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.198 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.199 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.199 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.200 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.203 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:10:25.205 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:10:25.207 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:10:25.208 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.210 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.212 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.213 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.219 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:10:25.220 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:10:25.236 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:10:25.237 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.238 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.239 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.239 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.240 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:10:25.241 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:10:25.242 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:10:25.243 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.244 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.245 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.245 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.246 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:10:25.247 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:10:25.248 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:10:25.249 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.250 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.251 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.251 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.253 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:10:25.254 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:10:25.254 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:10:25.255 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:10:25.256 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.257 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.258 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.259 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.259 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.303 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 12:10:25.308 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 12:10:25.316 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 12:10:25.321 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 12:10:25.325 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 12:10:25.352 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 12:10:25.359 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 12:10:25.365 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 12:10:25.368 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.375 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 12:10:25.377 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.381 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 12:10:25.383 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.383 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.384 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.385 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.386 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.392 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 12:10:25.399 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 12:10:25.401 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:10:25.402 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.403 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:10:25.404 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.412 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 12:10:25.414 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:10:25.415 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.417 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:10:25.419 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.420 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:10:25.421 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.432 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 12:10:29.155 [http-nio-8081-exec-1] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServletRegistration'
2025-08-03 12:10:29.155 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServletRegistration'
2025-08-03 12:10:29.156 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 12:10:29.156 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 12:10:29.156 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 12:10:29.156 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5de30c3e
2025-08-03 12:10:29.156 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@5ac89aba
2025-08-03 12:10:29.156 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 12:10:29.156 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-03 12:10:29.170 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/info
2025-08-03 12:10:29.189 [http-nio-8081-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:10:29.191 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:10:29.191 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 12:10:29.199 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/info
2025-08-03 12:10:29.202 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/info", parameters={}
2025-08-03 12:10:29.221 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 12:10:29.231 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 12:10:29.255 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{}]
2025-08-03 12:10:29.268 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:10:29.305 [http-nio-8081-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 12:10:29.308 [http-nio-8081-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:10:29.309 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:10:29.309 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 12:10:29.317 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 12:10:29.327 [http-nio-8081-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 12:10:29.329 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:10:29.329 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 12:11:40.516 [File Watcher] INFO  [] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-08-03 12:11:40.537 [Thread-5] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 12:11:40.541 [tomcat-shutdown] INFO  [] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-08-03 12:11:40.558 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 12:11:40.559 [Thread-5] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 12:11:40.559 [tomcat-shutdown] INFO  [] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8081"]
2025-08-03 12:11:40.564 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 12:11:40.564 [Thread-5] INFO  [] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8081"]
2025-08-03 12:11:40.567 [Thread-5] INFO  [] o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-03 12:11:40.568 [Thread-5] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServletRegistration'
2025-08-03 12:11:40.571 [Thread-5] INFO  [] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-08-03 12:11:40.578 [Thread-5] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 12:11:40.580 [Thread-5] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 12:11:40.582 [Thread-5] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 12:11:40.583 [Thread-5] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 12:11:40.583 [Thread-5] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 12:11:40.584 [Thread-5] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 12:11:40.584 [Thread-5] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 12:11:40.594 [Thread-5] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 12:11:40.594 [Thread-5] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 12:11:40.596 [Thread-5] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 12:11:40.807 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 21640 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 12:11:40.808 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 12:11:40.808 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 12:11:41.705 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 12:11:41.731 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 5 JPA repository interfaces.
2025-08-03 12:11:41.851 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 12:11:41.852 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 12:11:41.852 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 12:11:41.852 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 12:11:41.879 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 12:11:41.879 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1068 ms
2025-08-03 12:11:41.986 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 12:11:41.987 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-03 12:11:41.989 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 12:11:41.990 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-03 12:11:41.990 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 12:11:42.164 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 12:11:42.164 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 12:11:42.165 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 12:11:42.165 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 12:11:42.165 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 12:11:42.165 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 12:11:42.165 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 12:11:42.166 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 12:11:42.167 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 12:11:42.189 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 12:11:42.190 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 12:11:42.191 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 12:11:42.192 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 12:11:42.193 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 12:11:42.194 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 12:11:42.195 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 12:11:42.196 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 12:11:42.198 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 12:11:42.253 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 12:11:42.253 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 12:11:42.381 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 12:11:42.557 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 12:11:42.588 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 12:11:42.654 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 12:11:42.676 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 12:11:42.683 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 12:11:42.744 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 12:11:42.758 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 12:11:42.777 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 12:11:42.782 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 12:11:42.838 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-08-03 12:11:42.839 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-08-03 12:11:42.839 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 12:11:42.839 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 12:11:42.865 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 12:11:42.865 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 81 ms
2025-08-03 12:11:42.873 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 12:11:42.882 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 1 mappings in 'requestMappingHandlerMapping'
2025-08-03 12:11:42.886 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 12:11:42.892 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 12:11:42.896 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2025-08-03 12:11:42.901 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-08-03 12:11:42.909 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 2.168 seconds (process running for 89.36)
2025-08-03 12:11:42.913 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 12:11:42.918 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 12:11:42.921 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 12:11:42.924 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 12:11:43.304 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.306 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.307 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.307 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.307 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.308 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.310 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.311 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.311 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.312 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.312 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.313 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.315 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.317 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.317 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.318 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.319 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.319 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.321 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.323 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.325 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.326 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.327 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.328 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.329 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.330 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.330 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.331 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.331 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.332 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.332 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.333 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.333 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.334 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.334 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.335 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.335 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.335 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.336 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.336 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.337 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.337 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.339 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:11:43.341 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:11:43.342 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:11:43.343 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.345 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.346 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.346 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.348 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:11:43.349 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:11:43.349 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:11:43.350 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.351 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.353 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.354 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.356 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:11:43.357 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:11:43.358 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:11:43.358 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.359 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.360 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.360 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.361 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:11:43.362 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:11:43.364 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:11:43.365 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.365 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.366 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.367 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.368 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:11:43.369 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:11:43.370 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:11:43.371 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:11:43.372 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.373 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.374 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.374 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.375 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.399 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 12:11:43.401 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 12:11:43.404 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 12:11:43.407 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 12:11:43.409 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 12:11:43.412 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 12:11:43.416 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 12:11:43.419 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 12:11:43.420 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.423 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 12:11:43.423 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.425 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 12:11:43.426 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.426 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.427 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.428 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.428 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.431 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 12:11:43.433 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 12:11:43.434 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:11:43.434 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.435 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:11:43.435 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.437 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 12:11:43.438 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:11:43.439 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.439 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:11:43.439 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.440 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:11:43.440 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.443 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 12:11:43.446 [restartedMain] INFO  [] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-08-03 12:11:49.031 [http-nio-8081-exec-1] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServletRegistration'
2025-08-03 12:11:49.031 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServletRegistration'
2025-08-03 12:11:49.031 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 12:11:49.031 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 12:11:49.031 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 12:11:49.031 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@740eb9d0
2025-08-03 12:11:49.031 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@14c8e8dd
2025-08-03 12:11:49.031 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 12:11:49.032 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-08-03 12:11:49.032 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/info
2025-08-03 12:11:49.034 [http-nio-8081-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:11:49.035 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:11:49.035 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 12:11:49.038 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/info
2025-08-03 12:11:49.038 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/info", parameters={}
2025-08-03 12:11:49.040 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 12:11:49.041 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 12:11:49.042 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{}]
2025-08-03 12:11:49.043 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:11:49.086 [http-nio-8081-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 12:11:49.088 [http-nio-8081-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:11:49.089 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:11:49.089 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 12:11:49.096 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 12:11:49.099 [http-nio-8081-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 12:11:49.101 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:11:49.102 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 12:15:41.324 [http-nio-8080-exec-1] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 12:15:41.340 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 12:15:41.345 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 12:15:41.346 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 12:15:41.346 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 12:15:41.389 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2c5a2e75
2025-08-03 12:15:41.389 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@2beec029
2025-08-03 12:15:41.391 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 12:15:41.391 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 51 ms
2025-08-03 12:15:41.693 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard.html
2025-08-03 12:15:41.700 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:15:41.702 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:15:41.705 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 12:15:41.743 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard.html
2025-08-03 12:15:41.919 [http-nio-8080-exec-1] WARN  [671e60a5e34c4b0a] o.a.c.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [122] milliseconds.
2025-08-03 12:15:41.958 [http-nio-8080-exec-1] DEBUG [671e60a5e34c4b0a] o.s.web.servlet.DispatcherServlet - GET "/dashboard.html", parameters={}
2025-08-03 12:15:41.971 [http-nio-8080-exec-1] DEBUG [671e60a5e34c4b0a] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-03 12:15:42.096 [http-nio-8080-exec-1] DEBUG [671e60a5e34c4b0a] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:15:42.327 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:15:42.328 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:15:42.329 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:15:42.331 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:15:42.331 [http-nio-8080-exec-2] DEBUG [462caca5f62940b5] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:15:42.333 [http-nio-8080-exec-2] DEBUG [462caca5f62940b5] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:15:42.390 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 12:15:42.391 [http-nio-8080-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:15:42.391 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:15:42.422 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 12:15:42.427 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 12:15:42.428 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:15:42.428 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 12:15:44.994 [http-nio-8080-exec-2] DEBUG [462caca5f62940b5] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:15:44.999 [http-nio-8080-exec-2] DEBUG [462caca5f62940b5] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:15:45.209 [http-nio-8080-exec-2] DEBUG [462caca5f62940b5] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:15:47.324 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:15:47.324 [http-nio-8080-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:15:47.325 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:15:47.326 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:15:47.326 [http-nio-8080-exec-4] DEBUG [e2cd93cf69004124] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:15:47.326 [http-nio-8080-exec-4] DEBUG [e2cd93cf69004124] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:15:47.328 [http-nio-8080-exec-4] DEBUG [e2cd93cf69004124] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:15:47.328 [http-nio-8080-exec-4] DEBUG [e2cd93cf69004124] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:15:47.330 [http-nio-8080-exec-4] DEBUG [e2cd93cf69004124] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:15:53.186 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:15:53.186 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:15:53.187 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:15:53.188 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:15:53.188 [http-nio-8080-exec-7] DEBUG [9474ac1dd6c04dee] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:15:53.188 [http-nio-8080-exec-7] DEBUG [9474ac1dd6c04dee] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:15:53.190 [http-nio-8080-exec-7] DEBUG [9474ac1dd6c04dee] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:15:53.191 [http-nio-8080-exec-7] DEBUG [9474ac1dd6c04dee] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:15:53.191 [http-nio-8080-exec-7] DEBUG [9474ac1dd6c04dee] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:15:58.192 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:15:58.195 [http-nio-8080-exec-8] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:15:58.196 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:15:58.199 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:15:58.200 [http-nio-8080-exec-8] DEBUG [4095e4545ffa4e63] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:15:58.201 [http-nio-8080-exec-8] DEBUG [4095e4545ffa4e63] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:15:58.206 [http-nio-8080-exec-8] DEBUG [4095e4545ffa4e63] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:15:58.207 [http-nio-8080-exec-8] DEBUG [4095e4545ffa4e63] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:15:58.209 [http-nio-8080-exec-8] DEBUG [4095e4545ffa4e63] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:16:03.183 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:16:03.184 [http-nio-8080-exec-10] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:16:03.185 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:16:03.187 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:16:03.187 [http-nio-8080-exec-10] DEBUG [21ef21c2a93c4093] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:16:03.187 [http-nio-8080-exec-10] DEBUG [21ef21c2a93c4093] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:16:03.191 [http-nio-8080-exec-10] DEBUG [21ef21c2a93c4093] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:16:03.192 [http-nio-8080-exec-10] DEBUG [21ef21c2a93c4093] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:16:03.194 [http-nio-8080-exec-10] DEBUG [21ef21c2a93c4093] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:16:08.189 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:16:08.192 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:16:08.193 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:16:08.197 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:16:08.198 [http-nio-8080-exec-1] DEBUG [e29c7592729d4499] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:16:08.198 [http-nio-8080-exec-1] DEBUG [e29c7592729d4499] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:16:08.204 [http-nio-8080-exec-1] DEBUG [e29c7592729d4499] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:16:08.205 [http-nio-8080-exec-1] DEBUG [e29c7592729d4499] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:16:08.207 [http-nio-8080-exec-1] DEBUG [e29c7592729d4499] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:16:13.199 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:16:13.203 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:16:13.204 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:16:13.208 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:16:13.209 [http-nio-8080-exec-2] DEBUG [6ceaa57462a14983] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:16:13.209 [http-nio-8080-exec-2] DEBUG [6ceaa57462a14983] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:16:13.213 [http-nio-8080-exec-2] DEBUG [6ceaa57462a14983] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:16:13.214 [http-nio-8080-exec-2] DEBUG [6ceaa57462a14983] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:16:13.218 [http-nio-8080-exec-2] DEBUG [6ceaa57462a14983] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:16:18.195 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:16:18.197 [http-nio-8080-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:16:18.197 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:16:18.203 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:16:18.204 [http-nio-8080-exec-4] DEBUG [30e565cf41cb491b] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:16:18.205 [http-nio-8080-exec-4] DEBUG [30e565cf41cb491b] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:16:18.209 [http-nio-8080-exec-4] DEBUG [30e565cf41cb491b] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:16:18.210 [http-nio-8080-exec-4] DEBUG [30e565cf41cb491b] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:16:18.212 [http-nio-8080-exec-4] DEBUG [30e565cf41cb491b] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:16:23.198 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:16:23.202 [http-nio-8080-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:16:23.203 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:16:23.207 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:16:23.208 [http-nio-8080-exec-6] DEBUG [a509d2ff2f9d4935] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:16:23.208 [http-nio-8080-exec-6] DEBUG [a509d2ff2f9d4935] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:16:23.211 [http-nio-8080-exec-6] DEBUG [a509d2ff2f9d4935] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:16:23.212 [http-nio-8080-exec-6] DEBUG [a509d2ff2f9d4935] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:16:23.213 [http-nio-8080-exec-6] DEBUG [a509d2ff2f9d4935] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:16:28.177 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:16:28.178 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:16:28.178 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:16:28.179 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:16:28.179 [http-nio-8080-exec-7] DEBUG [470b3be51be84c0f] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:16:28.180 [http-nio-8080-exec-7] DEBUG [470b3be51be84c0f] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:16:28.181 [http-nio-8080-exec-7] DEBUG [470b3be51be84c0f] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:16:28.181 [http-nio-8080-exec-7] DEBUG [470b3be51be84c0f] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:16:28.183 [http-nio-8080-exec-7] DEBUG [470b3be51be84c0f] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:16:33.189 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:16:33.192 [http-nio-8080-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:16:33.193 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:16:33.197 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:16:33.198 [http-nio-8080-exec-9] DEBUG [1f1da07934d743bb] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:16:33.199 [http-nio-8080-exec-9] DEBUG [1f1da07934d743bb] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:16:33.204 [http-nio-8080-exec-9] DEBUG [1f1da07934d743bb] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:16:33.204 [http-nio-8080-exec-9] DEBUG [1f1da07934d743bb] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:16:33.207 [http-nio-8080-exec-9] DEBUG [1f1da07934d743bb] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:16:38.179 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:16:38.179 [http-nio-8080-exec-10] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:16:38.180 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:16:38.180 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:16:38.180 [http-nio-8080-exec-10] DEBUG [0a8229e7582b478e] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:16:38.181 [http-nio-8080-exec-10] DEBUG [0a8229e7582b478e] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:16:38.182 [http-nio-8080-exec-10] DEBUG [0a8229e7582b478e] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:16:38.182 [http-nio-8080-exec-10] DEBUG [0a8229e7582b478e] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:16:38.183 [http-nio-8080-exec-10] DEBUG [0a8229e7582b478e] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:16:43.186 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:16:43.190 [http-nio-8080-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:16:43.192 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:16:43.197 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:16:43.198 [http-nio-8080-exec-3] DEBUG [7f2464e3f3a54e09] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:16:43.199 [http-nio-8080-exec-3] DEBUG [7f2464e3f3a54e09] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:16:43.204 [http-nio-8080-exec-3] DEBUG [7f2464e3f3a54e09] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:16:43.204 [http-nio-8080-exec-3] DEBUG [7f2464e3f3a54e09] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:16:43.207 [http-nio-8080-exec-3] DEBUG [7f2464e3f3a54e09] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:16:48.186 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:16:48.187 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:16:48.187 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:16:48.188 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:16:48.189 [http-nio-8080-exec-2] DEBUG [644afe75c44248af] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:16:48.189 [http-nio-8080-exec-2] DEBUG [644afe75c44248af] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:16:48.190 [http-nio-8080-exec-2] DEBUG [644afe75c44248af] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:16:48.190 [http-nio-8080-exec-2] DEBUG [644afe75c44248af] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:16:48.191 [http-nio-8080-exec-2] DEBUG [644afe75c44248af] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:17:44.194 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:17:44.200 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:17:44.201 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:17:44.205 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:17:44.206 [http-nio-8080-exec-5] DEBUG [d1255be706c148bd] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:17:44.207 [http-nio-8080-exec-5] DEBUG [d1255be706c148bd] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:17:44.212 [http-nio-8080-exec-5] DEBUG [d1255be706c148bd] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:17:44.213 [http-nio-8080-exec-5] DEBUG [d1255be706c148bd] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:17:44.217 [http-nio-8080-exec-5] DEBUG [d1255be706c148bd] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:18:44.183 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:18:44.184 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:18:44.185 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:18:44.187 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:18:44.192 [http-nio-8080-exec-7] DEBUG [bbfd90dd231c4d23] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:18:44.193 [http-nio-8080-exec-7] DEBUG [bbfd90dd231c4d23] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:18:44.212 [http-nio-8080-exec-7] DEBUG [bbfd90dd231c4d23] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:18:44.216 [http-nio-8080-exec-7] DEBUG [bbfd90dd231c4d23] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:18:44.217 [http-nio-8080-exec-7] DEBUG [bbfd90dd231c4d23] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:19:44.186 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:19:44.188 [http-nio-8080-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:19:44.189 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:19:44.190 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:19:44.191 [http-nio-8080-exec-9] DEBUG [2003a004031149f3] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:19:44.192 [http-nio-8080-exec-9] DEBUG [2003a004031149f3] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:19:44.194 [http-nio-8080-exec-9] DEBUG [2003a004031149f3] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:19:44.195 [http-nio-8080-exec-9] DEBUG [2003a004031149f3] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:19:44.197 [http-nio-8080-exec-9] DEBUG [2003a004031149f3] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:20:44.189 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:20:44.191 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:20:44.191 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:20:44.192 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:20:44.193 [http-nio-8080-exec-1] DEBUG [229bed932087495e] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:20:44.194 [http-nio-8080-exec-1] DEBUG [229bed932087495e] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:20:44.198 [http-nio-8080-exec-1] DEBUG [229bed932087495e] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:20:44.198 [http-nio-8080-exec-1] DEBUG [229bed932087495e] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:20:44.198 [http-nio-8080-exec-1] DEBUG [229bed932087495e] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:21:44.182 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:21:44.184 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:21:44.184 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:21:44.185 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:21:44.185 [http-nio-8080-exec-2] DEBUG [817d64e1860c4242] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:21:44.185 [http-nio-8080-exec-2] DEBUG [817d64e1860c4242] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:21:44.187 [http-nio-8080-exec-2] DEBUG [817d64e1860c4242] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:21:44.187 [http-nio-8080-exec-2] DEBUG [817d64e1860c4242] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:21:44.189 [http-nio-8080-exec-2] DEBUG [817d64e1860c4242] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:22:44.184 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:22:44.185 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:22:44.185 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:22:44.187 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:22:44.187 [http-nio-8080-exec-5] DEBUG [37a2b73d69754bfe] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:22:44.187 [http-nio-8080-exec-5] DEBUG [37a2b73d69754bfe] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:22:44.189 [http-nio-8080-exec-5] DEBUG [37a2b73d69754bfe] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:22:44.189 [http-nio-8080-exec-5] DEBUG [37a2b73d69754bfe] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:22:44.189 [http-nio-8080-exec-5] DEBUG [37a2b73d69754bfe] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:23:44.191 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:23:44.192 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:23:44.193 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:23:44.194 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:23:44.195 [http-nio-8080-exec-7] DEBUG [14f81e910b0a4047] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:23:44.195 [http-nio-8080-exec-7] DEBUG [14f81e910b0a4047] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:23:44.198 [http-nio-8080-exec-7] DEBUG [14f81e910b0a4047] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:23:44.198 [http-nio-8080-exec-7] DEBUG [14f81e910b0a4047] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:23:44.199 [http-nio-8080-exec-7] DEBUG [14f81e910b0a4047] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:24:44.218 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:24:44.219 [http-nio-8080-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:24:44.219 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:24:44.220 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:24:44.221 [http-nio-8080-exec-9] DEBUG [72f3e1bc3d5348d9] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:24:44.221 [http-nio-8080-exec-9] DEBUG [72f3e1bc3d5348d9] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:24:44.222 [http-nio-8080-exec-9] DEBUG [72f3e1bc3d5348d9] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:24:44.222 [http-nio-8080-exec-9] DEBUG [72f3e1bc3d5348d9] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:24:44.225 [http-nio-8080-exec-9] DEBUG [72f3e1bc3d5348d9] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:25:44.210 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:25:44.211 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:25:44.212 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:25:44.214 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:25:44.214 [http-nio-8080-exec-1] DEBUG [18879f8f41774c97] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:25:44.214 [http-nio-8080-exec-1] DEBUG [18879f8f41774c97] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:25:44.219 [http-nio-8080-exec-1] DEBUG [18879f8f41774c97] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:25:44.219 [http-nio-8080-exec-1] DEBUG [18879f8f41774c97] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:25:44.220 [http-nio-8080-exec-1] DEBUG [18879f8f41774c97] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:26:44.186 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:26:44.188 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:26:44.189 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:26:44.193 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:26:44.193 [http-nio-8080-exec-2] DEBUG [cb7c5ba4c2d549f5] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:26:44.193 [http-nio-8080-exec-2] DEBUG [cb7c5ba4c2d549f5] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:26:44.196 [http-nio-8080-exec-2] DEBUG [cb7c5ba4c2d549f5] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:26:44.197 [http-nio-8080-exec-2] DEBUG [cb7c5ba4c2d549f5] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:26:44.198 [http-nio-8080-exec-2] DEBUG [cb7c5ba4c2d549f5] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:27:44.191 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:27:44.193 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:27:44.194 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:27:44.198 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:27:44.199 [http-nio-8080-exec-5] DEBUG [7585a134dc824ece] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:27:44.200 [http-nio-8080-exec-5] DEBUG [7585a134dc824ece] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:27:44.208 [http-nio-8080-exec-5] DEBUG [7585a134dc824ece] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:27:44.210 [http-nio-8080-exec-5] DEBUG [7585a134dc824ece] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:27:44.212 [http-nio-8080-exec-5] DEBUG [7585a134dc824ece] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:28:44.194 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:28:44.196 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:28:44.197 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:28:44.200 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:28:44.201 [http-nio-8080-exec-7] DEBUG [2ef9dbb1b3d74e9e] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:28:44.201 [http-nio-8080-exec-7] DEBUG [2ef9dbb1b3d74e9e] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:28:44.205 [http-nio-8080-exec-7] DEBUG [2ef9dbb1b3d74e9e] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:28:44.206 [http-nio-8080-exec-7] DEBUG [2ef9dbb1b3d74e9e] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:28:44.208 [http-nio-8080-exec-7] DEBUG [2ef9dbb1b3d74e9e] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:29:44.188 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:29:44.191 [http-nio-8080-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:29:44.192 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:29:44.193 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:29:44.193 [http-nio-8080-exec-9] DEBUG [e3fd616777c74491] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:29:44.193 [http-nio-8080-exec-9] DEBUG [e3fd616777c74491] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:29:44.195 [http-nio-8080-exec-9] DEBUG [e3fd616777c74491] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:29:44.195 [http-nio-8080-exec-9] DEBUG [e3fd616777c74491] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:29:44.196 [http-nio-8080-exec-9] DEBUG [e3fd616777c74491] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:30:44.193 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:30:44.201 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:30:44.202 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:30:44.205 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:30:44.206 [http-nio-8080-exec-1] DEBUG [36d512ea33d6402a] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:30:44.207 [http-nio-8080-exec-1] DEBUG [36d512ea33d6402a] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:30:44.214 [http-nio-8080-exec-1] DEBUG [36d512ea33d6402a] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:30:44.215 [http-nio-8080-exec-1] DEBUG [36d512ea33d6402a] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:30:44.218 [http-nio-8080-exec-1] DEBUG [36d512ea33d6402a] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:31:44.183 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:31:44.186 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:31:44.187 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:31:44.187 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:31:44.188 [http-nio-8080-exec-2] DEBUG [3b4d648b05e1400f] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:31:44.188 [http-nio-8080-exec-2] DEBUG [3b4d648b05e1400f] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:31:44.189 [http-nio-8080-exec-2] DEBUG [3b4d648b05e1400f] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:31:44.189 [http-nio-8080-exec-2] DEBUG [3b4d648b05e1400f] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:31:44.190 [http-nio-8080-exec-2] DEBUG [3b4d648b05e1400f] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:32:44.201 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:32:44.205 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:32:44.207 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:32:44.210 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:32:44.212 [http-nio-8080-exec-5] DEBUG [4c63b4d2b0a24d19] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:32:44.212 [http-nio-8080-exec-5] DEBUG [4c63b4d2b0a24d19] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:32:44.223 [http-nio-8080-exec-5] DEBUG [4c63b4d2b0a24d19] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:32:44.224 [http-nio-8080-exec-5] DEBUG [4c63b4d2b0a24d19] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:32:44.226 [http-nio-8080-exec-5] DEBUG [4c63b4d2b0a24d19] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:33:44.189 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:33:44.189 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:33:44.190 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:33:44.190 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:33:44.191 [http-nio-8080-exec-7] DEBUG [13d87ca3f10e43c5] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:33:44.192 [http-nio-8080-exec-7] DEBUG [13d87ca3f10e43c5] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:33:44.194 [http-nio-8080-exec-7] DEBUG [13d87ca3f10e43c5] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:33:44.195 [http-nio-8080-exec-7] DEBUG [13d87ca3f10e43c5] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:33:44.197 [http-nio-8080-exec-7] DEBUG [13d87ca3f10e43c5] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:34:44.190 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:34:44.191 [http-nio-8080-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:34:44.191 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:34:44.192 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:34:44.192 [http-nio-8080-exec-9] DEBUG [11b8652a1e3347d1] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:34:44.192 [http-nio-8080-exec-9] DEBUG [11b8652a1e3347d1] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:34:44.194 [http-nio-8080-exec-9] DEBUG [11b8652a1e3347d1] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:34:44.194 [http-nio-8080-exec-9] DEBUG [11b8652a1e3347d1] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:34:44.195 [http-nio-8080-exec-9] DEBUG [11b8652a1e3347d1] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:35:44.189 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:35:44.190 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:35:44.191 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:35:44.193 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:35:44.194 [http-nio-8080-exec-1] DEBUG [cb7cbb87931b4c00] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:35:44.194 [http-nio-8080-exec-1] DEBUG [cb7cbb87931b4c00] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:35:44.196 [http-nio-8080-exec-1] DEBUG [cb7cbb87931b4c00] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:35:44.198 [http-nio-8080-exec-1] DEBUG [cb7cbb87931b4c00] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:35:44.198 [http-nio-8080-exec-1] DEBUG [cb7cbb87931b4c00] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:36:44.194 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:36:44.195 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:36:44.195 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:36:44.196 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:36:44.196 [http-nio-8080-exec-2] DEBUG [214ee26cfb3f4771] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:36:44.196 [http-nio-8080-exec-2] DEBUG [214ee26cfb3f4771] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:36:44.198 [http-nio-8080-exec-2] DEBUG [214ee26cfb3f4771] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:36:44.198 [http-nio-8080-exec-2] DEBUG [214ee26cfb3f4771] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:36:44.199 [http-nio-8080-exec-2] DEBUG [214ee26cfb3f4771] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:37:44.183 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:37:44.188 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:37:44.188 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:37:44.190 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:37:44.190 [http-nio-8080-exec-5] DEBUG [1fd1eef9cbf94adc] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:37:44.191 [http-nio-8080-exec-5] DEBUG [1fd1eef9cbf94adc] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:37:44.192 [http-nio-8080-exec-5] DEBUG [1fd1eef9cbf94adc] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:37:44.192 [http-nio-8080-exec-5] DEBUG [1fd1eef9cbf94adc] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:37:44.193 [http-nio-8080-exec-5] DEBUG [1fd1eef9cbf94adc] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:38:44.191 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:38:44.192 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:38:44.192 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:38:44.207 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:38:44.208 [http-nio-8080-exec-7] DEBUG [5651bfd4228d46b3] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:38:44.208 [http-nio-8080-exec-7] DEBUG [5651bfd4228d46b3] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:38:44.209 [http-nio-8080-exec-7] DEBUG [5651bfd4228d46b3] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:38:44.209 [http-nio-8080-exec-7] DEBUG [5651bfd4228d46b3] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:38:44.210 [http-nio-8080-exec-7] DEBUG [5651bfd4228d46b3] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:39:44.191 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:39:44.191 [http-nio-8080-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:39:44.191 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:39:44.193 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:39:44.193 [http-nio-8080-exec-9] DEBUG [dbab0ccaaf2c47ee] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:39:44.193 [http-nio-8080-exec-9] DEBUG [dbab0ccaaf2c47ee] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:39:44.194 [http-nio-8080-exec-9] DEBUG [dbab0ccaaf2c47ee] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:39:44.196 [http-nio-8080-exec-9] DEBUG [dbab0ccaaf2c47ee] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:39:44.197 [http-nio-8080-exec-9] DEBUG [dbab0ccaaf2c47ee] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:40:44.177 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:40:44.178 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:40:44.178 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:40:44.179 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:40:44.179 [http-nio-8080-exec-1] DEBUG [d8c180ef3755467d] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:40:44.179 [http-nio-8080-exec-1] DEBUG [d8c180ef3755467d] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:40:44.185 [http-nio-8080-exec-1] DEBUG [d8c180ef3755467d] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:40:44.186 [http-nio-8080-exec-1] DEBUG [d8c180ef3755467d] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:40:44.187 [http-nio-8080-exec-1] DEBUG [d8c180ef3755467d] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:41:44.186 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:41:44.188 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:41:44.188 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:41:44.191 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:41:44.191 [http-nio-8080-exec-2] DEBUG [2a35bd0be84143ea] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:41:44.192 [http-nio-8080-exec-2] DEBUG [2a35bd0be84143ea] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:41:44.196 [http-nio-8080-exec-2] DEBUG [2a35bd0be84143ea] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:41:44.197 [http-nio-8080-exec-2] DEBUG [2a35bd0be84143ea] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:41:44.199 [http-nio-8080-exec-2] DEBUG [2a35bd0be84143ea] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:42:44.198 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:42:44.200 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:42:44.201 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:42:44.203 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:42:44.205 [http-nio-8080-exec-5] DEBUG [32fe536e282a45c3] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:42:44.206 [http-nio-8080-exec-5] DEBUG [32fe536e282a45c3] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:42:44.209 [http-nio-8080-exec-5] DEBUG [32fe536e282a45c3] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:42:44.210 [http-nio-8080-exec-5] DEBUG [32fe536e282a45c3] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:42:44.211 [http-nio-8080-exec-5] DEBUG [32fe536e282a45c3] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:43:44.181 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:43:44.182 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:43:44.182 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:43:44.182 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:43:44.183 [http-nio-8080-exec-7] DEBUG [830a9369d4fe414e] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:43:44.183 [http-nio-8080-exec-7] DEBUG [830a9369d4fe414e] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:43:44.184 [http-nio-8080-exec-7] DEBUG [830a9369d4fe414e] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:43:44.185 [http-nio-8080-exec-7] DEBUG [830a9369d4fe414e] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:43:44.185 [http-nio-8080-exec-7] DEBUG [830a9369d4fe414e] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:44:44.202 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:44:44.204 [http-nio-8080-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:44:44.206 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:44:44.209 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:44:44.210 [http-nio-8080-exec-9] DEBUG [9b84159632bc4c7d] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:44:44.211 [http-nio-8080-exec-9] DEBUG [9b84159632bc4c7d] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:44:44.215 [http-nio-8080-exec-9] DEBUG [9b84159632bc4c7d] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:44:44.217 [http-nio-8080-exec-9] DEBUG [9b84159632bc4c7d] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:44:44.219 [http-nio-8080-exec-9] DEBUG [9b84159632bc4c7d] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:45:44.189 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:45:44.189 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:45:44.190 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:45:44.191 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:45:44.191 [http-nio-8080-exec-1] DEBUG [a7c19f4e21ba4ffc] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:45:44.191 [http-nio-8080-exec-1] DEBUG [a7c19f4e21ba4ffc] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:45:44.193 [http-nio-8080-exec-1] DEBUG [a7c19f4e21ba4ffc] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:45:44.193 [http-nio-8080-exec-1] DEBUG [a7c19f4e21ba4ffc] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:45:44.194 [http-nio-8080-exec-1] DEBUG [a7c19f4e21ba4ffc] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:46:44.201 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:46:44.204 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:46:44.205 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:46:44.208 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:46:44.210 [http-nio-8080-exec-2] DEBUG [54001d6b9f9942a7] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:46:44.210 [http-nio-8080-exec-2] DEBUG [54001d6b9f9942a7] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:46:44.228 [http-nio-8080-exec-2] DEBUG [54001d6b9f9942a7] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:46:44.228 [http-nio-8080-exec-2] DEBUG [54001d6b9f9942a7] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:46:44.229 [http-nio-8080-exec-2] DEBUG [54001d6b9f9942a7] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:47:44.215 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:47:44.216 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:47:44.216 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:47:44.218 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:47:44.218 [http-nio-8080-exec-5] DEBUG [ea1f8f1a412d4f92] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:47:44.219 [http-nio-8080-exec-5] DEBUG [ea1f8f1a412d4f92] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:47:44.220 [http-nio-8080-exec-5] DEBUG [ea1f8f1a412d4f92] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:47:44.220 [http-nio-8080-exec-5] DEBUG [ea1f8f1a412d4f92] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:47:44.222 [http-nio-8080-exec-5] DEBUG [ea1f8f1a412d4f92] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:48:44.192 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:48:44.192 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:48:44.193 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:48:44.193 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:48:44.193 [http-nio-8080-exec-7] DEBUG [adb6abf893cd4e29] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:48:44.194 [http-nio-8080-exec-7] DEBUG [adb6abf893cd4e29] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:48:44.195 [http-nio-8080-exec-7] DEBUG [adb6abf893cd4e29] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:48:44.195 [http-nio-8080-exec-7] DEBUG [adb6abf893cd4e29] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:48:44.196 [http-nio-8080-exec-7] DEBUG [adb6abf893cd4e29] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:49:44.193 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:49:44.196 [http-nio-8080-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:49:44.196 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:49:44.201 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:49:44.202 [http-nio-8080-exec-9] DEBUG [b4c910babafc4a10] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:49:44.202 [http-nio-8080-exec-9] DEBUG [b4c910babafc4a10] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:49:44.208 [http-nio-8080-exec-9] DEBUG [b4c910babafc4a10] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:49:44.209 [http-nio-8080-exec-9] DEBUG [b4c910babafc4a10] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:49:44.213 [http-nio-8080-exec-9] DEBUG [b4c910babafc4a10] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:50:44.179 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:50:44.198 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:50:44.199 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:50:44.200 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:50:44.200 [http-nio-8080-exec-1] DEBUG [44cf822063ac4ec3] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:50:44.200 [http-nio-8080-exec-1] DEBUG [44cf822063ac4ec3] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:50:44.205 [http-nio-8080-exec-1] DEBUG [44cf822063ac4ec3] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:50:44.205 [http-nio-8080-exec-1] DEBUG [44cf822063ac4ec3] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:50:44.206 [http-nio-8080-exec-1] DEBUG [44cf822063ac4ec3] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:51:44.179 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:51:44.179 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:51:44.180 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:51:44.181 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:51:44.182 [http-nio-8080-exec-2] DEBUG [3be0df51d37446f4] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:51:44.182 [http-nio-8080-exec-2] DEBUG [3be0df51d37446f4] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:51:44.184 [http-nio-8080-exec-2] DEBUG [3be0df51d37446f4] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:51:44.184 [http-nio-8080-exec-2] DEBUG [3be0df51d37446f4] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:51:44.190 [http-nio-8080-exec-2] DEBUG [3be0df51d37446f4] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:52:44.178 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:52:44.179 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:52:44.181 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:52:44.182 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:52:44.182 [http-nio-8080-exec-5] DEBUG [12eec36e89c24f93] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:52:44.182 [http-nio-8080-exec-5] DEBUG [12eec36e89c24f93] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:52:44.184 [http-nio-8080-exec-5] DEBUG [12eec36e89c24f93] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:52:44.184 [http-nio-8080-exec-5] DEBUG [12eec36e89c24f93] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:52:44.185 [http-nio-8080-exec-5] DEBUG [12eec36e89c24f93] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:53:28.604 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:53:28.606 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:53:28.606 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:53:28.607 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:53:28.608 [http-nio-8080-exec-7] DEBUG [0382d74f40a44a94] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:53:28.609 [http-nio-8080-exec-7] DEBUG [0382d74f40a44a94] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:53:28.611 [http-nio-8080-exec-7] DEBUG [0382d74f40a44a94] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:53:28.611 [http-nio-8080-exec-7] DEBUG [0382d74f40a44a94] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:53:28.613 [http-nio-8080-exec-7] DEBUG [0382d74f40a44a94] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:53:31.775 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/prometheu
2025-08-03 12:53:31.781 [http-nio-8080-exec-8] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:53:31.782 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:53:31.782 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/prometheu
2025-08-03 12:53:31.783 [http-nio-8080-exec-8] DEBUG [1de7fb53076b4cb2] o.s.web.servlet.DispatcherServlet - GET "/actuator/prometheu", parameters={}
2025-08-03 12:53:31.790 [http-nio-8080-exec-8] DEBUG [1de7fb53076b4cb2] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-03 12:53:32.168 [http-nio-8080-exec-8] DEBUG [1de7fb53076b4cb2] o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-08-03 12:53:32.269 [http-nio-8080-exec-8] DEBUG [1de7fb53076b4cb2] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource actuator/prometheu.]
2025-08-03 12:53:32.269 [http-nio-8080-exec-8] DEBUG [1de7fb53076b4cb2] o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-03 12:53:32.287 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 12:53:32.288 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:53:32.292 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 12:53:33.185 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:53:33.186 [http-nio-8080-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:53:33.186 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:53:33.187 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:53:33.187 [http-nio-8080-exec-9] DEBUG [97e6159239ea4722] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:53:33.188 [http-nio-8080-exec-9] DEBUG [97e6159239ea4722] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:53:33.189 [http-nio-8080-exec-9] DEBUG [97e6159239ea4722] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:53:33.190 [http-nio-8080-exec-9] DEBUG [97e6159239ea4722] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:53:33.192 [http-nio-8080-exec-9] DEBUG [97e6159239ea4722] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:53:35.795 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/prometheus
2025-08-03 12:53:35.796 [http-nio-8080-exec-10] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:53:35.796 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:53:35.798 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/prometheus
2025-08-03 12:53:35.799 [http-nio-8080-exec-10] DEBUG [b67f817d68b74b0e] o.s.web.servlet.DispatcherServlet - GET "/actuator/prometheus", parameters={}
2025-08-03 12:53:35.800 [http-nio-8080-exec-10] DEBUG [b67f817d68b74b0e] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-03 12:53:35.803 [http-nio-8080-exec-10] DEBUG [b67f817d68b74b0e] o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-08-03 12:53:35.816 [http-nio-8080-exec-10] DEBUG [b67f817d68b74b0e] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource actuator/prometheus.]
2025-08-03 12:53:35.817 [http-nio-8080-exec-10] DEBUG [b67f817d68b74b0e] o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-03 12:53:35.818 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 12:53:35.819 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:53:35.820 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 12:53:38.196 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:53:38.198 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:53:38.199 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:53:38.201 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:53:38.202 [http-nio-8080-exec-2] DEBUG [804d1186c40f40ac] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:53:38.203 [http-nio-8080-exec-2] DEBUG [804d1186c40f40ac] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:53:38.207 [http-nio-8080-exec-2] DEBUG [804d1186c40f40ac] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:53:38.208 [http-nio-8080-exec-2] DEBUG [804d1186c40f40ac] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:53:38.210 [http-nio-8080-exec-2] DEBUG [804d1186c40f40ac] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:53:42.261 [http-nio-8081-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/prometheus
2025-08-03 12:53:42.262 [http-nio-8081-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:53:42.262 [http-nio-8081-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:53:42.263 [http-nio-8081-exec-5] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 6136CDE40338AB190B37C0D86771E96D
2025-08-03 12:53:42.264 [http-nio-8081-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/prometheus
2025-08-03 12:53:42.264 [http-nio-8081-exec-5] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/prometheus", parameters={}
2025-08-03 12:53:42.273 [http-nio-8081-exec-5] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 12:53:42.632 [http-nio-8081-exec-5] DEBUG [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:text/plain;version=0.0.4;charset=utf-8' in response
2025-08-03 12:53:42.646 [http-nio-8081-exec-5] DEBUG [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{35, 32, 72, 69, 76, 80, 32, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 95, 114, 101, 97, 1 (truncated)...]
2025-08-03 12:53:42.648 [http-nio-8081-exec-5] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:53:42.729 [http-nio-8081-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 12:53:42.730 [http-nio-8081-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:53:42.730 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:53:42.730 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 6136CDE40338AB190B37C0D86771E96D
2025-08-03 12:53:42.731 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 12:53:42.733 [http-nio-8081-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 12:53:42.734 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:53:42.735 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 12:53:43.187 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:53:43.188 [http-nio-8080-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:53:43.188 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:53:43.189 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:53:43.189 [http-nio-8080-exec-4] DEBUG [6aa0fb25b84248df] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:53:43.189 [http-nio-8080-exec-4] DEBUG [6aa0fb25b84248df] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:53:43.190 [http-nio-8080-exec-4] DEBUG [6aa0fb25b84248df] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:53:43.190 [http-nio-8080-exec-4] DEBUG [6aa0fb25b84248df] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:53:43.191 [http-nio-8080-exec-4] DEBUG [6aa0fb25b84248df] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:53:48.189 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:53:48.191 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:53:48.191 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:53:48.192 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:53:48.192 [http-nio-8080-exec-5] DEBUG [f74533a058cd44a2] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:53:48.192 [http-nio-8080-exec-5] DEBUG [f74533a058cd44a2] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:53:48.193 [http-nio-8080-exec-5] DEBUG [f74533a058cd44a2] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:53:48.193 [http-nio-8080-exec-5] DEBUG [f74533a058cd44a2] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:53:48.193 [http-nio-8080-exec-5] DEBUG [f74533a058cd44a2] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:53:53.177 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:53:53.177 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:53:53.178 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:53:53.178 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:53:53.178 [http-nio-8080-exec-7] DEBUG [8e6489e89f614dfe] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:53:53.178 [http-nio-8080-exec-7] DEBUG [8e6489e89f614dfe] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:53:53.180 [http-nio-8080-exec-7] DEBUG [8e6489e89f614dfe] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:53:53.180 [http-nio-8080-exec-7] DEBUG [8e6489e89f614dfe] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:53:53.181 [http-nio-8080-exec-7] DEBUG [8e6489e89f614dfe] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:53:58.185 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:53:58.186 [http-nio-8080-exec-8] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:53:58.186 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:53:58.187 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:53:58.187 [http-nio-8080-exec-8] DEBUG [f46f3b0373ab4758] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:53:58.187 [http-nio-8080-exec-8] DEBUG [f46f3b0373ab4758] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:53:58.188 [http-nio-8080-exec-8] DEBUG [f46f3b0373ab4758] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:53:58.188 [http-nio-8080-exec-8] DEBUG [f46f3b0373ab4758] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:53:58.189 [http-nio-8080-exec-8] DEBUG [f46f3b0373ab4758] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:54:03.188 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:54:03.188 [http-nio-8080-exec-10] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:54:03.188 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:54:03.189 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:54:03.189 [http-nio-8080-exec-10] DEBUG [e7465b407c544232] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:54:03.189 [http-nio-8080-exec-10] DEBUG [e7465b407c544232] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:54:03.190 [http-nio-8080-exec-10] DEBUG [e7465b407c544232] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:54:03.191 [http-nio-8080-exec-10] DEBUG [e7465b407c544232] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:54:03.191 [http-nio-8080-exec-10] DEBUG [e7465b407c544232] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:54:08.189 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:54:08.193 [http-nio-8080-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:54:08.194 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:54:08.198 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:54:08.225 [http-nio-8080-exec-3] DEBUG [1b9510f087d04d44] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:54:08.226 [http-nio-8080-exec-3] DEBUG [1b9510f087d04d44] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:54:08.227 [http-nio-8080-exec-3] DEBUG [1b9510f087d04d44] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:54:08.228 [http-nio-8080-exec-3] DEBUG [1b9510f087d04d44] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:54:08.229 [http-nio-8080-exec-3] DEBUG [1b9510f087d04d44] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:54:13.186 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:54:13.188 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:54:13.188 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:54:13.189 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:54:13.189 [http-nio-8080-exec-1] DEBUG [d12bbc17bb83478b] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:54:13.189 [http-nio-8080-exec-1] DEBUG [d12bbc17bb83478b] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:54:13.190 [http-nio-8080-exec-1] DEBUG [d12bbc17bb83478b] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:54:13.190 [http-nio-8080-exec-1] DEBUG [d12bbc17bb83478b] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:54:13.191 [http-nio-8080-exec-1] DEBUG [d12bbc17bb83478b] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:54:18.196 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:54:18.198 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:54:18.199 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:54:18.201 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:54:18.202 [http-nio-8080-exec-2] DEBUG [a3054818b3124706] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:54:18.204 [http-nio-8080-exec-2] DEBUG [a3054818b3124706] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:54:18.208 [http-nio-8080-exec-2] DEBUG [a3054818b3124706] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:54:18.209 [http-nio-8080-exec-2] DEBUG [a3054818b3124706] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:54:18.211 [http-nio-8080-exec-2] DEBUG [a3054818b3124706] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:54:23.234 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:54:23.234 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:54:23.234 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:54:23.235 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:54:23.235 [http-nio-8080-exec-5] DEBUG [7e357e83f23f4cff] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:54:23.235 [http-nio-8080-exec-5] DEBUG [7e357e83f23f4cff] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:54:23.255 [http-nio-8080-exec-5] DEBUG [7e357e83f23f4cff] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:54:23.255 [http-nio-8080-exec-5] DEBUG [7e357e83f23f4cff] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:54:23.256 [http-nio-8080-exec-5] DEBUG [7e357e83f23f4cff] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:54:28.188 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:54:28.190 [http-nio-8080-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:54:28.190 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:54:28.190 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:54:28.191 [http-nio-8080-exec-6] DEBUG [df338b2b2f0c4408] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:54:28.191 [http-nio-8080-exec-6] DEBUG [df338b2b2f0c4408] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:54:28.194 [http-nio-8080-exec-6] DEBUG [df338b2b2f0c4408] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:54:28.195 [http-nio-8080-exec-6] DEBUG [df338b2b2f0c4408] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:54:28.196 [http-nio-8080-exec-6] DEBUG [df338b2b2f0c4408] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:54:33.180 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:54:33.183 [http-nio-8080-exec-8] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:54:33.183 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:54:33.184 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:54:33.184 [http-nio-8080-exec-8] DEBUG [be118dd494164894] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:54:33.184 [http-nio-8080-exec-8] DEBUG [be118dd494164894] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:54:33.185 [http-nio-8080-exec-8] DEBUG [be118dd494164894] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:54:33.185 [http-nio-8080-exec-8] DEBUG [be118dd494164894] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:54:33.186 [http-nio-8080-exec-8] DEBUG [be118dd494164894] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:54:38.181 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:54:38.182 [http-nio-8080-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:54:38.182 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:54:38.182 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:54:38.183 [http-nio-8080-exec-9] DEBUG [badc844d2ef34bdd] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:54:38.183 [http-nio-8080-exec-9] DEBUG [badc844d2ef34bdd] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:54:38.196 [http-nio-8080-exec-9] DEBUG [badc844d2ef34bdd] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:54:38.197 [http-nio-8080-exec-9] DEBUG [badc844d2ef34bdd] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:54:38.197 [http-nio-8080-exec-9] DEBUG [badc844d2ef34bdd] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:54:43.186 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:54:43.187 [http-nio-8080-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:54:43.187 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:54:43.188 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:54:43.188 [http-nio-8080-exec-3] DEBUG [5d935663af2748b0] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:54:43.188 [http-nio-8080-exec-3] DEBUG [5d935663af2748b0] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:54:43.190 [http-nio-8080-exec-3] DEBUG [5d935663af2748b0] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:54:43.190 [http-nio-8080-exec-3] DEBUG [5d935663af2748b0] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:54:43.190 [http-nio-8080-exec-3] DEBUG [5d935663af2748b0] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:54:48.184 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:54:48.184 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:54:48.184 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:54:48.185 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:54:48.185 [http-nio-8080-exec-1] DEBUG [7b5b2da273f44caa] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:54:48.185 [http-nio-8080-exec-1] DEBUG [7b5b2da273f44caa] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:54:48.186 [http-nio-8080-exec-1] DEBUG [7b5b2da273f44caa] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:54:48.186 [http-nio-8080-exec-1] DEBUG [7b5b2da273f44caa] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:54:48.187 [http-nio-8080-exec-1] DEBUG [7b5b2da273f44caa] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:54:53.187 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:54:53.189 [http-nio-8080-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:54:53.189 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:54:53.189 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:54:53.190 [http-nio-8080-exec-4] DEBUG [5cc39fdb29fb4f09] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:54:53.190 [http-nio-8080-exec-4] DEBUG [5cc39fdb29fb4f09] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:54:53.190 [http-nio-8080-exec-4] DEBUG [5cc39fdb29fb4f09] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:54:53.191 [http-nio-8080-exec-4] DEBUG [5cc39fdb29fb4f09] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:54:53.191 [http-nio-8080-exec-4] DEBUG [5cc39fdb29fb4f09] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:54:58.184 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:54:58.185 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:54:58.186 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:54:58.188 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:54:58.188 [http-nio-8080-exec-5] DEBUG [3406037f747e4249] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:54:58.189 [http-nio-8080-exec-5] DEBUG [3406037f747e4249] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:54:58.195 [http-nio-8080-exec-5] DEBUG [3406037f747e4249] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:54:58.197 [http-nio-8080-exec-5] DEBUG [3406037f747e4249] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:54:58.199 [http-nio-8080-exec-5] DEBUG [3406037f747e4249] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:55:03.192 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:55:03.194 [http-nio-8080-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:55:03.195 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:55:03.198 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:55:03.199 [http-nio-8080-exec-6] DEBUG [9182255b9a324103] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:55:03.199 [http-nio-8080-exec-6] DEBUG [9182255b9a324103] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:55:03.203 [http-nio-8080-exec-6] DEBUG [9182255b9a324103] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:55:03.204 [http-nio-8080-exec-6] DEBUG [9182255b9a324103] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:55:03.206 [http-nio-8080-exec-6] DEBUG [9182255b9a324103] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:55:08.187 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:55:08.188 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:55:08.189 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:55:08.191 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:55:08.192 [http-nio-8080-exec-7] DEBUG [75c94cd22d3a4b44] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:55:08.193 [http-nio-8080-exec-7] DEBUG [75c94cd22d3a4b44] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:55:08.197 [http-nio-8080-exec-7] DEBUG [75c94cd22d3a4b44] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:55:08.197 [http-nio-8080-exec-7] DEBUG [75c94cd22d3a4b44] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:55:08.200 [http-nio-8080-exec-7] DEBUG [75c94cd22d3a4b44] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:55:13.184 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:55:13.185 [http-nio-8080-exec-8] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:55:13.185 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:55:13.186 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:55:13.186 [http-nio-8080-exec-8] DEBUG [4b2457c110614c08] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:55:13.186 [http-nio-8080-exec-8] DEBUG [4b2457c110614c08] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:55:13.188 [http-nio-8080-exec-8] DEBUG [4b2457c110614c08] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:55:13.188 [http-nio-8080-exec-8] DEBUG [4b2457c110614c08] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:55:13.189 [http-nio-8080-exec-8] DEBUG [4b2457c110614c08] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:55:44.191 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:55:44.192 [http-nio-8080-exec-10] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:55:44.194 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:55:44.195 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:55:44.197 [http-nio-8080-exec-10] DEBUG [df57c6c160964158] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:55:44.197 [http-nio-8080-exec-10] DEBUG [df57c6c160964158] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:55:44.215 [http-nio-8080-exec-10] DEBUG [df57c6c160964158] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:55:44.216 [http-nio-8080-exec-10] DEBUG [df57c6c160964158] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:55:44.220 [http-nio-8080-exec-10] DEBUG [df57c6c160964158] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:56:44.190 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:56:44.196 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:56:44.197 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:56:44.201 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:56:44.202 [http-nio-8080-exec-1] DEBUG [79e8bc904e7c451a] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:56:44.202 [http-nio-8080-exec-1] DEBUG [79e8bc904e7c451a] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:56:44.209 [http-nio-8080-exec-1] DEBUG [79e8bc904e7c451a] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:56:44.209 [http-nio-8080-exec-1] DEBUG [79e8bc904e7c451a] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:56:44.213 [http-nio-8080-exec-1] DEBUG [79e8bc904e7c451a] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:57:44.194 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:57:44.197 [http-nio-8080-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:57:44.198 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:57:44.201 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:57:44.203 [http-nio-8080-exec-4] DEBUG [d700fcc8a09e45c9] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:57:44.204 [http-nio-8080-exec-4] DEBUG [d700fcc8a09e45c9] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:57:44.210 [http-nio-8080-exec-4] DEBUG [d700fcc8a09e45c9] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:57:44.210 [http-nio-8080-exec-4] DEBUG [d700fcc8a09e45c9] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:57:44.213 [http-nio-8080-exec-4] DEBUG [d700fcc8a09e45c9] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:58:44.219 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:58:44.221 [http-nio-8080-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:58:44.221 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:58:44.222 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:58:44.222 [http-nio-8080-exec-6] DEBUG [b6e80559d0bf4dba] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:58:44.222 [http-nio-8080-exec-6] DEBUG [b6e80559d0bf4dba] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:58:44.225 [http-nio-8080-exec-6] DEBUG [b6e80559d0bf4dba] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:58:44.226 [http-nio-8080-exec-6] DEBUG [b6e80559d0bf4dba] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:58:44.228 [http-nio-8080-exec-6] DEBUG [b6e80559d0bf4dba] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:59:44.183 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:59:44.185 [http-nio-8080-exec-8] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:59:44.189 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:59:44.190 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:59:44.190 [http-nio-8080-exec-8] DEBUG [01a25618f2674c47] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:59:44.192 [http-nio-8080-exec-8] DEBUG [01a25618f2674c47] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:59:44.194 [http-nio-8080-exec-8] DEBUG [01a25618f2674c47] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:59:44.197 [http-nio-8080-exec-8] DEBUG [01a25618f2674c47] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:59:44.198 [http-nio-8080-exec-8] DEBUG [01a25618f2674c47] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:00:44.203 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:00:44.225 [http-nio-8080-exec-10] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:00:44.226 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:00:44.235 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:00:44.236 [http-nio-8080-exec-10] DEBUG [bd3f5b63047c4080] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:00:44.237 [http-nio-8080-exec-10] DEBUG [bd3f5b63047c4080] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:00:44.241 [http-nio-8080-exec-10] DEBUG [bd3f5b63047c4080] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:00:44.242 [http-nio-8080-exec-10] DEBUG [bd3f5b63047c4080] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:00:44.244 [http-nio-8080-exec-10] DEBUG [bd3f5b63047c4080] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:01:01.028 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:01:01.030 [http-nio-8080-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:01:01.031 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:01:01.032 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:01:01.032 [http-nio-8080-exec-3] DEBUG [2b0a5c79068845fd] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:01:01.033 [http-nio-8080-exec-3] DEBUG [2b0a5c79068845fd] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:01:01.036 [http-nio-8080-exec-3] DEBUG [2b0a5c79068845fd] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:01:01.038 [http-nio-8080-exec-3] DEBUG [2b0a5c79068845fd] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:01:01.041 [http-nio-8080-exec-3] DEBUG [2b0a5c79068845fd] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:01:02.331 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:01:02.331 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:01:02.331 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:01:02.332 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:01:02.333 [http-nio-8080-exec-1] DEBUG [13ced0fe0d4d4e5e] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:01:02.334 [http-nio-8080-exec-1] DEBUG [13ced0fe0d4d4e5e] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:01:02.335 [http-nio-8080-exec-1] DEBUG [13ced0fe0d4d4e5e] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:01:02.336 [http-nio-8080-exec-1] DEBUG [13ced0fe0d4d4e5e] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:01:02.337 [http-nio-8080-exec-1] DEBUG [13ced0fe0d4d4e5e] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:01:07.326 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:01:07.327 [http-nio-8080-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:01:07.327 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:01:07.329 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:01:07.329 [http-nio-8080-exec-4] DEBUG [dfc19818258d4789] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:01:07.329 [http-nio-8080-exec-4] DEBUG [dfc19818258d4789] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:01:07.331 [http-nio-8080-exec-4] DEBUG [dfc19818258d4789] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:01:07.331 [http-nio-8080-exec-4] DEBUG [dfc19818258d4789] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:01:07.332 [http-nio-8080-exec-4] DEBUG [dfc19818258d4789] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:01:13.189 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:01:13.190 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:01:13.190 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:01:13.191 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:01:13.191 [http-nio-8080-exec-5] DEBUG [327f28574791439d] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:01:13.191 [http-nio-8080-exec-5] DEBUG [327f28574791439d] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:01:13.193 [http-nio-8080-exec-5] DEBUG [327f28574791439d] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:01:13.193 [http-nio-8080-exec-5] DEBUG [327f28574791439d] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:01:13.194 [http-nio-8080-exec-5] DEBUG [327f28574791439d] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:01:18.183 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:01:18.183 [http-nio-8080-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:01:18.183 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:01:18.184 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:01:18.184 [http-nio-8080-exec-6] DEBUG [f6b991eb43794799] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:01:18.184 [http-nio-8080-exec-6] DEBUG [f6b991eb43794799] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:01:18.185 [http-nio-8080-exec-6] DEBUG [f6b991eb43794799] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:01:18.185 [http-nio-8080-exec-6] DEBUG [f6b991eb43794799] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:01:18.186 [http-nio-8080-exec-6] DEBUG [f6b991eb43794799] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:01:23.179 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:01:23.181 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:01:23.181 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:01:23.211 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:01:23.212 [http-nio-8080-exec-7] DEBUG [ffa7736513124486] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:01:23.212 [http-nio-8080-exec-7] DEBUG [ffa7736513124486] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:01:23.213 [http-nio-8080-exec-7] DEBUG [ffa7736513124486] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:01:23.213 [http-nio-8080-exec-7] DEBUG [ffa7736513124486] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:01:23.214 [http-nio-8080-exec-7] DEBUG [ffa7736513124486] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:01:28.185 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:01:28.186 [http-nio-8080-exec-8] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:01:28.186 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:01:28.187 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:01:28.187 [http-nio-8080-exec-8] DEBUG [65534f68bd7c432c] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:01:28.187 [http-nio-8080-exec-8] DEBUG [65534f68bd7c432c] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:01:28.188 [http-nio-8080-exec-8] DEBUG [65534f68bd7c432c] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:01:28.189 [http-nio-8080-exec-8] DEBUG [65534f68bd7c432c] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:01:28.189 [http-nio-8080-exec-8] DEBUG [65534f68bd7c432c] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:01:33.191 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:01:33.192 [http-nio-8080-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:01:33.192 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:01:33.193 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:01:33.193 [http-nio-8080-exec-9] DEBUG [2f73a351ee464026] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:01:33.194 [http-nio-8080-exec-9] DEBUG [2f73a351ee464026] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:01:33.196 [http-nio-8080-exec-9] DEBUG [2f73a351ee464026] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:01:33.196 [http-nio-8080-exec-9] DEBUG [2f73a351ee464026] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:01:33.197 [http-nio-8080-exec-9] DEBUG [2f73a351ee464026] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:01:38.184 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:01:38.185 [http-nio-8080-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:01:38.185 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:01:38.186 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:01:38.186 [http-nio-8080-exec-3] DEBUG [b2898f17f81d4dc0] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:01:38.186 [http-nio-8080-exec-3] DEBUG [b2898f17f81d4dc0] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:01:38.187 [http-nio-8080-exec-3] DEBUG [b2898f17f81d4dc0] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:01:38.187 [http-nio-8080-exec-3] DEBUG [b2898f17f81d4dc0] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:01:38.188 [http-nio-8080-exec-3] DEBUG [b2898f17f81d4dc0] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:01:43.187 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:01:43.189 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:01:43.189 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:01:43.227 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:01:43.227 [http-nio-8080-exec-1] DEBUG [4088d97d859a4211] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:01:43.228 [http-nio-8080-exec-1] DEBUG [4088d97d859a4211] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:01:43.228 [http-nio-8080-exec-1] DEBUG [4088d97d859a4211] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:01:43.229 [http-nio-8080-exec-1] DEBUG [4088d97d859a4211] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:01:43.230 [http-nio-8080-exec-1] DEBUG [4088d97d859a4211] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:01:48.181 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:01:48.181 [http-nio-8080-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:01:48.182 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:01:48.182 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:01:48.182 [http-nio-8080-exec-4] DEBUG [1fcd0f6cf2e8453f] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:01:48.182 [http-nio-8080-exec-4] DEBUG [1fcd0f6cf2e8453f] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:01:48.183 [http-nio-8080-exec-4] DEBUG [1fcd0f6cf2e8453f] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:01:48.209 [http-nio-8080-exec-4] DEBUG [1fcd0f6cf2e8453f] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:01:48.210 [http-nio-8080-exec-4] DEBUG [1fcd0f6cf2e8453f] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:01:53.197 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:01:53.199 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:01:53.199 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:01:53.200 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:01:53.200 [http-nio-8080-exec-5] DEBUG [c10d43e899df41cc] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:01:53.200 [http-nio-8080-exec-5] DEBUG [c10d43e899df41cc] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:01:53.202 [http-nio-8080-exec-5] DEBUG [c10d43e899df41cc] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:01:53.202 [http-nio-8080-exec-5] DEBUG [c10d43e899df41cc] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:01:53.202 [http-nio-8080-exec-5] DEBUG [c10d43e899df41cc] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:01:58.191 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:01:58.192 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:01:58.192 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:01:58.193 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:01:58.193 [http-nio-8080-exec-7] DEBUG [c8130df0b3dd403b] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:01:58.193 [http-nio-8080-exec-7] DEBUG [c8130df0b3dd403b] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:01:58.195 [http-nio-8080-exec-7] DEBUG [c8130df0b3dd403b] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:01:58.195 [http-nio-8080-exec-7] DEBUG [c8130df0b3dd403b] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:01:58.196 [http-nio-8080-exec-7] DEBUG [c8130df0b3dd403b] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:02:02.322 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:02:02.323 [http-nio-8080-exec-8] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:02.323 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:02.323 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:02:02.323 [http-nio-8080-exec-8] DEBUG [27d86e9869994977] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:02:02.324 [http-nio-8080-exec-8] DEBUG [27d86e9869994977] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:02:02.326 [http-nio-8080-exec-8] DEBUG [27d86e9869994977] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:02:02.326 [http-nio-8080-exec-8] DEBUG [27d86e9869994977] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:02:02.327 [http-nio-8080-exec-8] DEBUG [27d86e9869994977] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:02:08.189 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:02:08.189 [http-nio-8080-exec-10] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:08.189 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:08.190 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:02:08.190 [http-nio-8080-exec-10] DEBUG [ca60175dea8c4c24] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:02:08.190 [http-nio-8080-exec-10] DEBUG [ca60175dea8c4c24] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:02:08.191 [http-nio-8080-exec-10] DEBUG [ca60175dea8c4c24] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:02:08.191 [http-nio-8080-exec-10] DEBUG [ca60175dea8c4c24] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:02:08.192 [http-nio-8080-exec-10] DEBUG [ca60175dea8c4c24] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:02:13.188 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:02:13.189 [http-nio-8080-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:13.190 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:13.191 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:02:13.192 [http-nio-8080-exec-3] DEBUG [77be42fe70b44b8c] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:02:13.192 [http-nio-8080-exec-3] DEBUG [77be42fe70b44b8c] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:02:13.197 [http-nio-8080-exec-3] DEBUG [77be42fe70b44b8c] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:02:13.197 [http-nio-8080-exec-3] DEBUG [77be42fe70b44b8c] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:02:13.199 [http-nio-8080-exec-3] DEBUG [77be42fe70b44b8c] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:02:15.097 [http-nio-8081-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/loggers
2025-08-03 13:02:15.097 [http-nio-8081-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:15.097 [http-nio-8081-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:15.097 [http-nio-8081-exec-9] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 6136CDE40338AB190B37C0D86771E96D
2025-08-03 13:02:15.098 [http-nio-8081-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/loggers
2025-08-03 13:02:15.098 [http-nio-8081-exec-9] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/loggers", parameters={}
2025-08-03 13:02:15.100 [http-nio-8081-exec-9] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 13:02:15.173 [http-nio-8081-exec-9] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 13:02:15.219 [http-nio-8081-exec-9] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [org.springframework.boot.actuate.logging.LoggersEndpoint$LoggersDescriptor@66e7dae]
2025-08-03 13:02:15.249 [http-nio-8081-exec-9] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:02:15.340 [http-nio-8081-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 13:02:15.341 [http-nio-8081-exec-10] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:15.341 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:15.341 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 6136CDE40338AB190B37C0D86771E96D
2025-08-03 13:02:15.343 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 13:02:15.346 [http-nio-8081-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 13:02:15.348 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:15.349 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 13:02:18.188 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:02:18.188 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:18.188 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:18.189 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:02:18.189 [http-nio-8080-exec-2] DEBUG [469da847d69c43eb] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:02:18.189 [http-nio-8080-exec-2] DEBUG [469da847d69c43eb] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:02:18.190 [http-nio-8080-exec-2] DEBUG [469da847d69c43eb] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:02:18.190 [http-nio-8080-exec-2] DEBUG [469da847d69c43eb] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:02:18.191 [http-nio-8080-exec-2] DEBUG [469da847d69c43eb] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:02:23.207 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:02:23.208 [http-nio-8080-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:23.209 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:23.209 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:02:23.210 [http-nio-8080-exec-4] DEBUG [2083f99eb78045bb] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:02:23.210 [http-nio-8080-exec-4] DEBUG [2083f99eb78045bb] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:02:23.211 [http-nio-8080-exec-4] DEBUG [2083f99eb78045bb] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:02:23.211 [http-nio-8080-exec-4] DEBUG [2083f99eb78045bb] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:02:23.212 [http-nio-8080-exec-4] DEBUG [2083f99eb78045bb] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:02:23.999 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/env
2025-08-03 13:02:24.000 [http-nio-8081-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:24.000 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:24.000 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 6136CDE40338AB190B37C0D86771E96D
2025-08-03 13:02:24.000 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/env
2025-08-03 13:02:24.000 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/env", parameters={}
2025-08-03 13:02:24.001 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 13:02:24.021 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 13:02:24.023 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [org.springframework.boot.actuate.env.EnvironmentEndpoint$EnvironmentDescriptor@3cb6c152]
2025-08-03 13:02:24.030 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:02:24.062 [http-nio-8081-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 13:02:24.063 [http-nio-8081-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:24.063 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:24.063 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 6136CDE40338AB190B37C0D86771E96D
2025-08-03 13:02:24.064 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 13:02:24.065 [http-nio-8081-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 13:02:24.066 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:24.066 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 13:02:28.188 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:02:28.189 [http-nio-8080-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:28.189 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:28.189 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:02:28.190 [http-nio-8080-exec-6] DEBUG [92deeb4ad9094660] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:02:28.190 [http-nio-8080-exec-6] DEBUG [92deeb4ad9094660] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:02:28.191 [http-nio-8080-exec-6] DEBUG [92deeb4ad9094660] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:02:28.191 [http-nio-8080-exec-6] DEBUG [92deeb4ad9094660] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:02:28.192 [http-nio-8080-exec-6] DEBUG [92deeb4ad9094660] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:02:33.179 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:02:33.180 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:33.180 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:33.180 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:02:33.180 [http-nio-8080-exec-7] DEBUG [caddeefefd564543] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:02:33.180 [http-nio-8080-exec-7] DEBUG [caddeefefd564543] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:02:33.181 [http-nio-8080-exec-7] DEBUG [caddeefefd564543] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:02:33.181 [http-nio-8080-exec-7] DEBUG [caddeefefd564543] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:02:33.182 [http-nio-8080-exec-7] DEBUG [caddeefefd564543] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:02:38.190 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:02:38.190 [http-nio-8080-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:38.190 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:38.190 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:02:38.190 [http-nio-8080-exec-9] DEBUG [314b1468f98b43c9] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:02:38.191 [http-nio-8080-exec-9] DEBUG [314b1468f98b43c9] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:02:38.191 [http-nio-8080-exec-9] DEBUG [314b1468f98b43c9] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:02:38.191 [http-nio-8080-exec-9] DEBUG [314b1468f98b43c9] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:02:38.193 [http-nio-8080-exec-9] DEBUG [314b1468f98b43c9] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:02:43.182 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:02:43.183 [http-nio-8080-exec-10] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:43.183 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:43.183 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:02:43.184 [http-nio-8080-exec-10] DEBUG [757c7f604197495f] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:02:43.184 [http-nio-8080-exec-10] DEBUG [757c7f604197495f] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:02:43.185 [http-nio-8080-exec-10] DEBUG [757c7f604197495f] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:02:43.185 [http-nio-8080-exec-10] DEBUG [757c7f604197495f] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:02:43.186 [http-nio-8080-exec-10] DEBUG [757c7f604197495f] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:02:48.183 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:02:48.185 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:48.185 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:48.187 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:02:48.188 [http-nio-8080-exec-1] DEBUG [d46d75aae1d54487] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:02:48.188 [http-nio-8080-exec-1] DEBUG [d46d75aae1d54487] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:02:48.191 [http-nio-8080-exec-1] DEBUG [d46d75aae1d54487] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:02:48.192 [http-nio-8080-exec-1] DEBUG [d46d75aae1d54487] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:02:48.194 [http-nio-8080-exec-1] DEBUG [d46d75aae1d54487] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:02:53.186 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:02:53.188 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:53.188 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:53.190 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:02:53.191 [http-nio-8080-exec-2] DEBUG [8ac89bc1e41345b5] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:02:53.191 [http-nio-8080-exec-2] DEBUG [8ac89bc1e41345b5] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:02:53.195 [http-nio-8080-exec-2] DEBUG [8ac89bc1e41345b5] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:02:53.196 [http-nio-8080-exec-2] DEBUG [8ac89bc1e41345b5] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:02:53.198 [http-nio-8080-exec-2] DEBUG [8ac89bc1e41345b5] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:02:58.185 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:02:58.186 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:58.186 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:58.188 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:02:58.189 [http-nio-8080-exec-5] DEBUG [d53c5f80c33c49c8] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:02:58.189 [http-nio-8080-exec-5] DEBUG [d53c5f80c33c49c8] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:02:58.193 [http-nio-8080-exec-5] DEBUG [d53c5f80c33c49c8] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:02:58.194 [http-nio-8080-exec-5] DEBUG [d53c5f80c33c49c8] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:02:58.196 [http-nio-8080-exec-5] DEBUG [d53c5f80c33c49c8] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:03:03.175 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:03:03.176 [http-nio-8080-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:03:03.176 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:03:03.176 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:03:03.176 [http-nio-8080-exec-6] DEBUG [f07cf1a2990946d7] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:03:03.176 [http-nio-8080-exec-6] DEBUG [f07cf1a2990946d7] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:03:03.177 [http-nio-8080-exec-6] DEBUG [f07cf1a2990946d7] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:03:03.177 [http-nio-8080-exec-6] DEBUG [f07cf1a2990946d7] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:03:03.178 [http-nio-8080-exec-6] DEBUG [f07cf1a2990946d7] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:03:44.191 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:03:44.192 [http-nio-8080-exec-8] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:03:44.193 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:03:44.196 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:03:44.197 [http-nio-8080-exec-8] DEBUG [9aedfc814e4640b3] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:03:44.197 [http-nio-8080-exec-8] DEBUG [9aedfc814e4640b3] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:03:44.202 [http-nio-8080-exec-8] DEBUG [9aedfc814e4640b3] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:03:44.202 [http-nio-8080-exec-8] DEBUG [9aedfc814e4640b3] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:03:44.204 [http-nio-8080-exec-8] DEBUG [9aedfc814e4640b3] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:04:34.189 [http-nio-8081-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/info
2025-08-03 13:04:34.190 [http-nio-8081-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:04:34.191 [http-nio-8081-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:04:34.191 [http-nio-8081-exec-5] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 6136CDE40338AB190B37C0D86771E96D
2025-08-03 13:04:34.191 [http-nio-8081-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/info
2025-08-03 13:04:34.191 [http-nio-8081-exec-5] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/info", parameters={}
2025-08-03 13:04:34.193 [http-nio-8081-exec-5] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 13:04:34.194 [http-nio-8081-exec-5] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 13:04:34.194 [http-nio-8081-exec-5] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{}]
2025-08-03 13:04:34.196 [http-nio-8081-exec-5] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:04:34.236 [http-nio-8081-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 13:04:34.237 [http-nio-8081-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:04:34.237 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:04:34.237 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 6136CDE40338AB190B37C0D86771E96D
2025-08-03 13:04:34.238 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 13:04:34.239 [http-nio-8081-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 13:04:34.241 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:04:34.242 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 13:04:44.184 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:04:44.185 [http-nio-8080-exec-10] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:04:44.186 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:04:44.190 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:04:44.191 [http-nio-8080-exec-10] DEBUG [cea840b8ad914063] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:04:44.191 [http-nio-8080-exec-10] DEBUG [cea840b8ad914063] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:04:44.196 [http-nio-8080-exec-10] DEBUG [cea840b8ad914063] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:04:44.197 [http-nio-8080-exec-10] DEBUG [cea840b8ad914063] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:04:44.199 [http-nio-8080-exec-10] DEBUG [cea840b8ad914063] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:05:44.185 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:05:44.186 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:05:44.187 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:05:44.188 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:05:44.189 [http-nio-8080-exec-1] DEBUG [07ee24e237db4f59] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:05:44.189 [http-nio-8080-exec-1] DEBUG [07ee24e237db4f59] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:05:44.192 [http-nio-8080-exec-1] DEBUG [07ee24e237db4f59] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:05:44.192 [http-nio-8080-exec-1] DEBUG [07ee24e237db4f59] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:05:44.194 [http-nio-8080-exec-1] DEBUG [07ee24e237db4f59] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:06:44.177 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:06:44.178 [http-nio-8080-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:06:44.178 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:06:44.178 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:06:44.178 [http-nio-8080-exec-4] DEBUG [6f40796b80da4ce8] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:06:44.179 [http-nio-8080-exec-4] DEBUG [6f40796b80da4ce8] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:06:44.180 [http-nio-8080-exec-4] DEBUG [6f40796b80da4ce8] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:06:44.181 [http-nio-8080-exec-4] DEBUG [6f40796b80da4ce8] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:06:44.181 [http-nio-8080-exec-4] DEBUG [6f40796b80da4ce8] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:07:44.185 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:07:44.186 [http-nio-8080-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:07:44.186 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:07:44.189 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:07:44.190 [http-nio-8080-exec-6] DEBUG [a678b250bd1041bb] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:07:44.190 [http-nio-8080-exec-6] DEBUG [a678b250bd1041bb] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:07:44.192 [http-nio-8080-exec-6] DEBUG [a678b250bd1041bb] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:07:44.193 [http-nio-8080-exec-6] DEBUG [a678b250bd1041bb] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:07:44.194 [http-nio-8080-exec-6] DEBUG [a678b250bd1041bb] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:08:01.331 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 13:08:01.369 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 13:08:01.373 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 13:08:01.380 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 13:08:01.494 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:08:01.510 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:08:01.529 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:08:01.529 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:08:01.530 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:08:01.533 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:08:01.534 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:08:01.558 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 13:08:01.559 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-03 13:08:01.651 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-03 13:09:28.910 [main] INFO  [] c.d.delivery.config.DataBaseTest - Starting DataBaseTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:09:28.926 [main] DEBUG [] c.d.delivery.config.DataBaseTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:09:28.927 [main] INFO  [] c.d.delivery.config.DataBaseTest - The following 1 profile is active: "test"
2025-08-03 13:09:28.957 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@fcd0e8d
2025-08-03 13:09:30.897 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:09:30.987 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 78 ms. Found 5 JPA repository interfaces.
2025-08-03 13:09:32.374 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:09:32.411 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 13:09:32.782 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:09:32.784 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 13:09:32.840 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:09:34.451 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:34.455 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:34.456 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:34.456 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:34.456 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:34.456 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:34.464 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:09:34.474 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:09:34.477 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:09:34.479 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:09:34.480 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:09:34.482 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:09:34.485 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:09:34.502 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:09:34.503 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:09:34.504 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:34.506 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:34.511 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:34.902 [main] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 13:09:36.338 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:09:36.960 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:09:37.122 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:09:37.440 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:09:37.655 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:09:37.737 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:09:38.496 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:09:38.575 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:09:38.576 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:09:38.576 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:09:38.576 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:09:38.578 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-03 13:09:38.694 [main] INFO  [] c.d.delivery.config.DataBaseTest - Started DataBaseTest in 10.807 seconds (process running for 13.296)
2025-08-03 13:09:38.962 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:09:39.038 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:09:39.040 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:09:39.043 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:09:39.444 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.461 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.463 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.464 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.464 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.465 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.477 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.479 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.480 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.481 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.481 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.482 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.498 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.500 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.502 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.503 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.504 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.505 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.517 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.528 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.530 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.531 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.533 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.535 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.536 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.538 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.538 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.539 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.540 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.541 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.541 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.542 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.543 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.544 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.544 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.545 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.546 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.548 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.548 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.549 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.550 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.551 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.555 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:39.557 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:39.559 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:39.560 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.563 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.565 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.566 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.573 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:39.574 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:39.576 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:39.577 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.578 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.579 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.580 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.582 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:39.583 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:39.584 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:39.585 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.587 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.588 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.588 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.590 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:39.591 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:39.593 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:39.594 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.595 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.596 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.596 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.598 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:39.599 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:39.600 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:39.601 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:39.603 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.604 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.605 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.606 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.607 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.648 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:09:39.655 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:09:39.665 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:09:39.672 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:09:39.677 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:09:39.686 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:09:39.693 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:09:39.699 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:09:39.701 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.706 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:09:39.708 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.711 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:09:39.712 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.713 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.714 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.715 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.716 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.719 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:39.724 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:39.726 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:39.727 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.727 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:39.728 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.734 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:09:39.735 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:39.736 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.737 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:39.737 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.738 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:39.739 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.743 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:39.763 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.765 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:40.267 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@fcd0e8d, started on Sun Aug 03 13:09:28 BRT 2025
2025-08-03 13:09:40.277 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:40.277 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:40.280 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:40.281 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:40.282 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:40.283 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:40.283 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:40.285 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 13:09:40.287 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 13:09:40.305 [main] INFO  [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.deliverytech.delivery.config.SwaggerIntegrationTest]: SwaggerIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-03 13:09:40.307 [main] INFO  [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.deliverytech.delivery.DeliveryApiApplication for test class com.deliverytech.delivery.config.SwaggerIntegrationTest
2025-08-03 13:09:40.321 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:09:40.381 [main] INFO  [] c.d.d.config.SwaggerIntegrationTest - Starting SwaggerIntegrationTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:09:40.381 [main] DEBUG [] c.d.d.config.SwaggerIntegrationTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:09:40.381 [main] INFO  [] c.d.d.config.SwaggerIntegrationTest - The following 1 profile is active: "development"
2025-08-03 13:09:40.972 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:09:41.005 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 30 ms. Found 5 JPA repository interfaces.
2025-08-03 13:09:41.357 [main] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2025-08-03 13:09:41.388 [main] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2025-08-03 13:09:41.390 [main] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 13:09:41.390 [main] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 13:09:41.474 [main] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 13:09:41.475 [main] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1091 ms
2025-08-03 13:09:41.590 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:09:41.592 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-03 13:09:41.597 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 13:09:41.598 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-03 13:09:41.599 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:09:41.699 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:41.699 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:41.700 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:41.700 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:41.700 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:41.700 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:41.701 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:09:41.702 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:09:41.703 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:09:41.704 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:09:41.705 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:09:41.707 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:09:41.708 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:09:41.710 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:09:41.713 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:09:41.715 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:41.716 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:41.718 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:41.798 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:09:41.798 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:09:41.958 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:09:42.049 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:09:42.094 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:09:42.193 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:09:42.255 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:09:42.276 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:09:42.366 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 13:09:42.483 [main] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2025-08-03 13:09:42.526 [main] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 63998 (http) with context path '/'
2025-08-03 13:09:42.636 [main] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2025-08-03 13:09:42.637 [main] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-2"]
2025-08-03 13:09:42.638 [main] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 13:09:42.638 [main] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 13:09:42.681 [main] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 13:09:42.681 [main] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 151 ms
2025-08-03 13:09:42.703 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 13:09:42.740 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 1 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:09:42.756 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:09:42.774 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:09:42.782 [main] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-2"]
2025-08-03 13:09:42.788 [main] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 64002 (http) with context path '/'
2025-08-03 13:09:42.798 [main] INFO  [] c.d.d.config.SwaggerIntegrationTest - Started SwaggerIntegrationTest in 2.477 seconds (process running for 17.4)
2025-08-03 13:09:42.805 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:09:42.811 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:09:42.814 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:09:42.817 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:09:43.196 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.199 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.200 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.201 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.201 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.202 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.207 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.209 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.211 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.212 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.213 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.214 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.218 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.219 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.221 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.223 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.224 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.226 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.229 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.232 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.233 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.235 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.237 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.239 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.241 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.242 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.243 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.244 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.245 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.246 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.247 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.248 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.249 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.249 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.250 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.251 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.252 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.252 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.253 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.254 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.255 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.255 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.258 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:43.261 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:43.263 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:43.265 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.268 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.270 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.271 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.273 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:43.275 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:43.277 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:43.278 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.280 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.280 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.282 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.284 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:43.285 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:43.287 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:43.288 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.289 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.290 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.291 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.293 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:43.294 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:43.296 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:43.299 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.301 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.303 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.304 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.305 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:43.307 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:43.309 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:43.310 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:43.311 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.313 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.314 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.315 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.316 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.319 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:09:43.323 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:09:43.329 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:09:43.333 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:09:43.336 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:09:43.339 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:09:43.344 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:09:43.349 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:09:43.350 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.354 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:09:43.355 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.358 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:09:43.359 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.360 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.361 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.362 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.363 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.366 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:43.369 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:43.370 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:43.371 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.373 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:43.373 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.376 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:09:43.378 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:43.379 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.380 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:43.382 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.383 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:43.384 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.387 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:43.425 [main] DEBUG [] o.s.web.client.RestTemplate - HTTP GET http://localhost:63998/api-docs
2025-08-03 13:09:43.433 [main] DEBUG [] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 13:09:43.630 [http-nio-auto-1-exec-1] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 13:09:43.630 [http-nio-auto-1-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 13:09:43.630 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 13:09:43.630 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 13:09:43.630 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 13:09:43.631 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7d9eec48
2025-08-03 13:09:43.632 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@6adc3ac1
2025-08-03 13:09:43.632 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 13:09:43.632 [http-nio-auto-1-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-03 13:09:43.666 [http-nio-auto-1-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api-docs
2025-08-03 13:09:43.682 [http-nio-auto-1-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:09:43.686 [http-nio-auto-1-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:09:43.735 [http-nio-auto-1-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api-docs
2025-08-03 13:09:43.770 [http-nio-auto-1-exec-1] DEBUG [ca920940b99f47d3] o.s.web.servlet.DispatcherServlet - GET "/api-docs", parameters={}
2025-08-03 13:09:43.774 [http-nio-auto-1-exec-1] DEBUG [ca920940b99f47d3] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
2025-08-03 13:09:46.567 [http-nio-auto-1-exec-1] INFO  [ca920940b99f47d3] o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 2743 ms
2025-08-03 13:09:46.614 [http-nio-auto-1-exec-1] DEBUG [ca920940b99f47d3] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [text/plain, application/json, application/yaml, application/*+json, */*] and supported [application/json]
2025-08-03 13:09:46.623 [http-nio-auto-1-exec-1] DEBUG [ca920940b99f47d3] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 49, 46, 48, 34, 44, 34, 105, 110, 10 (truncated)...]
2025-08-03 13:09:46.631 [http-nio-auto-1-exec-1] DEBUG [ca920940b99f47d3] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:09:46.662 [main] DEBUG [] o.s.web.client.RestTemplate - Response 200 OK
2025-08-03 13:09:46.663 [main] DEBUG [] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json"
2025-08-03 13:09:46.694 [main] DEBUG [] o.s.web.client.RestTemplate - HTTP GET http://localhost:63998/api-docs
2025-08-03 13:09:46.694 [main] DEBUG [] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 13:09:46.699 [http-nio-auto-1-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api-docs
2025-08-03 13:09:46.699 [http-nio-auto-1-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:09:46.700 [http-nio-auto-1-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:09:46.701 [http-nio-auto-1-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api-docs
2025-08-03 13:09:46.701 [http-nio-auto-1-exec-2] DEBUG [40c359d9945c48a2] o.s.web.servlet.DispatcherServlet - GET "/api-docs", parameters={}
2025-08-03 13:09:46.701 [http-nio-auto-1-exec-2] DEBUG [40c359d9945c48a2] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
2025-08-03 13:09:46.714 [http-nio-auto-1-exec-2] DEBUG [40c359d9945c48a2] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [text/plain, application/json, application/yaml, application/*+json, */*] and supported [application/json]
2025-08-03 13:09:46.721 [http-nio-auto-1-exec-2] DEBUG [40c359d9945c48a2] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 49, 46, 48, 34, 44, 34, 105, 110, 10 (truncated)...]
2025-08-03 13:09:46.722 [http-nio-auto-1-exec-2] DEBUG [40c359d9945c48a2] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:09:46.722 [main] DEBUG [] o.s.web.client.RestTemplate - Response 200 OK
2025-08-03 13:09:46.722 [main] DEBUG [] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json"
2025-08-03 13:09:46.737 [main] DEBUG [] o.s.web.client.RestTemplate - HTTP GET http://localhost:63998/swagger-ui.html
2025-08-03 13:09:46.738 [main] DEBUG [] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 13:09:46.741 [http-nio-auto-1-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui.html
2025-08-03 13:09:46.741 [http-nio-auto-1-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:09:46.742 [http-nio-auto-1-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:09:46.743 [http-nio-auto-1-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui.html
2025-08-03 13:09:46.743 [http-nio-auto-1-exec-3] DEBUG [ddf2589b62874607] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui.html", parameters={}
2025-08-03 13:09:46.743 [http-nio-auto-1-exec-3] DEBUG [ddf2589b62874607] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.ui.SwaggerWelcomeWebMvc#redirectToUi(HttpServletRequest)
2025-08-03 13:09:46.747 [http-nio-auto-1-exec-3] DEBUG [ddf2589b62874607] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [text/plain, application/json, application/yaml, application/*+json, */*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:09:46.748 [http-nio-auto-1-exec-3] DEBUG [ddf2589b62874607] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Nothing to write: null body
2025-08-03 13:09:46.748 [http-nio-auto-1-exec-3] DEBUG [ddf2589b62874607] o.s.web.servlet.DispatcherServlet - Completed 302 FOUND
2025-08-03 13:09:46.759 [http-nio-auto-1-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-08-03 13:09:46.760 [http-nio-auto-1-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:09:46.760 [http-nio-auto-1-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:09:46.762 [http-nio-auto-1-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-08-03 13:09:46.762 [http-nio-auto-1-exec-4] DEBUG [a2cbb7b7206b4fc2] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/index.html", parameters={}
2025-08-03 13:09:46.763 [http-nio-auto-1-exec-4] DEBUG [a2cbb7b7206b4fc2] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-08-03 13:09:46.767 [http-nio-auto-1-exec-4] DEBUG [a2cbb7b7206b4fc2] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:09:46.768 [main] DEBUG [] o.s.web.client.RestTemplate - Response 200 OK
2025-08-03 13:09:46.768 [main] DEBUG [] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "text/html"
2025-08-03 13:09:46.775 [main] INFO  [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.deliverytech.delivery.controller.ClienteControllerITTest]: ClienteControllerITTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-03 13:09:46.788 [main] INFO  [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.deliverytech.delivery.DeliveryApiApplication for test class com.deliverytech.delivery.controller.ClienteControllerITTest
2025-08-03 13:09:46.792 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:09:46.821 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:09:46.821 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:09:46.821 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-03 13:09:46.824 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@43ead5
2025-08-03 13:09:47.156 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:09:47.176 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 5 JPA repository interfaces.
2025-08-03 13:09:47.289 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:09:47.291 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-08-03 13:09:47.292 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection conn20: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:09:47.292 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-08-03 13:09:47.293 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:09:47.373 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:47.373 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:47.373 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:47.373 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:47.374 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:47.374 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:47.375 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:09:47.377 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:09:47.379 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:09:47.380 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:09:47.382 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:09:47.383 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:09:47.385 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:09:47.386 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:09:47.388 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:09:47.390 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:47.392 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:47.395 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:47.560 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:09:47.679 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:09:47.712 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:09:47.785 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:09:47.828 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:09:47.836 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:09:47.918 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:09:47.933 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:09:47.933 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:09:47.933 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:09:47.933 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:09:47.934 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-03 13:09:47.962 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 1.17 seconds (process running for 22.564)
2025-08-03 13:09:47.966 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:09:47.970 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:09:47.972 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:09:47.974 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:09:48.332 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.333 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.334 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.334 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.335 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.335 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.337 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.339 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.339 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.340 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.340 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.342 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.345 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.346 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.347 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.348 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.349 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.350 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.351 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.353 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.354 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.354 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.355 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.357 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.358 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.359 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.360 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.360 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.361 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.361 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.362 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.362 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.363 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.363 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.364 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.364 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.365 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.365 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.366 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.366 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.368 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.368 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.371 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:48.373 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:48.374 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:48.375 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.377 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.378 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.378 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.380 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:48.381 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:48.381 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:48.382 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.383 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.383 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.384 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.385 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:48.386 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:48.386 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:48.387 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.388 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.389 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.390 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.391 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:48.392 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:48.393 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:48.393 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.395 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.395 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.396 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.397 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:48.398 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:48.399 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:48.400 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:48.401 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.402 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.403 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.404 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.404 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.407 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:09:48.409 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:09:48.413 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:09:48.416 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:09:48.418 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:09:48.421 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:09:48.424 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:09:48.427 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:09:48.428 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.431 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:09:48.432 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.436 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:09:48.437 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.438 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.439 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.439 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.440 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.442 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:48.445 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:48.446 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:48.447 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.447 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:48.448 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.450 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:09:48.451 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:48.452 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.452 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:48.453 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.453 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:48.454 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.456 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:48.462 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.464 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.476 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:09:48.486 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing DELETE /api/clientes/7
2025-08-03 13:09:48.489 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:09:48.491 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured DELETE /api/clientes/7
2025-08-03 13:09:48.493 [main] DEBUG [e04ac72743ac4ecc] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#deletarCliente(Long)
2025-08-03 13:09:48.495 [main] DEBUG [e04ac72743ac4ecc] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.deletarCliente(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-03 13:09:48.508 [main] DEBUG [e04ac72743ac4ecc] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.deletarCliente(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-03 13:09:48.509 [main] DEBUG [e04ac72743ac4ecc] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:48.520 [main] DEBUG [e04ac72743ac4ecc] org.hibernate.SQL - 
    /* delete for com.deliverytech.delivery.entity.Cliente */delete 
    from
        clientes 
    where
        id=?
2025-08-03 13:09:48.531 [main] DEBUG [e04ac72743ac4ecc] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:09:48.532 [main] DEBUG [e04ac72743ac4ecc] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Nothing to write: null body
2025-08-03 13:09:48.546 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/clientes/7
2025-08-03 13:09:48.546 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:09:48.547 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/clientes/7
2025-08-03 13:09:48.548 [main] DEBUG [ee52e8aa71cd4870] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#buscarPorId(Long)
2025-08-03 13:09:48.548 [main] DEBUG [ee52e8aa71cd4870] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-03 13:09:48.549 [main] DEBUG [ee52e8aa71cd4870] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-03 13:09:48.550 [main] DEBUG [ee52e8aa71cd4870] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:48.555 [main] DEBUG [ee52e8aa71cd4870] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleEntityNotFoundException(EntityNotFoundException, WebRequest)
2025-08-03 13:09:48.559 [main] DEBUG [ee52e8aa71cd4870] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:09:48.559 [main] DEBUG [ee52e8aa71cd4870] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@b838753]
2025-08-03 13:09:48.564 [main] DEBUG [ee52e8aa71cd4870] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.deliverytech.delivery.exceptions.EntityNotFoundException: Cliente não encontrado: 7]
2025-08-03 13:09:48.568 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@43ead5, started on Sun Aug 03 13:09:46 BRT 2025
2025-08-03 13:09:48.571 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:48.571 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:48.572 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:48.573 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:48.573 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:48.574 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:48.575 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:48.576 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2025-08-03 13:09:48.576 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2025-08-03 13:09:48.580 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:09:48.616 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:09:48.617 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:09:48.617 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-03 13:09:48.618 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@70972923
2025-08-03 13:09:48.921 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:09:48.938 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 5 JPA repository interfaces.
2025-08-03 13:09:49.030 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:09:49.031 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
2025-08-03 13:09:49.032 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Added connection conn30: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:09:49.032 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
2025-08-03 13:09:49.033 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:09:49.096 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:49.096 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:49.096 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:49.096 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:49.096 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:49.096 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:49.097 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:09:49.098 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:09:49.099 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:09:49.099 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:09:49.100 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:09:49.101 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:09:49.103 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:09:49.104 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:09:49.105 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:09:49.106 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:49.107 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:49.108 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:49.238 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:09:49.337 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:09:49.373 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:09:49.441 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:09:49.479 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:09:49.486 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:09:49.553 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:09:49.564 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:09:49.564 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:09:49.564 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:09:49.564 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:09:49.565 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-03 13:09:49.579 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 0.999 seconds (process running for 24.181)
2025-08-03 13:09:49.581 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:09:49.585 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:09:49.588 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:09:49.590 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:09:49.945 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.946 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.947 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.947 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.948 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.948 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.950 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.950 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.951 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.951 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.952 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.952 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.954 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.955 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.956 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.956 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.957 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.957 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.959 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:49.960 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:49.961 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:49.962 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:49.963 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:49.964 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:49.965 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.966 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.966 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.967 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.967 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.967 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.968 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.969 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.969 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.970 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.970 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.971 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.971 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.972 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.972 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.973 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.973 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.974 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.975 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:49.977 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:49.978 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:49.979 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:49.980 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.981 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.981 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.982 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:49.983 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:49.984 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:49.984 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:49.985 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.986 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.986 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.987 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:49.988 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:49.989 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:49.990 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:49.990 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.991 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.992 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.992 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:49.994 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:49.995 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:49.995 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:49.996 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.997 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.997 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.998 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:49.999 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:50.000 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:50.001 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:50.002 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:50.003 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:50.004 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:50.004 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:50.004 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:50.008 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:09:50.010 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:09:50.013 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:09:50.016 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:09:50.018 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:09:50.020 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:09:50.022 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:09:50.025 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:09:50.026 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:50.028 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:09:50.029 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:50.031 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:09:50.031 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:50.032 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:50.032 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:50.033 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:50.033 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:50.036 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:50.038 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:50.038 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:50.039 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:50.040 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:50.040 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:50.042 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:09:50.043 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:50.043 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:50.043 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:50.044 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:50.044 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:50.045 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:50.047 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:50.051 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:50.053 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:50.060 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/clientes
2025-08-03 13:09:50.061 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:09:50.061 [main] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:09:50.063 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/clientes
2025-08-03 13:09:50.064 [main] DEBUG [2cb6a3a8ccc54884] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#cadastrarCliente(ClienteRequestDTO)
2025-08-03 13:09:50.078 [main] DEBUG [2cb6a3a8ccc54884] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ClienteRequestDTO{email='mariacliente@email.com', nome='Maria Silva', telefone='11888888888', endere (truncated)...]
2025-08-03 13:09:50.138 [main] DEBUG [2cb6a3a8ccc54884] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:09:50.140 [main] DEBUG [2cb6a3a8ccc54884] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.cpf=? 
    fetch
        first ? rows only
2025-08-03 13:09:50.172 [main] DEBUG [2cb6a3a8ccc54884] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:50.177 [main] DEBUG [2cb6a3a8ccc54884] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:09:50.177 [main] DEBUG [2cb6a3a8ccc54884] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@fb988d2]
2025-08-03 13:09:50.235 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@70972923, started on Sun Aug 03 13:09:48 BRT 2025
2025-08-03 13:09:50.242 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:50.242 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:50.243 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:50.243 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:50.244 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:50.244 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:50.244 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:50.245 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown initiated...
2025-08-03 13:09:50.246 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown completed.
2025-08-03 13:09:50.248 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:09:50.275 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:09:50.276 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:09:50.276 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-03 13:09:50.277 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@408ebb0f
2025-08-03 13:09:50.511 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:09:50.527 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2025-08-03 13:09:50.606 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:09:50.607 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Starting...
2025-08-03 13:09:50.608 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-5 - Added connection conn40: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:09:50.608 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Start completed.
2025-08-03 13:09:50.608 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:09:50.664 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:50.665 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:50.665 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:50.665 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:50.665 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:50.665 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:50.677 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:09:50.678 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:09:50.679 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:09:50.680 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:09:50.681 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:09:50.682 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:09:50.683 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:09:50.684 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:09:50.685 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:09:50.686 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:50.687 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:50.689 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:50.841 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:09:50.944 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:09:51.009 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:09:51.076 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:09:51.114 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:09:51.123 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:09:51.195 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:09:51.207 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:09:51.207 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:09:51.207 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:09:51.207 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:09:51.208 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-03 13:09:51.221 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 0.972 seconds (process running for 25.823)
2025-08-03 13:09:51.225 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:09:51.228 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:09:51.230 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:09:51.232 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:09:51.588 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.590 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.590 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.590 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.591 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.592 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.594 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.595 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.595 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.595 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.596 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.596 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.598 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.599 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.600 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.601 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.601 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.602 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.603 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.604 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.605 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.606 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.607 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.608 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.609 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.610 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.610 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.611 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.611 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.612 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.612 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.612 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.613 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.613 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.614 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.614 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.614 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.615 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.615 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.615 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.616 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.616 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.618 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:51.621 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:51.623 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:51.624 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.626 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.627 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.628 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.629 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:51.630 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:51.631 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:51.631 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.632 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.633 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.633 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.634 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:51.635 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:51.636 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:51.637 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.642 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.643 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.644 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.645 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:51.646 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:51.647 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:51.648 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.649 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.649 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.650 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.651 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:51.651 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:51.652 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:51.653 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:51.653 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.654 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.655 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.656 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.656 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.659 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:09:51.661 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:09:51.663 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:09:51.665 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:09:51.667 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:09:51.669 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:09:51.672 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:09:51.675 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:09:51.676 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.678 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:09:51.679 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.682 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:09:51.683 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.684 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.685 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.685 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.685 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.687 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:51.689 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:51.690 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:51.691 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.691 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:51.691 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.693 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:09:51.694 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:51.694 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.695 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:51.695 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.695 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:51.696 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.698 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:51.703 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.705 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.710 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:09:51.713 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/clientes/1
2025-08-03 13:09:51.715 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:09:51.716 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/clientes/1
2025-08-03 13:09:51.717 [main] DEBUG [243724337bcf4313] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#buscarPorId(Long)
2025-08-03 13:09:51.719 [main] DEBUG [243724337bcf4313] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-03 13:09:51.720 [main] DEBUG [243724337bcf4313] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-03 13:09:51.720 [main] DEBUG [243724337bcf4313] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:51.724 [main] DEBUG [243724337bcf4313] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:09:51.725 [main] DEBUG [243724337bcf4313] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@d4f694a]
2025-08-03 13:09:51.731 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@408ebb0f, started on Sun Aug 03 13:09:50 BRT 2025
2025-08-03 13:09:51.733 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:51.733 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:51.734 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:51.734 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:51.734 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:51.734 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:51.735 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:51.735 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown initiated...
2025-08-03 13:09:51.736 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown completed.
2025-08-03 13:09:51.738 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:09:51.763 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:09:51.763 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:09:51.763 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-03 13:09:51.765 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@77c86e14
2025-08-03 13:09:51.997 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:09:52.012 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
2025-08-03 13:09:52.084 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:09:52.085 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Starting...
2025-08-03 13:09:52.086 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-6 - Added connection conn50: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:09:52.086 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Start completed.
2025-08-03 13:09:52.086 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:09:52.141 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:52.141 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:52.141 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:52.141 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:52.141 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:52.141 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:52.142 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:09:52.142 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:09:52.143 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:09:52.146 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:09:52.147 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:09:52.148 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:09:52.148 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:09:52.149 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:09:52.150 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:09:52.151 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:52.152 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:52.153 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:52.273 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:09:52.362 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:09:52.394 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:09:52.459 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:09:52.497 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:09:52.505 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:09:52.568 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:09:52.579 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:09:52.580 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:09:52.580 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:09:52.580 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:09:52.580 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-08-03 13:09:52.594 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 0.856 seconds (process running for 27.197)
2025-08-03 13:09:52.596 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:09:52.599 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:09:52.602 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:09:52.604 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:09:52.963 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.964 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.964 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.965 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.965 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.966 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.968 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.968 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.969 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.969 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.970 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.970 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.972 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.973 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.974 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.976 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.977 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.978 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.979 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:52.981 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:52.982 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:52.983 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:52.984 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:52.985 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:52.986 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.987 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.987 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.989 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.989 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.998 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.998 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.999 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.999 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.000 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.000 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.001 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.001 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.001 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.002 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.002 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.003 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.003 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.005 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:53.007 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:53.009 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:53.011 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.012 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.013 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.014 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.015 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:53.016 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:53.017 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:53.017 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.018 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.019 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.019 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.020 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:53.021 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:53.022 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:53.023 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.024 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.025 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.025 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.026 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:53.027 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:53.028 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:53.028 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.029 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.030 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.031 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.032 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:53.033 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:53.033 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:53.034 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:53.035 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.035 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.036 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.037 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.038 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.041 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:09:53.043 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:09:53.046 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:09:53.048 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:09:53.050 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:09:53.051 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:09:53.054 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:09:53.056 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:09:53.057 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.059 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:09:53.060 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.062 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:09:53.063 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.063 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.064 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.064 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.064 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.066 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:53.068 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:53.069 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:53.069 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.070 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:53.070 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.072 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:09:53.072 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:53.073 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.073 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:53.073 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.074 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:53.074 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.076 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:53.080 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.083 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.087 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:09:53.093 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing PUT /api/clientes/1
2025-08-03 13:09:53.094 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:09:53.096 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured PUT /api/clientes/1
2025-08-03 13:09:53.097 [main] DEBUG [113b4186b40f475d] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#atualizarCliente(Long, ClienteRequestDTO)
2025-08-03 13:09:53.100 [main] DEBUG [113b4186b40f475d] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ClienteRequestDTO{email='novoemail@email.com', nome='Nome Atualizado', telefone='11777777777', ender (truncated)...]
2025-08-03 13:09:53.104 [main] DEBUG [113b4186b40f475d] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.atualizarCliente(java.lang.Long,com.deliverytech.delivery.dto.request.ClienteRequestDTO); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-03 13:09:53.106 [main] DEBUG [113b4186b40f475d] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.atualizarCliente(java.lang.Long,com.deliverytech.delivery.dto.request.ClienteRequestDTO); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-03 13:09:53.106 [main] DEBUG [113b4186b40f475d] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:53.118 [main] DEBUG [113b4186b40f475d] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Cliente */update clientes 
    set
        ativo=?,
        cpf=?,
        data_cadastro=?,
        email=?,
        endereco=?,
        nome=?,
        telefone=? 
    where
        id=?
2025-08-03 13:09:53.122 [main] DEBUG [113b4186b40f475d] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:09:53.122 [main] DEBUG [113b4186b40f475d] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@5bd89199]
2025-08-03 13:09:53.127 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@77c86e14, started on Sun Aug 03 13:09:51 BRT 2025
2025-08-03 13:09:53.129 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:53.129 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:53.129 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:53.130 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:53.130 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:53.130 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:53.130 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:53.131 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown initiated...
2025-08-03 13:09:53.132 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown completed.
2025-08-03 13:09:53.134 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:09:53.158 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:09:53.158 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:09:53.158 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-03 13:09:53.159 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@72220379
2025-08-03 13:09:53.424 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:09:53.440 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2025-08-03 13:09:53.514 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:09:53.515 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Starting...
2025-08-03 13:09:53.516 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-7 - Added connection conn60: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:09:53.516 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Start completed.
2025-08-03 13:09:53.517 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:09:53.569 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:53.569 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:53.569 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:53.569 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:53.569 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:53.570 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:53.570 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:09:53.571 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:09:53.572 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:09:53.573 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:09:53.574 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:09:53.574 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:09:53.575 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:09:53.576 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:09:53.577 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:09:53.578 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:53.579 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:53.580 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:53.688 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:09:53.766 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:09:53.797 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:09:53.859 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:09:53.894 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:09:53.923 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:09:53.980 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:09:53.991 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:09:53.991 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:09:53.991 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:09:53.991 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:09:53.992 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-03 13:09:54.004 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 0.87 seconds (process running for 28.607)
2025-08-03 13:09:54.006 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:09:54.009 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:09:54.011 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:09:54.012 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:09:54.369 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.370 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.371 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.371 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.371 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.372 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.374 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.375 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.375 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.375 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.376 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.378 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.380 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.381 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.381 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.382 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.382 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.383 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.384 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.385 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.386 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.387 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.387 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.388 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.389 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.390 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.390 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.391 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.391 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.392 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.392 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.392 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.393 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.393 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.393 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.394 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.394 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.394 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.395 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.395 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.396 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.396 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.397 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:54.399 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:54.400 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:54.400 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.401 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.402 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.403 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.404 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:54.404 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:54.406 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:54.406 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.407 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.408 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.408 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.409 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:54.410 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:54.411 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:54.411 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.412 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.413 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.413 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.414 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:54.415 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:54.416 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:54.416 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.417 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.418 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.418 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.419 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:54.420 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:54.421 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:54.422 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:54.423 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.424 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.425 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.426 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.426 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.429 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:09:54.431 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:09:54.433 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:09:54.435 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:09:54.437 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:09:54.439 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:09:54.441 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:09:54.443 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:09:54.444 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.446 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:09:54.447 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.449 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:09:54.449 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.450 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.450 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.451 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.451 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.453 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:54.456 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:54.456 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:54.457 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.457 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:54.458 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.459 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:09:54.460 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:54.461 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.461 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:54.461 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.462 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:54.462 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.464 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:54.469 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.471 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.476 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/clientes
2025-08-03 13:09:54.477 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:09:54.479 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/clientes
2025-08-03 13:09:54.479 [main] DEBUG [02a36895e70f4426] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#listarClientesAtivos(Pageable)
2025-08-03 13:09:54.482 [main] DEBUG [02a36895e70f4426] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.listarClientesAtivos(org.springframework.data.domain.Pageable); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-03 13:09:54.483 [main] DEBUG [02a36895e70f4426] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.listarClientesAtivos(org.springframework.data.domain.Pageable); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-03 13:09:54.487 [main] DEBUG [02a36895e70f4426] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo 
    fetch
        first ? rows only
2025-08-03 13:09:54.499 [main] DEBUG [02a36895e70f4426] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:09:54.500 [main] DEBUG [02a36895e70f4426] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.PagedResponseWrapper@1f70d9cf]
2025-08-03 13:09:54.513 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@72220379, started on Sun Aug 03 13:09:53 BRT 2025
2025-08-03 13:09:54.515 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:54.515 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:54.515 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:54.516 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:54.516 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:54.516 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:54.516 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:54.517 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown initiated...
2025-08-03 13:09:54.518 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown completed.
2025-08-03 13:09:54.520 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:09:54.541 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:09:54.542 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:09:54.542 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-03 13:09:54.542 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@11a4fef0
2025-08-03 13:09:54.741 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:09:54.754 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2025-08-03 13:09:54.818 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:09:54.818 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Starting...
2025-08-03 13:09:54.819 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-8 - Added connection conn70: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:09:54.819 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Start completed.
2025-08-03 13:09:54.819 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:09:54.867 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:54.867 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:54.867 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:54.867 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:54.880 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:54.880 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:54.880 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:09:54.881 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:09:54.882 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:09:54.882 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:09:54.883 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:09:54.884 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:09:54.884 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:09:54.885 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:09:54.886 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:09:54.887 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:54.888 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:54.890 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:55.005 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:09:55.113 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:09:55.150 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:09:55.219 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:09:55.255 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:09:55.261 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:09:55.321 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:09:55.333 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:09:55.333 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:09:55.333 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:09:55.334 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:09:55.334 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-08-03 13:09:55.348 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 0.827 seconds (process running for 29.951)
2025-08-03 13:09:55.351 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:09:55.355 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:09:55.356 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:09:55.358 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:09:55.721 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.724 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.726 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.728 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.729 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.730 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.733 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.734 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.735 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.735 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.736 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.736 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.738 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.741 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.742 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.744 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.747 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.748 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.750 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.752 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.753 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.754 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.760 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.763 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.764 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.765 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.766 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.767 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.767 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.768 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.768 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.768 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.769 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.769 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.769 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.770 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.770 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.770 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.770 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.771 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.771 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.771 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.773 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:55.774 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:55.775 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:55.776 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.777 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.778 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.779 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.780 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:55.781 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:55.782 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:55.782 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.783 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.784 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.784 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.785 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:55.786 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:55.787 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:55.787 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.788 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.789 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.789 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.790 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:55.790 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:55.791 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:55.791 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.793 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.793 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.794 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.795 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:55.797 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:55.797 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:55.797 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:55.798 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.799 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.801 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.801 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.801 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.803 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:09:55.806 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:09:55.815 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:09:55.818 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:09:55.820 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:09:55.824 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:09:55.826 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:09:55.829 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:09:55.830 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.833 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:09:55.834 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.838 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:09:55.840 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.841 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.842 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.843 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.844 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.848 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:55.851 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:55.852 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:55.853 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.853 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:55.854 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.856 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:09:55.858 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:55.859 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.860 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:55.861 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.862 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:55.863 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.868 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:55.873 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.875 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.882 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/clientes/999
2025-08-03 13:09:55.883 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:09:55.885 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/clientes/999
2025-08-03 13:09:55.886 [main] DEBUG [5dcb124b2c05406b] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#buscarPorId(Long)
2025-08-03 13:09:55.887 [main] DEBUG [5dcb124b2c05406b] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-03 13:09:55.888 [main] DEBUG [5dcb124b2c05406b] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-03 13:09:55.889 [main] DEBUG [5dcb124b2c05406b] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:55.890 [main] DEBUG [5dcb124b2c05406b] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleEntityNotFoundException(EntityNotFoundException, WebRequest)
2025-08-03 13:09:55.893 [main] DEBUG [5dcb124b2c05406b] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:09:55.894 [main] DEBUG [5dcb124b2c05406b] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@5d96f3f1]
2025-08-03 13:09:55.894 [main] DEBUG [5dcb124b2c05406b] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.deliverytech.delivery.exceptions.EntityNotFoundException: Cliente não encontrado: 999]
2025-08-03 13:09:55.903 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@11a4fef0, started on Sun Aug 03 13:09:54 BRT 2025
2025-08-03 13:09:55.905 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:55.906 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:55.906 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:55.907 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:55.907 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:55.907 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:55.907 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:55.908 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown initiated...
2025-08-03 13:09:55.909 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown completed.
2025-08-03 13:09:55.913 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:09:55.955 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:09:55.957 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:09:55.957 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-03 13:09:55.960 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@493ed9a0
2025-08-03 13:09:56.483 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:09:56.522 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 33 ms. Found 5 JPA repository interfaces.
2025-08-03 13:09:56.671 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:09:56.672 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Starting...
2025-08-03 13:09:56.674 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-9 - Added connection conn80: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:09:56.674 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Start completed.
2025-08-03 13:09:56.674 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:09:56.762 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:56.762 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:56.762 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:56.762 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:56.762 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:56.763 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:56.763 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:09:56.765 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:09:56.766 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:09:56.768 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:09:56.769 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:09:56.771 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:09:56.772 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:09:56.774 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:09:56.775 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:09:56.776 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:56.778 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:56.781 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:56.992 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:09:57.123 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:09:57.161 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:09:57.225 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:09:57.264 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:09:57.272 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:09:57.339 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:09:57.353 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:09:57.353 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:09:57.353 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:09:57.353 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:09:57.354 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-03 13:09:57.368 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 1.456 seconds (process running for 31.97)
2025-08-03 13:09:57.371 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:09:57.374 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:09:57.376 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:09:57.378 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:09:57.740 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.741 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.741 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.742 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.742 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.742 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.744 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.744 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.745 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.745 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.746 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.746 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.748 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.749 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.749 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.750 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.751 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.751 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.752 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.754 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.755 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.756 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.757 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.758 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.758 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.759 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.760 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.760 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.760 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.760 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.761 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.761 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.762 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.762 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.762 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.763 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.763 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.764 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.764 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.764 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.765 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.765 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.766 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:57.768 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:57.769 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:57.770 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.771 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.772 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.772 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.774 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:57.774 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:57.775 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:57.775 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.776 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.777 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.777 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.778 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:57.779 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:57.779 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:57.780 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.781 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.781 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.782 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.784 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:57.785 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:57.786 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:57.786 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.787 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.787 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.788 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.789 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:57.790 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:57.790 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:57.791 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:57.792 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.793 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.794 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.794 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.795 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.798 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:09:57.800 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:09:57.803 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:09:57.806 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:09:57.809 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:09:57.812 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:09:57.814 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:09:57.817 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:09:57.818 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.820 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:09:57.821 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.823 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:09:57.824 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.824 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.825 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.825 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.825 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.828 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:57.830 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:57.832 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:57.832 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.833 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:57.833 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.835 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:09:57.836 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:57.837 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.837 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:57.837 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.838 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:57.838 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.840 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:57.845 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.848 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.855 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/clientes
2025-08-03 13:09:57.856 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:09:57.856 [main] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:09:57.857 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/clientes
2025-08-03 13:09:57.858 [main] DEBUG [b2fe87f5d1534997] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#cadastrarCliente(ClienteRequestDTO)
2025-08-03 13:09:57.860 [main] DEBUG [b2fe87f5d1534997] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ClienteRequestDTO{email='email-invalido', nome='', telefone='', endereco=''}]
2025-08-03 13:09:57.883 [main] DEBUG [b2fe87f5d1534997] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException, WebRequest)
2025-08-03 13:09:57.885 [main] DEBUG [b2fe87f5d1534997] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:09:57.885 [main] DEBUG [b2fe87f5d1534997] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@6c40b06e]
2025-08-03 13:09:57.886 [main] DEBUG [b2fe87f5d1534997] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.deliverytech.delivery.dto.response.ApiResponseWrapper<com.deliverytech.delivery.dto.response.ClienteResponseDTO>> com.deliverytech.delivery.controller.ClienteController.cadastrarCliente(com.deliverytech.delivery.dto.request.ClienteRequestDTO) with 7 errors: [Field error in object 'clienteRequestDTO' on field 'telefone': rejected value []; codes [Pattern.clienteRequestDTO.telefone,Pattern.telefone,Pattern.java.lang.String,Pattern]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.telefone,telefone]; arguments []; default message [telefone],[Ljakarta.validation.constraints.Pattern$Flag;@23a4adba,^\+?[0-9]{10,15}$]; default message [O telefone deve ser um número válido com 10 a 15 dígitos, podendo iniciar com '+']] [Field error in object 'clienteRequestDTO' on field 'endereco': rejected value []; codes [NotBlank.clienteRequestDTO.endereco,NotBlank.endereco,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.endereco,endereco]; arguments []; default message [endereco]]; default message [O endereço é obrigatório]] [Field error in object 'clienteRequestDTO' on field 'telefone': rejected value []; codes [Pattern.clienteRequestDTO.telefone,Pattern.telefone,Pattern.java.lang.String,Pattern]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.telefone,telefone]; arguments []; default message [telefone],[Ljakarta.validation.constraints.Pattern$Flag;@23a4adba,^\+?[0-9]{10,15}$]; default message [O telefone deve ser um número válido com 10 a 15 dígitos]] [Field error in object 'clienteRequestDTO' on field 'email': rejected value [email-invalido]; codes [Email.clienteRequestDTO.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@329733eb,.*]; default message [O email deve ser válido]] [Field error in object 'clienteRequestDTO' on field 'nome': rejected value []; codes [NotBlank.clienteRequestDTO.nome,NotBlank.nome,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.nome,nome]; arguments []; default message [nome]]; default message [O nome é obrigatório]] [Field error in object 'clienteRequestDTO' on field 'cpf': rejected value [null]; codes [NotBlank.clienteRequestDTO.cpf,NotBlank.cpf,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.cpf,cpf]; arguments []; default message [cpf]]; default message [O CPF é obrigatório]] [Field error in object 'clienteRequestDTO' on field 'cpf': rejected value [null]; codes [ValidCPF.clienteRequestDTO.cpf,ValidCPF.cpf,ValidCPF.java.lang.String,ValidCPF]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.cpf,cpf]; arguments []; default message [cpf]]; default message [CPF deve ter formato válido 12345678909 ou 123.456.789-09)]] ]
2025-08-03 13:09:57.895 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@493ed9a0, started on Sun Aug 03 13:09:55 BRT 2025
2025-08-03 13:09:57.898 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:57.898 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:57.899 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:57.899 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:57.899 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:57.899 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:57.900 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:57.900 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Shutdown initiated...
2025-08-03 13:09:57.902 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Shutdown completed.
2025-08-03 13:09:57.907 [main] INFO  [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.deliverytech.delivery.controller.PedidoControllerITTest]: PedidoControllerITTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-03 13:09:57.909 [main] INFO  [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.deliverytech.delivery.DeliveryApiApplication for test class com.deliverytech.delivery.controller.PedidoControllerITTest
2025-08-03 13:09:57.913 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:09:57.938 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:09:57.939 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:09:57.939 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-03 13:09:57.940 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@12a4781f
2025-08-03 13:09:58.152 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:09:58.166 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
2025-08-03 13:09:58.234 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:09:58.234 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Starting...
2025-08-03 13:09:58.235 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-10 - Added connection conn90: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:09:58.235 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Start completed.
2025-08-03 13:09:58.236 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:09:58.289 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:58.289 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:58.289 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:58.289 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:58.289 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:58.289 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:58.290 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:09:58.291 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:09:58.292 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:09:58.292 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:09:58.293 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:09:58.294 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:09:58.294 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:09:58.295 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:09:58.296 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:09:58.296 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:58.297 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:58.299 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:58.413 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:09:58.484 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:09:58.524 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:09:58.596 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:09:58.636 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:09:58.652 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:09:58.741 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:09:58.754 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:09:58.755 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:09:58.755 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:09:58.755 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:09:58.755 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-08-03 13:09:58.768 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 0.855 seconds (process running for 33.37)
2025-08-03 13:09:58.772 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:09:58.776 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:09:58.777 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:09:58.778 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:09:59.135 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.136 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.136 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.137 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.137 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.138 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.139 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.139 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.140 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.140 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.140 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.141 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.142 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.143 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.144 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.144 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.145 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.145 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.146 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.148 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.148 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.149 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.149 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.150 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.151 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.151 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.152 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.152 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.152 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.153 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.153 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.153 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.154 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.154 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.155 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.155 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.155 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.156 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.156 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.156 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.157 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.157 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.158 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:59.160 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:59.160 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:59.161 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.162 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.163 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.163 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.165 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:59.187 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:59.187 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:59.188 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.189 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.190 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.190 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.191 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:59.191 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:59.192 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:59.192 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.193 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.193 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.194 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.195 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:59.195 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:59.195 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:59.196 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.197 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.197 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.197 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.198 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:59.199 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:59.199 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:59.200 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:59.200 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.201 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.201 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.202 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.202 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.204 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:09:59.206 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:09:59.208 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:09:59.210 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:09:59.211 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:09:59.213 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:09:59.215 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:09:59.217 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:09:59.218 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.220 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:09:59.220 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.222 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:09:59.222 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.223 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.223 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.223 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.223 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.225 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:59.227 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:59.228 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:59.229 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.229 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:59.229 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.231 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:09:59.231 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:59.232 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.232 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:59.232 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.233 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:59.233 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.236 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:59.241 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.242 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.247 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:09:59.249 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:09:59.250 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.250 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.251 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.251 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.251 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.251 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.258 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:59.263 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.restaurante_id,
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco 
    from
        produtos p1_0 
    where
        p1_0.restaurante_id=?
2025-08-03 13:09:59.275 [main] DEBUG [] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-03 13:09:59.276 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.282 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-03 13:09:59.283 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:09:59.284 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-03 13:09:59.284 [main] DEBUG [48e3a98bd8d44ed6] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-03 13:09:59.290 [main] DEBUG [48e3a98bd8d44ed6] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=1, numeroPedido='PEDIDO20250729', dataPedido='2025-08-03T13:09:59.2768759 (truncated)...]
2025-08-03 13:09:59.350 [main] DEBUG [48e3a98bd8d44ed6] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-03 13:09:59.352 [main] DEBUG [48e3a98bd8d44ed6] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-03 13:09:59.353 [main] DEBUG [48e3a98bd8d44ed6] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:59.355 [main] DEBUG [48e3a98bd8d44ed6] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.356 [main] DEBUG [48e3a98bd8d44ed6] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:59.358 [main] DEBUG [48e3a98bd8d44ed6] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.371 [main] DEBUG [48e3a98bd8d44ed6] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.373 [main] DEBUG [48e3a98bd8d44ed6] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-03 13:09:59.375 [main] DEBUG [48e3a98bd8d44ed6] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:09:59.375 [main] DEBUG [48e3a98bd8d44ed6] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@5d893b03]
2025-08-03 13:09:59.384 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@12a4781f, started on Sun Aug 03 13:09:57 BRT 2025
2025-08-03 13:09:59.386 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:59.386 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:59.387 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:59.387 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:59.388 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:59.388 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:59.388 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:59.388 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Shutdown initiated...
2025-08-03 13:09:59.389 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Shutdown completed.
2025-08-03 13:09:59.391 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:09:59.420 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:09:59.420 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:09:59.421 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-03 13:09:59.422 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6d669bde
2025-08-03 13:09:59.611 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:09:59.625 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2025-08-03 13:09:59.701 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:09:59.702 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-11 - Starting...
2025-08-03 13:09:59.703 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-11 - Added connection conn100: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:09:59.703 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-11 - Start completed.
2025-08-03 13:09:59.703 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:09:59.757 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:59.757 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:59.757 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:59.757 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:59.757 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:59.757 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:59.769 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:09:59.770 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:09:59.771 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:09:59.772 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:09:59.772 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:09:59.773 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:09:59.774 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:09:59.775 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:09:59.776 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:09:59.777 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:59.777 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:59.779 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:59.879 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:09:59.948 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:09:59.975 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:10:00.039 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:10:00.079 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:10:00.088 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:10:00.158 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:10:00.182 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:10:00.182 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:10:00.182 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:10:00.182 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:10:00.183 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-03 13:10:00.196 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 0.805 seconds (process running for 34.799)
2025-08-03 13:10:00.199 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:10:00.202 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:10:00.204 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:10:00.205 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:10:00.564 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.565 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.565 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.565 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.566 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.566 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.568 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.569 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.569 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.569 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.570 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.570 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.572 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.573 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.573 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.574 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.574 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.575 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.576 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.577 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.578 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.579 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.579 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.579 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.580 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.581 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.581 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.581 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.582 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.583 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.583 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.584 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.584 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.585 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.585 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.585 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.586 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.586 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.586 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.587 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.587 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.587 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.589 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:00.590 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:00.590 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:00.591 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.591 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.592 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.592 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.593 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:00.594 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:00.595 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:00.595 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.596 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.597 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.597 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.598 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:00.599 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:00.600 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:00.600 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.601 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.602 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.602 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.603 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:00.603 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:00.604 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:00.604 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.605 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.605 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.605 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.606 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:00.607 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:00.607 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:00.608 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:00.608 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.609 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.609 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.610 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.610 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.612 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:10:00.614 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:10:00.617 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:10:00.618 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:10:00.619 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:10:00.621 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:10:00.622 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:10:00.624 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:10:00.625 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.626 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:10:00.627 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.629 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:10:00.629 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.630 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.630 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.631 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.631 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.633 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:00.635 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:00.636 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:00.636 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.637 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:00.637 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.639 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:10:00.639 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:00.640 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.640 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:00.640 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.640 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:00.641 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.643 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:00.647 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.648 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.652 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:10:00.653 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:10:00.654 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.654 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.654 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.655 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.655 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.655 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.659 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-03 13:10:00.659 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:00.660 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-03 13:10:00.660 [main] DEBUG [5e0e92d4b58248e5] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-03 13:10:00.663 [main] DEBUG [5e0e92d4b58248e5] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=null, numeroPedido='null', dataPedido='null', valorTotal=null, observacoe (truncated)...]
2025-08-03 13:10:00.684 [main] DEBUG [5e0e92d4b58248e5] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException, WebRequest)
2025-08-03 13:10:00.686 [main] DEBUG [5e0e92d4b58248e5] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:00.686 [main] DEBUG [5e0e92d4b58248e5] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@6addfec0]
2025-08-03 13:10:00.686 [main] DEBUG [5e0e92d4b58248e5] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.deliverytech.delivery.dto.response.ApiResponseWrapper<com.deliverytech.delivery.dto.response.PedidoResponseDTO>> com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO) with 9 errors: [Field error in object 'pedidoRequestDTO' on field 'dataPedido': rejected value [null]; codes [NotNull.pedidoRequestDTO.dataPedido,NotNull.dataPedido,NotNull.java.time.LocalDateTime,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.dataPedido,dataPedido]; arguments []; default message [dataPedido]]; default message [A data do pedido é obrigatória]] [Field error in object 'pedidoRequestDTO' on field 'cep': rejected value [null]; codes [NotBlank.pedidoRequestDTO.cep,NotBlank.cep,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.cep,cep]; arguments []; default message [cep]]; default message [CEP é obrigatório]] [Field error in object 'pedidoRequestDTO' on field 'numeroPedido': rejected value [null]; codes [NotNull.pedidoRequestDTO.numeroPedido,NotNull.numeroPedido,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.numeroPedido,numeroPedido]; arguments []; default message [numeroPedido]]; default message [O número do pedido é obrigatório]] [Field error in object 'pedidoRequestDTO' on field 'cep': rejected value [null]; codes [ValidCEP.pedidoRequestDTO.cep,ValidCEP.cep,ValidCEP.java.lang.String,ValidCEP]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.cep,cep]; arguments []; default message [cep]]; default message [CEP deve ter formato válido (00000-000 ou 00000000)]] [Field error in object 'pedidoRequestDTO' on field 'clienteId': rejected value [null]; codes [NotNull.pedidoRequestDTO.clienteId,NotNull.clienteId,NotNull.java.lang.Long,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.clienteId,clienteId]; arguments []; default message [clienteId]]; default message [O status do pedido é obrigatório]] [Field error in object 'pedidoRequestDTO' on field 'valorTotal': rejected value [null]; codes [NotNull.pedidoRequestDTO.valorTotal,NotNull.valorTotal,NotNull.java.math.BigDecimal,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.valorTotal,valorTotal]; arguments []; default message [valorTotal]]; default message [O valor do pedido é obrigatório]] [Field error in object 'pedidoRequestDTO' on field 'clienteId': rejected value [null]; codes [NotNull.pedidoRequestDTO.clienteId,NotNull.clienteId,NotNull.java.lang.Long,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.clienteId,clienteId]; arguments []; default message [clienteId]]; default message [O id do cliente é obrigatório]] [Field error in object 'pedidoRequestDTO' on field 'restauranteId': rejected value [null]; codes [NotNull.pedidoRequestDTO.restauranteId,NotNull.restauranteId,NotNull.java.lang.Long,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.restauranteId,restauranteId]; arguments []; default message [restauranteId]]; default message [O restaurante é obrigatório]] [Field error in object 'pedidoRequestDTO' on field 'formaPagamento': rejected value [null]; codes [NotBlank.pedidoRequestDTO.formaPagamento,NotBlank.formaPagamento,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.formaPagamento,formaPagamento]; arguments []; default message [formaPagamento]]; default message [Forma de pagamento é obrigatória]] ]
2025-08-03 13:10:00.690 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/pedidos/clientes/1/pedidos
2025-08-03 13:10:00.690 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:00.691 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/pedidos/clientes/1/pedidos
2025-08-03 13:10:00.691 [main] DEBUG [d7817fdf23314016] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#buscarPedidosPorCliente(Long)
2025-08-03 13:10:00.692 [main] DEBUG [d7817fdf23314016] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.buscarPedidosPorCliente(java.lang.Long); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-03 13:10:00.693 [main] DEBUG [d7817fdf23314016] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.buscarPedidosPorCliente(java.lang.Long); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-03 13:10:00.695 [main] DEBUG [d7817fdf23314016] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:00.696 [main] DEBUG [d7817fdf23314016] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:00.697 [main] DEBUG [d7817fdf23314016] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.701 [main] DEBUG [d7817fdf23314016] org.hibernate.SQL - 
    select
        i1_0.pedido_id,
        i1_0.id,
        i1_0.preco_unitario,
        p2_0.id,
        p2_0.categoria,
        p2_0.descricao,
        p2_0.disponivel,
        p2_0.estoque,
        p2_0.nome,
        p2_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos,
        i1_0.quantidade,
        i1_0.subtotal 
    from
        itens_pedido i1_0 
    left join
        produtos p2_0 
            on p2_0.id=i1_0.produto_id 
    left join
        restaurantes r1_0 
            on r1_0.id=p2_0.restaurante_id 
    where
        i1_0.pedido_id=?
2025-08-03 13:10:00.705 [main] DEBUG [d7817fdf23314016] org.hibernate.SQL - 
    select
        i1_0.pedido_id,
        i1_0.id,
        i1_0.preco_unitario,
        p2_0.id,
        p2_0.categoria,
        p2_0.descricao,
        p2_0.disponivel,
        p2_0.estoque,
        p2_0.nome,
        p2_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos,
        i1_0.quantidade,
        i1_0.subtotal 
    from
        itens_pedido i1_0 
    left join
        produtos p2_0 
            on p2_0.id=i1_0.produto_id 
    left join
        restaurantes r1_0 
            on r1_0.id=p2_0.restaurante_id 
    where
        i1_0.pedido_id=?
2025-08-03 13:10:00.709 [main] DEBUG [d7817fdf23314016] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:00.710 [main] DEBUG [d7817fdf23314016] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@21684d4]
2025-08-03 13:10:00.719 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@6d669bde, started on Sun Aug 03 13:09:59 BRT 2025
2025-08-03 13:10:00.721 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:10:00.721 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:10:00.722 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:10:00.722 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:10:00.722 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:10:00.722 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:10:00.722 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:10:00.723 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-11 - Shutdown initiated...
2025-08-03 13:10:00.724 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-11 - Shutdown completed.
2025-08-03 13:10:00.727 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:10:00.749 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:10:00.773 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:10:00.773 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-03 13:10:00.774 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@456fba8c
2025-08-03 13:10:00.976 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:10:00.988 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 5 JPA repository interfaces.
2025-08-03 13:10:01.049 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:10:01.050 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-12 - Starting...
2025-08-03 13:10:01.051 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-12 - Added connection conn110: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:10:01.051 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-12 - Start completed.
2025-08-03 13:10:01.051 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:10:01.095 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:10:01.095 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:10:01.095 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:10:01.095 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:10:01.095 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:10:01.095 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:10:01.095 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:10:01.097 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:10:01.098 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:10:01.098 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:10:01.098 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:10:01.099 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:10:01.100 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:10:01.100 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:10:01.101 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:10:01.101 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:10:01.102 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:10:01.103 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:10:01.263 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:10:01.334 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:10:01.363 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:10:01.419 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:10:01.456 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:10:01.465 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:10:01.525 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:10:01.536 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:10:01.536 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:10:01.536 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:10:01.536 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:10:01.537 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-03 13:10:01.549 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 0.823 seconds (process running for 36.152)
2025-08-03 13:10:01.552 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:10:01.555 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:10:01.557 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:10:01.559 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:10:01.915 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.917 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.918 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.919 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.919 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.920 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.922 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.924 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.924 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.925 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.925 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.925 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.927 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.929 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.929 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.930 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.930 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.931 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.932 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:01.934 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:01.936 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:01.937 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:01.940 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:01.941 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:01.942 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.944 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.944 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.945 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.945 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.946 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.946 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.946 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.947 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.947 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.947 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.948 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.948 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.948 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.949 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.949 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.949 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.950 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.952 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:01.955 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:01.957 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:01.958 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:01.959 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.960 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.961 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.963 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:01.964 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:01.965 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:01.965 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:01.966 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.967 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.967 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.968 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:01.969 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:01.969 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:01.970 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:01.971 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.971 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.972 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.973 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:01.974 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:01.974 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:01.975 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:01.976 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.976 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.977 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.978 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:01.978 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:01.979 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:01.980 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:01.981 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:01.983 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.984 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.985 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.985 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.989 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:10:01.991 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:10:01.993 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:10:01.995 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:10:01.998 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:10:02.000 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:10:02.002 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:10:02.004 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:10:02.005 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.007 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:10:02.007 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.009 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:10:02.009 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.010 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.010 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.011 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.011 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.014 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:02.017 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:02.019 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:02.020 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.020 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:02.020 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.022 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:10:02.022 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:02.023 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.023 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:02.023 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.023 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:02.024 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.026 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:02.031 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:02.032 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:02.037 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:10:02.039 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:10:02.040 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.040 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.041 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.041 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.041 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.041 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.043 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:02.044 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.restaurante_id,
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco 
    from
        produtos p1_0 
    where
        p1_0.restaurante_id=?
2025-08-03 13:10:02.046 [main] DEBUG [] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-03 13:10:02.047 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.052 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-03 13:10:02.052 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:02.054 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-03 13:10:02.054 [main] DEBUG [e88ae16fcc6d4880] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-03 13:10:02.056 [main] DEBUG [e88ae16fcc6d4880] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=1, numeroPedido='PEDIDO20250729', dataPedido='2025-08-03T13:10:02.048784' (truncated)...]
2025-08-03 13:10:02.082 [main] DEBUG [e88ae16fcc6d4880] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-03 13:10:02.083 [main] DEBUG [e88ae16fcc6d4880] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-03 13:10:02.084 [main] DEBUG [e88ae16fcc6d4880] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:02.085 [main] DEBUG [e88ae16fcc6d4880] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.085 [main] DEBUG [e88ae16fcc6d4880] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:02.086 [main] DEBUG [e88ae16fcc6d4880] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:02.092 [main] DEBUG [e88ae16fcc6d4880] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:02.094 [main] DEBUG [e88ae16fcc6d4880] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-03 13:10:02.096 [main] DEBUG [e88ae16fcc6d4880] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:02.096 [main] DEBUG [e88ae16fcc6d4880] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@2366bdb]
2025-08-03 13:10:02.103 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing PATCH /api/pedidos/6/status
2025-08-03 13:10:02.103 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:02.104 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured PATCH /api/pedidos/6/status
2025-08-03 13:10:02.105 [main] DEBUG [844afd6a666a45bc] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#atualizarStatus(Long, StatusPedido)
2025-08-03 13:10:02.106 [main] DEBUG [844afd6a666a45bc] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [CONFIRMADO]
2025-08-03 13:10:02.112 [main] DEBUG [844afd6a666a45bc] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.atualizarStatus(java.lang.Long,com.deliverytech.delivery.enums.StatusPedido); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-03 13:10:02.113 [main] DEBUG [844afd6a666a45bc] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.atualizarStatus(java.lang.Long,com.deliverytech.delivery.enums.StatusPedido); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-03 13:10:02.113 [main] DEBUG [844afd6a666a45bc] org.hibernate.SQL - 
    select
        p1_0.id,
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:02.116 [main] DEBUG [844afd6a666a45bc] org.hibernate.SQL - 
    select
        i1_0.pedido_id,
        i1_0.id,
        i1_0.preco_unitario,
        p2_0.id,
        p2_0.categoria,
        p2_0.descricao,
        p2_0.disponivel,
        p2_0.estoque,
        p2_0.nome,
        p2_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos,
        i1_0.quantidade,
        i1_0.subtotal 
    from
        itens_pedido i1_0 
    left join
        produtos p2_0 
            on p2_0.id=i1_0.produto_id 
    left join
        restaurantes r1_0 
            on r1_0.id=p2_0.restaurante_id 
    where
        i1_0.pedido_id=?
2025-08-03 13:10:02.118 [main] DEBUG [844afd6a666a45bc] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Pedido */update pedidos 
    set
        cliente_id=?,
        data_pedido=?,
        endereco_entrega=?,
        numero_pedido=?,
        observacoes=?,
        restaurante_id=?,
        status=?,
        subtotal=?,
        taxa_entrega=?,
        valor_total=? 
    where
        id=?
2025-08-03 13:10:02.119 [main] DEBUG [844afd6a666a45bc] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:02.120 [main] DEBUG [844afd6a666a45bc] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@6e310c69]
2025-08-03 13:10:02.124 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@456fba8c, started on Sun Aug 03 13:10:00 BRT 2025
2025-08-03 13:10:02.126 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:10:02.126 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:10:02.127 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:10:02.127 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:10:02.128 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:10:02.128 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:10:02.128 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:10:02.128 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-12 - Shutdown initiated...
2025-08-03 13:10:02.129 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-12 - Shutdown completed.
2025-08-03 13:10:02.132 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:10:02.154 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:10:02.154 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:10:02.154 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-03 13:10:02.155 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@5385226c
2025-08-03 13:10:02.334 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:10:02.346 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 5 JPA repository interfaces.
2025-08-03 13:10:02.408 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:10:02.408 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-13 - Starting...
2025-08-03 13:10:02.409 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-13 - Added connection conn120: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:10:02.409 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-13 - Start completed.
2025-08-03 13:10:02.409 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:10:02.451 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:10:02.451 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:10:02.451 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:10:02.452 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:10:02.452 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:10:02.452 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:10:02.452 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:10:02.453 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:10:02.453 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:10:02.454 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:10:02.454 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:10:02.455 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:10:02.455 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:10:02.456 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:10:02.457 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:10:02.457 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:10:02.458 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:10:02.459 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:10:02.560 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:10:02.636 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:10:02.665 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:10:02.721 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:10:02.755 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:10:02.761 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:10:02.816 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:10:02.826 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:10:02.826 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:10:02.826 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:10:02.826 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:10:02.827 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-03 13:10:02.839 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 0.707 seconds (process running for 37.441)
2025-08-03 13:10:02.840 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:10:02.842 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:10:02.844 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:10:02.845 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:10:03.201 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.202 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.202 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.203 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.203 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.203 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.204 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.205 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.205 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.206 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.206 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.206 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.208 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.208 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.209 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.209 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.210 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.210 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.212 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.213 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.213 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.214 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.214 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.215 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.216 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.216 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.216 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.217 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.217 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.217 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.217 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.218 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.218 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.218 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.219 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.219 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.219 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.219 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.220 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.220 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.220 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.220 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.221 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:03.222 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:03.223 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:03.223 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.224 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.225 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.225 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.226 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:03.226 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:03.227 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:03.227 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.228 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.228 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.229 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.229 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:03.230 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:03.230 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:03.231 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.231 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.232 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.232 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.233 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:03.233 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:03.233 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:03.234 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.234 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.235 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.235 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.236 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:03.236 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:03.237 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:03.237 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:03.237 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.238 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.238 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.238 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.239 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.240 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:10:03.242 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:10:03.244 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:10:03.246 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:10:03.248 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:10:03.250 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:10:03.252 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:10:03.254 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:10:03.255 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.256 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:10:03.257 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.258 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:10:03.258 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.259 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.259 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.259 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.260 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.262 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:03.264 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:03.265 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:03.265 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.265 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:03.265 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.267 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:10:03.267 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:03.268 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.268 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:03.268 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.268 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:03.268 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.270 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:03.274 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.276 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.280 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:10:03.282 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:10:03.283 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.283 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.284 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.284 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.284 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.284 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.285 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.289 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-03 13:10:03.289 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:03.291 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-03 13:10:03.291 [main] DEBUG [81f8160c48204822] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-03 13:10:03.293 [main] DEBUG [81f8160c48204822] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=1, numeroPedido='PEDIDO20250729', dataPedido='2025-08-03T13:10:03.2855587 (truncated)...]
2025-08-03 13:10:03.309 [main] DEBUG [81f8160c48204822] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-03 13:10:03.310 [main] DEBUG [81f8160c48204822] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-03 13:10:03.311 [main] DEBUG [81f8160c48204822] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:03.311 [main] DEBUG [81f8160c48204822] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.312 [main] DEBUG [81f8160c48204822] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:03.313 [main] DEBUG [81f8160c48204822] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleEntityNotFoundException(EntityNotFoundException, WebRequest)
2025-08-03 13:10:03.314 [main] DEBUG [81f8160c48204822] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:03.315 [main] DEBUG [81f8160c48204822] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@1b5477a6]
2025-08-03 13:10:03.315 [main] DEBUG [81f8160c48204822] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.deliverytech.delivery.exceptions.EntityNotFoundException: Produto não encontrado: 999]
2025-08-03 13:10:03.319 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@5385226c, started on Sun Aug 03 13:10:02 BRT 2025
2025-08-03 13:10:03.321 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:10:03.321 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:10:03.321 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:10:03.321 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:10:03.322 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:10:03.322 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:10:03.322 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:10:03.322 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-13 - Shutdown initiated...
2025-08-03 13:10:03.329 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-13 - Shutdown completed.
2025-08-03 13:10:03.333 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:10:03.368 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:10:03.369 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:10:03.369 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-03 13:10:03.370 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@37f91dbf
2025-08-03 13:10:03.583 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:10:03.597 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2025-08-03 13:10:03.656 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:10:03.656 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-14 - Starting...
2025-08-03 13:10:03.657 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-14 - Added connection conn130: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:10:03.658 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-14 - Start completed.
2025-08-03 13:10:03.658 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:10:03.702 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:10:03.703 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:10:03.703 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:10:03.703 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:10:03.703 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:10:03.703 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:10:03.703 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:10:03.705 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:10:03.705 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:10:03.706 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:10:03.706 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:10:03.707 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:10:03.707 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:10:03.709 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:10:03.710 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:10:03.710 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:10:03.711 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:10:03.712 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:10:03.815 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:10:03.879 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:10:03.911 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:10:03.975 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:10:04.008 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:10:04.015 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:10:04.068 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:10:04.079 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:10:04.079 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:10:04.079 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:10:04.079 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:10:04.080 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-03 13:10:04.096 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 0.762 seconds (process running for 38.698)
2025-08-03 13:10:04.098 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:10:04.102 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:10:04.103 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:10:04.105 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:10:04.461 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.462 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.462 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.463 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.463 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.463 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.464 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.465 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.465 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.465 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.466 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.466 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.467 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.468 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.468 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.469 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.469 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.470 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.471 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.472 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.472 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.473 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.473 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.474 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.474 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.475 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.475 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.476 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.476 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.476 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.477 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.477 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.477 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.477 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.478 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.478 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.478 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.478 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.478 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.479 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.479 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.479 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.481 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:04.483 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:04.483 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:04.484 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.485 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.486 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.486 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.487 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:04.488 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:04.489 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:04.489 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.490 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.490 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.490 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.491 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:04.492 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:04.492 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:04.493 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.493 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.494 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.494 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.495 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:04.496 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:04.496 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:04.496 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.498 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.498 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.498 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.500 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:04.501 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:04.501 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:04.502 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:04.502 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.503 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.504 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.504 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.505 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.506 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:10:04.508 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:10:04.510 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:10:04.512 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:10:04.514 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:10:04.516 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:10:04.518 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:10:04.520 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:10:04.521 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.522 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:10:04.523 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.525 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:10:04.525 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.526 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.526 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.526 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.526 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.528 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:04.531 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:04.531 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:04.532 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.532 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:04.532 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.534 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:10:04.534 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:04.535 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.535 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:04.535 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.535 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:04.535 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.537 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:04.540 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.542 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.546 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:10:04.548 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:10:04.549 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.549 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.549 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.549 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.550 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.550 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.562 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:04.563 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.restaurante_id,
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco 
    from
        produtos p1_0 
    where
        p1_0.restaurante_id=?
2025-08-03 13:10:04.564 [main] DEBUG [] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-03 13:10:04.565 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.568 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-03 13:10:04.569 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:04.570 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-03 13:10:04.570 [main] DEBUG [5e8e15adf50e462c] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-03 13:10:04.573 [main] DEBUG [5e8e15adf50e462c] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=1, numeroPedido='PEDIDO20250729', dataPedido='2025-08-03T13:10:04.5652176 (truncated)...]
2025-08-03 13:10:04.587 [main] DEBUG [5e8e15adf50e462c] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-03 13:10:04.588 [main] DEBUG [5e8e15adf50e462c] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-03 13:10:04.589 [main] DEBUG [5e8e15adf50e462c] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:04.589 [main] DEBUG [5e8e15adf50e462c] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.590 [main] DEBUG [5e8e15adf50e462c] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:04.591 [main] DEBUG [5e8e15adf50e462c] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleBusinessException(Exception, WebRequest)
2025-08-03 13:10:04.592 [main] DEBUG [5e8e15adf50e462c] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:04.593 [main] DEBUG [5e8e15adf50e462c] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@fb1e1fd]
2025-08-03 13:10:04.593 [main] DEBUG [5e8e15adf50e462c] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.deliverytech.delivery.exceptions.BusinessException: Estoque insuficiente para o produto Pizza Margherita. Estoque atual: 5, Quantidade solicitada: 10]
2025-08-03 13:10:04.597 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:04.600 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@37f91dbf, started on Sun Aug 03 13:10:03 BRT 2025
2025-08-03 13:10:04.601 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:10:04.601 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:10:04.601 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:10:04.601 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:10:04.602 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:10:04.602 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:10:04.602 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:10:04.602 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-14 - Shutdown initiated...
2025-08-03 13:10:04.603 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-14 - Shutdown completed.
2025-08-03 13:10:04.605 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:10:04.625 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:10:04.626 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:10:04.626 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-03 13:10:04.626 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@5d7336ad
2025-08-03 13:10:04.826 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:10:04.838 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 5 JPA repository interfaces.
2025-08-03 13:10:04.893 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:10:04.894 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-15 - Starting...
2025-08-03 13:10:04.895 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-15 - Added connection conn140: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:10:04.895 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-15 - Start completed.
2025-08-03 13:10:04.895 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:10:04.933 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:10:04.933 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:10:04.934 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:10:04.934 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:10:04.934 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:10:04.934 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:10:04.934 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:10:04.935 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:10:04.935 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:10:04.936 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:10:04.936 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:10:04.937 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:10:04.937 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:10:04.938 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:10:04.939 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:10:04.939 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:10:04.940 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:10:04.941 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:10:05.051 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:10:05.161 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:10:05.196 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:10:05.264 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:10:05.296 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:10:05.303 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:10:05.364 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:10:05.374 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:10:05.374 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:10:05.374 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:10:05.374 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:10:05.374 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-08-03 13:10:05.385 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 0.78 seconds (process running for 39.987)
2025-08-03 13:10:05.388 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:10:05.391 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:10:05.392 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:10:05.393 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:10:05.744 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.745 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.746 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.746 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.746 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.747 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.748 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.748 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.748 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.749 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.749 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.749 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.751 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.751 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.752 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.752 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.753 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.753 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.754 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.756 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.756 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.757 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.757 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.758 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.758 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.759 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.759 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.759 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.759 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.760 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.760 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.760 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.760 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.761 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.761 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.761 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.761 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.762 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.762 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.762 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.762 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.762 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.763 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:05.765 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:05.765 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:05.766 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.767 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.767 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.768 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.768 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:05.769 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:05.769 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:05.770 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.771 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.772 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.772 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.773 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:05.773 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:05.774 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:05.774 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.775 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.776 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.776 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.777 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:05.777 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:05.778 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:05.778 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.779 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.779 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.779 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.780 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:05.781 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:05.781 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:05.781 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:05.782 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.782 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.783 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.784 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.784 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.787 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:10:05.789 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:10:05.791 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:10:05.794 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:10:05.796 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:10:05.798 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:10:05.800 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:10:05.803 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:10:05.804 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.806 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:10:05.806 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.808 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:10:05.808 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.809 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.809 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.809 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.809 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.811 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:05.813 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:05.814 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:05.814 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.814 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:05.815 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.816 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:10:05.816 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:05.817 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.817 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:05.817 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.817 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:05.818 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.819 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:05.823 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.824 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.828 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:10:05.829 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:10:05.830 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.830 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.830 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.830 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.831 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.831 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.832 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:05.832 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.restaurante_id,
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco 
    from
        produtos p1_0 
    where
        p1_0.restaurante_id=?
2025-08-03 13:10:05.834 [main] DEBUG [] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-03 13:10:05.835 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.839 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-03 13:10:05.839 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:05.840 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-03 13:10:05.841 [main] DEBUG [4fcea03cda4c43e9] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-03 13:10:05.843 [main] DEBUG [4fcea03cda4c43e9] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=1, numeroPedido='PEDIDO20250729', dataPedido='2025-08-03T13:10:05.835963' (truncated)...]
2025-08-03 13:10:05.858 [main] DEBUG [4fcea03cda4c43e9] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-03 13:10:05.859 [main] DEBUG [4fcea03cda4c43e9] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-03 13:10:05.859 [main] DEBUG [4fcea03cda4c43e9] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:05.860 [main] DEBUG [4fcea03cda4c43e9] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.861 [main] DEBUG [4fcea03cda4c43e9] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:05.862 [main] DEBUG [4fcea03cda4c43e9] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.866 [main] DEBUG [4fcea03cda4c43e9] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.866 [main] DEBUG [4fcea03cda4c43e9] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.867 [main] DEBUG [4fcea03cda4c43e9] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-03 13:10:05.869 [main] DEBUG [4fcea03cda4c43e9] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:05.869 [main] DEBUG [4fcea03cda4c43e9] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@136fcf13]
2025-08-03 13:10:05.875 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@5d7336ad, started on Sun Aug 03 13:10:04 BRT 2025
2025-08-03 13:10:05.877 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:10:05.877 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:10:05.877 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:10:05.877 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:10:05.878 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:10:05.878 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:10:05.878 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:10:05.878 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-15 - Shutdown initiated...
2025-08-03 13:10:05.879 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-15 - Shutdown completed.
2025-08-03 13:10:05.885 [main] INFO  [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.deliverytech.delivery.controller.RestauranteControllerITTest]: RestauranteControllerITTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-03 13:10:05.888 [main] INFO  [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.deliverytech.delivery.DeliveryApiApplication for test class com.deliverytech.delivery.controller.RestauranteControllerITTest
2025-08-03 13:10:05.891 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:10:05.917 [main] INFO  [] c.d.d.c.RestauranteControllerITTest - Starting RestauranteControllerITTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:10:05.917 [main] DEBUG [] c.d.d.c.RestauranteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:10:05.918 [main] INFO  [] c.d.d.c.RestauranteControllerITTest - The following 1 profile is active: "test"
2025-08-03 13:10:05.919 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@616171ef
2025-08-03 13:10:06.105 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:10:06.117 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 5 JPA repository interfaces.
2025-08-03 13:10:06.184 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:10:06.185 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-16 - Starting...
2025-08-03 13:10:06.185 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-16 - Added connection conn150: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:10:06.185 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-16 - Start completed.
2025-08-03 13:10:06.186 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:10:06.229 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:10:06.229 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:10:06.229 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:10:06.229 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:10:06.229 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:10:06.230 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:10:06.230 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:10:06.231 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:10:06.231 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:10:06.232 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:10:06.232 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:10:06.233 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:10:06.233 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:10:06.234 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:10:06.235 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:10:06.235 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:10:06.236 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:10:06.237 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:10:06.364 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:10:06.434 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:10:06.462 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:10:06.518 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:10:06.550 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:10:06.556 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:10:06.608 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:10:06.618 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:10:06.618 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:10:06.618 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:10:06.618 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:10:06.619 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-03 13:10:06.630 [main] INFO  [] c.d.d.c.RestauranteControllerITTest - Started RestauranteControllerITTest in 0.74 seconds (process running for 41.233)
2025-08-03 13:10:06.632 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:10:06.634 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:10:06.635 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:10:06.636 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:10:06.992 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.992 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.992 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.993 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.993 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.993 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.995 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.995 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.995 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.996 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.996 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.996 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.997 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.998 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.998 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.998 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.999 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.999 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.000 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.001 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.002 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.002 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.002 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.003 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.003 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.004 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.004 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.004 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.004 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.005 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.005 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.005 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.006 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.006 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.006 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.006 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.007 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.007 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.007 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.007 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.007 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.008 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.009 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:07.010 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:07.010 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:07.011 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.012 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.012 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.012 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.013 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:07.014 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:07.014 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:07.014 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.015 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.015 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.016 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.016 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:07.017 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:07.017 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:07.017 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.018 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.018 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.018 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.019 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:07.020 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:07.020 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:07.020 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.021 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.021 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.022 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.022 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:07.023 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:07.023 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:07.024 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:07.024 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.024 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.025 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.025 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.025 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.027 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:10:07.029 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:10:07.031 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:10:07.032 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:10:07.033 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:10:07.034 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:10:07.036 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:10:07.038 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:10:07.039 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.040 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:10:07.041 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.042 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:10:07.043 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.043 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.043 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.043 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.044 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.046 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:07.048 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:07.048 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:07.049 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.049 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:07.049 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.051 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:10:07.051 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:07.052 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.052 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:07.052 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.052 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:07.052 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.054 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:07.073 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.077 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes?page=0&size=10
2025-08-03 13:10:07.078 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:07.079 [main] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:10:07.080 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes?page=0&size=10
2025-08-03 13:10:07.080 [main] DEBUG [dbac69a698d94896] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#listarRestaurantesComFiltro(String, Boolean, Pageable)
2025-08-03 13:10:07.103 [main] DEBUG [dbac69a698d94896] org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Restaurante r 
    WHERE
        (
            :categoria IS NULL 
            OR r.categoria = :categoria
        ) 
        AND (
            :ativo IS NULL 
            OR r.ativo = :ativo
        ) */ select
            r1_0.id,
            r1_0.ativo,
            r1_0.avaliacao,
            r1_0.categoria,
            r1_0.data_criacao,
            r1_0.endereco,
            r1_0.horario_funcionamento,
            r1_0.nome,
            r1_0.taxa_entrega,
            r1_0.telefone,
            r1_0.tempo_entrega_minutos 
        from
            restaurantes r1_0 
        where
            (
                ? is null 
                or r1_0.categoria=?
            ) 
            and (
                ? is null 
                or r1_0.ativo=?
            ) 
        fetch
            first ? rows only
2025-08-03 13:10:07.109 [main] DEBUG [dbac69a698d94896] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:07.109 [main] DEBUG [dbac69a698d94896] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.PagedResponseWrapper@3406cc54]
2025-08-03 13:10:07.131 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.134 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing PUT /api/restaurantes/8
2025-08-03 13:10:07.134 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:07.136 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured PUT /api/restaurantes/8
2025-08-03 13:10:07.136 [main] DEBUG [529ffa097fb040d8] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#atualizarRestaurante(Long, RestauranteRequestDTO)
2025-08-03 13:10:07.162 [main] DEBUG [529ffa097fb040d8] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RestauranteRequestDTO{ativo=true, nome='Pizza Express Atualizada', categoria='Italiana', endereco='R (truncated)...]
2025-08-03 13:10:07.176 [main] DEBUG [529ffa097fb040d8] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.RestauranteController.atualizarRestaurante(java.lang.Long,com.deliverytech.delivery.dto.request.RestauranteRequestDTO); target is of class [com.deliverytech.delivery.controller.RestauranteController]
2025-08-03 13:10:07.179 [main] DEBUG [529ffa097fb040d8] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.RestauranteController.atualizarRestaurante(java.lang.Long,com.deliverytech.delivery.dto.request.RestauranteRequestDTO); target is of class [com.deliverytech.delivery.controller.RestauranteController]
2025-08-03 13:10:07.185 [main] DEBUG [529ffa097fb040d8] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:07.185 [main] DEBUG [529ffa097fb040d8] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@26a203fb]
2025-08-03 13:10:07.196 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.198 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes
2025-08-03 13:10:07.198 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:07.199 [main] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:10:07.199 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes
2025-08-03 13:10:07.199 [main] DEBUG [b1b18e07d7b74ac9] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#listarRestaurantesComFiltro(String, Boolean, Pageable)
2025-08-03 13:10:07.203 [main] DEBUG [b1b18e07d7b74ac9] org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Restaurante r 
    WHERE
        (
            :categoria IS NULL 
            OR r.categoria = :categoria
        ) 
        AND (
            :ativo IS NULL 
            OR r.ativo = :ativo
        ) */ select
            r1_0.id,
            r1_0.ativo,
            r1_0.avaliacao,
            r1_0.categoria,
            r1_0.data_criacao,
            r1_0.endereco,
            r1_0.horario_funcionamento,
            r1_0.nome,
            r1_0.taxa_entrega,
            r1_0.telefone,
            r1_0.tempo_entrega_minutos 
        from
            restaurantes r1_0 
        where
            (
                ? is null 
                or r1_0.categoria=?
            ) 
            and (
                ? is null 
                or r1_0.ativo=?
            ) 
        fetch
            first ? rows only
2025-08-03 13:10:07.205 [main] DEBUG [b1b18e07d7b74ac9] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:07.205 [main] DEBUG [b1b18e07d7b74ac9] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.PagedResponseWrapper@504d8195]
2025-08-03 13:10:07.215 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.217 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes/categoria/Americana
2025-08-03 13:10:07.217 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:07.218 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes/categoria/Americana
2025-08-03 13:10:07.218 [main] DEBUG [2a96b47406b8467f] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#buscarRestaurantePorCategoria(String)
2025-08-03 13:10:07.221 [main] DEBUG [2a96b47406b8467f] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:10:07.223 [main] DEBUG [2a96b47406b8467f] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:07.223 [main] DEBUG [2a96b47406b8467f] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@34ba2f95]
2025-08-03 13:10:07.235 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.237 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes/999
2025-08-03 13:10:07.237 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:07.238 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes/999
2025-08-03 13:10:07.238 [main] DEBUG [c95f06a68118439c] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#buscarPorId(Long)
2025-08-03 13:10:07.239 [main] DEBUG [c95f06a68118439c] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.241 [main] DEBUG [c95f06a68118439c] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleEntityNotFoundException(EntityNotFoundException, WebRequest)
2025-08-03 13:10:07.242 [main] DEBUG [c95f06a68118439c] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:07.242 [main] DEBUG [c95f06a68118439c] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@1566637b]
2025-08-03 13:10:07.242 [main] DEBUG [c95f06a68118439c] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.deliverytech.delivery.exceptions.EntityNotFoundException: Restaurante não encontrado com ID: 999]
2025-08-03 13:10:07.250 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.252 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes/12
2025-08-03 13:10:07.252 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:07.253 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes/12
2025-08-03 13:10:07.253 [main] DEBUG [8d40a87b92a9488f] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#buscarPorId(Long)
2025-08-03 13:10:07.255 [main] DEBUG [8d40a87b92a9488f] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:07.255 [main] DEBUG [8d40a87b92a9488f] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@1e60a0f7]
2025-08-03 13:10:07.266 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.267 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing PATCH /api/restaurantes/13/status
2025-08-03 13:10:07.268 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:07.268 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured PATCH /api/restaurantes/13/status
2025-08-03 13:10:07.268 [main] DEBUG [cc108558454142c5] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#ativarDesativarRestaurante(Long)
2025-08-03 13:10:07.271 [main] DEBUG [cc108558454142c5] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:07.271 [main] DEBUG [cc108558454142c5] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@74735c68]
2025-08-03 13:10:07.279 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.281 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/restaurantes
2025-08-03 13:10:07.281 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:07.282 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/restaurantes
2025-08-03 13:10:07.282 [main] DEBUG [417c97f603b3420a] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#cadastrarRestaurante(RestauranteRequestDTO)
2025-08-03 13:10:07.283 [main] DEBUG [417c97f603b3420a] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RestauranteRequestDTO{ativo=true, nome='', categoria='Italiana', endereco='Rua das Flores, 123', tel (truncated)...]
2025-08-03 13:10:07.284 [main] DEBUG [417c97f603b3420a] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException, WebRequest)
2025-08-03 13:10:07.284 [main] DEBUG [417c97f603b3420a] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:07.284 [main] DEBUG [417c97f603b3420a] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@3f92cb10]
2025-08-03 13:10:07.285 [main] DEBUG [417c97f603b3420a] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.deliverytech.delivery.dto.response.ApiResponseWrapper<com.deliverytech.delivery.dto.response.RestauranteResponseDTO>> com.deliverytech.delivery.controller.RestauranteController.cadastrarRestaurante(com.deliverytech.delivery.dto.request.RestauranteRequestDTO) with 5 errors: [Field error in object 'restauranteRequestDTO' on field 'telefone': rejected value [123]; codes [Pattern.restauranteRequestDTO.telefone,Pattern.telefone,Pattern.java.lang.String,Pattern]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restauranteRequestDTO.telefone,telefone]; arguments []; default message [telefone],[Ljakarta.validation.constraints.Pattern$Flag;@23a4adba,^\+?[0-9]{10,11}$]; default message [O telefone deve ser um número válido com 10 a 11 dígitos]] [Field error in object 'restauranteRequestDTO' on field 'nome': rejected value []; codes [Size.restauranteRequestDTO.nome,Size.nome,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restauranteRequestDTO.nome,nome]; arguments []; default message [nome],100,3]; default message [O nome do restaurante deve ter entre 3 e 100 caracteres]] [Field error in object 'restauranteRequestDTO' on field 'nome': rejected value []; codes [Size.restauranteRequestDTO.nome,Size.nome,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restauranteRequestDTO.nome,nome]; arguments []; default message [nome],100,2]; default message [O nome do restaurante deve ter entre 3 e 100 caracteres]] [Field error in object 'restauranteRequestDTO' on field 'nome': rejected value []; codes [NotBlank.restauranteRequestDTO.nome,NotBlank.nome,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restauranteRequestDTO.nome,nome]; arguments []; default message [nome]]; default message [O nome do restaurante é obrigatório]] [Field error in object 'restauranteRequestDTO' on field 'telefone': rejected value [123]; codes [ValidTelefone.restauranteRequestDTO.telefone,ValidTelefone.telefone,ValidTelefone.java.lang.String,ValidTelefone]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restauranteRequestDTO.telefone,telefone]; arguments []; default message [telefone]]; default message [Telefone deve ter formato válido (10 ou 11 digitos)]] ]
2025-08-03 13:10:07.292 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.294 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/restaurantes
2025-08-03 13:10:07.294 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:07.295 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/restaurantes
2025-08-03 13:10:07.296 [main] DEBUG [2d6b9d1aaf7c44ee] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#cadastrarRestaurante(RestauranteRequestDTO)
2025-08-03 13:10:07.296 [main] DEBUG [2d6b9d1aaf7c44ee] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RestauranteRequestDTO{ativo=true, nome='Pizza Express 123', categoria='Italiana', endereco='Rua das  (truncated)...]
2025-08-03 13:10:07.297 [main] DEBUG [2d6b9d1aaf7c44ee] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.RestauranteController.cadastrarRestaurante(com.deliverytech.delivery.dto.request.RestauranteRequestDTO); target is of class [com.deliverytech.delivery.controller.RestauranteController]
2025-08-03 13:10:07.297 [main] DEBUG [2d6b9d1aaf7c44ee] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.RestauranteController.cadastrarRestaurante(com.deliverytech.delivery.dto.request.RestauranteRequestDTO); target is of class [com.deliverytech.delivery.controller.RestauranteController]
2025-08-03 13:10:07.299 [main] DEBUG [2d6b9d1aaf7c44ee] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.nome=?
2025-08-03 13:10:07.302 [main] DEBUG [2d6b9d1aaf7c44ee] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.303 [main] DEBUG [2d6b9d1aaf7c44ee] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:07.303 [main] DEBUG [2d6b9d1aaf7c44ee] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@15a1a91d]
2025-08-03 13:10:07.309 [main] INFO  [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.deliverytech.delivery.DeliveryApiApplicationTests]: DeliveryApiApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-03 13:10:07.314 [main] INFO  [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.deliverytech.delivery.DeliveryApiApplication for test class com.deliverytech.delivery.DeliveryApiApplicationTests
2025-08-03 13:10:07.318 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:10:07.328 [main] INFO  [] c.d.d.DeliveryApiApplicationTests - Starting DeliveryApiApplicationTests using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:10:07.328 [main] DEBUG [] c.d.d.DeliveryApiApplicationTests - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:10:07.329 [main] INFO  [] c.d.d.DeliveryApiApplicationTests - The following 1 profile is active: "development"
2025-08-03 13:10:07.330 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@209dfa9a
2025-08-03 13:10:07.522 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:10:07.535 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2025-08-03 13:10:07.602 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:10:07.603 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-17 - Starting...
2025-08-03 13:10:07.604 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-17 - Added connection conn160: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 13:10:07.604 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-17 - Start completed.
2025-08-03 13:10:07.604 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:10:07.648 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:10:07.648 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:10:07.648 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:10:07.649 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:10:07.649 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:10:07.649 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:10:07.649 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:10:07.650 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:10:07.651 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:10:07.651 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:10:07.651 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:10:07.652 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:10:07.652 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:10:07.653 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:10:07.654 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:10:07.654 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:10:07.654 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:10:07.655 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:10:07.765 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:10:07.837 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:10:07.869 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:10:07.929 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:10:07.963 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:10:07.970 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:10:08.022 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 13:10:08.040 [main] INFO  [] c.d.d.DeliveryApiApplicationTests - Started DeliveryApiApplicationTests in 0.722 seconds (process running for 42.643)
2025-08-03 13:10:08.042 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:10:08.043 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:10:08.044 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:10:08.045 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:10:08.401 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.401 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.402 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.402 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.402 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.402 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.403 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.403 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.404 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.404 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.404 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.404 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.405 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.406 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.407 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.407 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.408 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.408 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.409 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.410 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.411 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.411 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.411 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.412 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.412 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.413 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.413 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.413 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.414 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.414 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.414 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.414 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.415 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.415 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.415 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.415 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.416 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.416 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.416 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.416 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.416 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.417 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.418 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:08.419 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:08.419 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:08.420 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.420 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.421 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.421 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.422 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:08.423 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:08.423 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:08.424 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.424 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.425 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.425 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.426 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:08.427 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:08.427 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:08.428 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.428 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.429 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.429 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.430 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:08.431 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:08.431 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:08.431 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.432 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.432 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.432 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.433 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:08.433 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:08.434 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:08.434 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:08.434 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.435 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.435 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.436 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.436 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.438 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:10:08.439 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:10:08.441 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:10:08.443 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:10:08.444 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:10:08.446 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:10:08.447 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:10:08.449 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:10:08.449 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.451 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:10:08.451 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.453 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:10:08.453 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.453 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.453 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.454 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.454 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.455 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:08.457 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:08.457 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:08.458 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.458 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:08.458 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.459 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:10:08.459 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:08.460 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.460 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:08.460 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.460 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:08.461 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.462 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:09.731 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 13:10:09.753 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 13:10:10.012 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 13:10:10.018 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 13:10:10.051 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:10:10.052 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:10:10.053 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:10:10.055 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:10:10.056 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:10:10.057 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:10:10.058 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:10:10.060 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-03 13:10:10.062 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-03 13:10:10.079 [SpringApplicationShutdownHook] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@616171ef, started on Sun Aug 03 13:10:05 BRT 2025
2025-08-03 13:10:10.084 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:10:10.085 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:10:10.086 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:10:10.087 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:10:10.089 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:10:10.089 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:10:10.090 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:10:10.092 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-16 - Shutdown initiated...
2025-08-03 13:10:10.093 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-16 - Shutdown completed.
2025-08-03 13:10:10.094 [SpringApplicationShutdownHook] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@209dfa9a, started on Sun Aug 03 13:10:07 BRT 2025
2025-08-03 13:10:10.101 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:10:10.101 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:10:10.102 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:10:10.102 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:10:10.103 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:10:10.103 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:10:10.103 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:10:10.104 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-17 - Shutdown initiated...
2025-08-03 13:10:10.107 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-17 - Shutdown completed.
