2025-08-03 11:26:24.500 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 1632 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 11:26:24.538 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 11:26:24.539 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 11:26:24.584 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 11:26:24.594 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 11:26:28.107 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 11:26:28.213 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 95 ms. Found 5 JPA repository interfaces.
2025-08-03 11:26:29.169 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 11:26:29.186 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 11:26:29.190 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 11:26:29.190 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 11:26:29.262 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 11:26:29.263 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4668 ms
2025-08-03 11:26:30.118 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 11:26:30.162 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 11:26:30.349 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 11:26:30.353 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 11:26:30.395 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 11:26:31.458 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 11:26:31.462 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 11:26:31.462 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 11:26:31.462 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 11:26:31.462 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 11:26:31.463 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 11:26:31.468 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 11:26:31.477 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 11:26:31.499 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 11:26:31.501 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 11:26:31.502 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 11:26:31.506 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 11:26:31.509 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 11:26:31.522 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 11:26:31.523 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 11:26:31.525 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 11:26:31.526 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 11:26:31.531 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 11:26:31.981 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 11:26:31.982 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 11:26:32.061 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 11:26:33.232 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 11:26:33.668 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 11:26:33.792 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 11:26:34.092 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 11:26:34.203 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 11:26:34.269 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 11:26:34.974 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 11:26:35.552 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 11:26:35.670 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 11:26:35.689 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 11:26:35.779 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-08-03 11:26:35.780 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-08-03 11:26:35.781 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 11:26:35.781 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 11:26:35.813 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 11:26:35.813 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 119 ms
2025-08-03 11:26:35.828 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 11:26:35.852 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 1 mappings in 'requestMappingHandlerMapping'
2025-08-03 11:26:35.861 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 11:26:35.873 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 11:26:35.880 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2025-08-03 11:26:35.883 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-08-03 11:26:35.906 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 12.507 seconds (process running for 15.298)
2025-08-03 11:26:36.189 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 11:26:36.232 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 11:26:36.234 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 11:26:36.236 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 11:26:36.642 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.654 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.654 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.655 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.656 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.656 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.666 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.667 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.668 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.668 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.669 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.670 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.681 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.683 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.683 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.684 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.685 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.686 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.694 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.702 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.703 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.705 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.706 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.707 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.709 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.710 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.710 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.711 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.712 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.712 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.713 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.713 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.728 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.729 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.730 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.730 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.731 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.731 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.732 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.732 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.733 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.733 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.736 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:26:36.739 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:26:36.740 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:26:36.741 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.743 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.745 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.746 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.752 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:26:36.753 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:26:36.754 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:26:36.755 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.756 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.757 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.758 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.758 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:26:36.760 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:26:36.762 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:26:36.763 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.764 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.765 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.765 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.767 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:26:36.768 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:26:36.768 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:26:36.769 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.770 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.771 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.771 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.773 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:26:36.773 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:26:36.774 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:26:36.775 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:26:36.776 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.777 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.778 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.779 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.779 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:26:36.821 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 11:26:36.826 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 11:26:36.835 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 11:26:36.841 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 11:26:36.845 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 11:26:36.850 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 11:26:36.855 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 11:26:36.860 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 11:26:36.862 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.868 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 11:26:36.869 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.873 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 11:26:36.874 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.884 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.885 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.886 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.887 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.891 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 11:26:36.898 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 11:26:36.899 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:26:36.900 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.901 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:26:36.901 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.910 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 11:26:36.912 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:26:36.912 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.914 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:26:36.915 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.916 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:26:36.917 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:26:36.924 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 11:30:31.255 [http-nio-8080-exec-1] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 11:30:31.256 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 11:30:31.256 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 11:30:31.256 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 11:30:31.256 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 11:30:31.258 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7c693fa2
2025-08-03 11:30:31.258 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@5b3ac4ed
2025-08-03 11:30:31.259 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 11:30:31.259 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-03 11:30:31.304 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-03 11:30:31.319 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:30:31.322 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:30:31.332 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-03 11:30:31.397 [http-nio-8080-exec-1] DEBUG [4d86e6ccde3f4195] o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-08-03 11:30:31.400 [http-nio-8080-exec-1] DEBUG [4d86e6ccde3f4195] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-03 11:30:31.403 [http-nio-8080-exec-1] DEBUG [4d86e6ccde3f4195] o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-08-03 11:30:31.410 [http-nio-8080-exec-1] DEBUG [4d86e6ccde3f4195] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource actuator/health.]
2025-08-03 11:30:31.411 [http-nio-8080-exec-1] DEBUG [4d86e6ccde3f4195] o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-03 11:30:31.435 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 11:30:31.436 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:30:31.441 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:30:37.109 [http-nio-8081-exec-1] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServletRegistration'
2025-08-03 11:30:37.110 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServletRegistration'
2025-08-03 11:30:37.110 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 11:30:37.110 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 11:30:37.110 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 11:30:37.110 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@25a90cb
2025-08-03 11:30:37.110 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@78e14885
2025-08-03 11:30:37.110 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 11:30:37.110 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-08-03 11:30:37.112 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-03 11:30:37.113 [http-nio-8081-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:30:37.114 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:30:37.114 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:30:37.116 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-03 11:30:37.118 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-08-03 11:30:37.138 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 11:30:37.196 [http-nio-8081-exec-1] DEBUG [] o.s.web.client.RestTemplate - HTTP GET https://httpbin.org/status/200
2025-08-03 11:30:37.202 [http-nio-8081-exec-1] DEBUG [] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 11:30:40.144 [http-nio-8081-exec-1] DEBUG [] o.s.web.client.RestTemplate - Response 200 OK
2025-08-03 11:30:40.160 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 11:30:40.219 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@14344f0d]
2025-08-03 11:30:40.242 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 11:30:40.314 [http-nio-8081-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 11:30:40.319 [http-nio-8081-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:30:40.322 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:30:40.323 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:30:40.335 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:30:40.337 [http-nio-8081-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 11:30:40.338 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:30:40.339 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:30:45.504 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/info
2025-08-03 11:30:45.505 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:30:45.505 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:30:45.506 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/info
2025-08-03 11:30:45.507 [http-nio-8080-exec-5] DEBUG [8259b27e14f040e6] o.s.web.servlet.DispatcherServlet - GET "/actuator/info", parameters={}
2025-08-03 11:30:45.508 [http-nio-8080-exec-5] DEBUG [8259b27e14f040e6] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-03 11:30:45.510 [http-nio-8080-exec-5] DEBUG [8259b27e14f040e6] o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-08-03 11:30:45.512 [http-nio-8080-exec-5] DEBUG [8259b27e14f040e6] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource actuator/info.]
2025-08-03 11:30:45.513 [http-nio-8080-exec-5] DEBUG [8259b27e14f040e6] o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-03 11:30:45.515 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 11:30:45.517 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:30:45.517 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:30:49.061 [http-nio-8081-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/info
2025-08-03 11:30:49.063 [http-nio-8081-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:30:49.064 [http-nio-8081-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:30:49.064 [http-nio-8081-exec-5] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:30:49.065 [http-nio-8081-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/info
2025-08-03 11:30:49.066 [http-nio-8081-exec-5] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/info", parameters={}
2025-08-03 11:30:49.068 [http-nio-8081-exec-5] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 11:30:49.071 [http-nio-8081-exec-5] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 11:30:49.074 [http-nio-8081-exec-5] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{}]
2025-08-03 11:30:49.075 [http-nio-8081-exec-5] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 11:30:49.135 [http-nio-8081-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 11:30:49.136 [http-nio-8081-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:30:49.136 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:30:49.136 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:30:49.137 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:30:49.139 [http-nio-8081-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 11:30:49.140 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:30:49.140 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:31:00.253 [http-nio-8081-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/metrics
2025-08-03 11:31:00.254 [http-nio-8081-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:31:00.255 [http-nio-8081-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:31:00.255 [http-nio-8081-exec-9] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:31:00.257 [http-nio-8081-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/metrics
2025-08-03 11:31:00.257 [http-nio-8081-exec-9] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/metrics", parameters={}
2025-08-03 11:31:00.259 [http-nio-8081-exec-9] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 11:31:00.263 [http-nio-8081-exec-9] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 11:31:00.265 [http-nio-8081-exec-9] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [org.springframework.boot.actuate.metrics.MetricsEndpoint$MetricNamesDescriptor@682b0e46]
2025-08-03 11:31:00.267 [http-nio-8081-exec-9] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 11:31:00.347 [http-nio-8081-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 11:31:00.348 [http-nio-8081-exec-10] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:31:00.348 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:31:00.348 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:31:00.349 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:31:00.350 [http-nio-8081-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 11:31:00.352 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:31:00.352 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:37:07.993 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 11:37:08.029 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 11:37:08.031 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 11:37:08.038 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 11:37:08.148 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 11:37:08.162 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 11:37:08.179 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 11:37:08.181 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 11:37:08.182 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 11:37:08.182 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 11:37:08.182 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 11:37:08.228 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 11:37:08.229 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 11:37:08.233 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 11:37:37.726 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 9704 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 11:37:37.727 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 11:37:37.728 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 11:37:37.778 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 11:37:37.778 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 11:37:40.205 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 11:37:40.355 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 131 ms. Found 5 JPA repository interfaces.
2025-08-03 11:37:41.525 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 11:37:41.551 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 11:37:41.554 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 11:37:41.555 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 11:37:41.657 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 11:37:41.658 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3879 ms
2025-08-03 11:37:42.680 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 11:37:42.712 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 11:37:42.918 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 11:37:42.921 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 11:37:42.964 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 11:37:43.975 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 11:37:43.979 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 11:37:43.979 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 11:37:43.979 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 11:37:43.979 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 11:37:43.980 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 11:37:43.986 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 11:37:43.994 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 11:37:43.995 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 11:37:43.997 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 11:37:43.998 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 11:37:43.999 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 11:37:44.002 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 11:37:44.013 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 11:37:44.014 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 11:37:44.015 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 11:37:44.016 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 11:37:44.019 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 11:37:44.441 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 11:37:44.443 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 11:37:44.540 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 11:37:45.643 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 11:37:46.048 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 11:37:46.154 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 11:37:46.482 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 11:37:46.607 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 11:37:46.669 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 11:37:47.280 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 11:37:47.334 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 11:37:47.414 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 11:37:47.430 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 11:37:47.541 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-08-03 11:37:47.542 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-08-03 11:37:47.543 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 11:37:47.543 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 11:37:47.574 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 11:37:47.574 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 140 ms
2025-08-03 11:37:47.593 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 11:37:47.613 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 1 mappings in 'requestMappingHandlerMapping'
2025-08-03 11:37:47.621 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 11:37:47.630 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 11:37:47.635 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2025-08-03 11:37:47.639 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-08-03 11:37:47.654 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 10.749 seconds (process running for 11.633)
2025-08-03 11:37:47.880 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 11:37:47.915 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 11:37:47.917 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 11:37:47.919 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 11:37:48.317 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.328 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.329 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.330 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.330 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.331 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.339 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.341 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.341 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.342 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.342 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.343 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.355 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.357 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.358 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.358 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.359 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.360 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.367 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.375 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.377 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.378 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.379 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.380 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.381 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.382 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.383 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.384 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.384 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.385 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.385 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.386 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.386 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.387 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.387 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.388 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.389 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.389 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.390 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.390 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.391 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.391 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.394 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:37:48.396 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:37:48.397 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:37:48.398 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.400 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.401 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.402 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.407 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:37:48.408 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:37:48.409 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:37:48.410 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.411 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.412 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.413 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.414 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:37:48.415 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:37:48.416 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:37:48.417 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.418 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.418 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.419 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.420 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:37:48.421 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:37:48.423 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:37:48.424 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.425 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.426 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.426 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.428 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:37:48.429 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:37:48.430 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:37:48.431 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:37:48.432 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.433 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.434 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.435 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.435 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:37:48.475 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 11:37:48.479 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 11:37:48.486 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 11:37:48.492 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 11:37:48.496 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 11:37:48.501 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 11:37:48.505 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 11:37:48.509 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 11:37:48.510 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.514 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 11:37:48.516 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.519 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 11:37:48.521 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.522 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.522 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.523 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.524 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.528 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 11:37:48.532 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 11:37:48.534 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:37:48.535 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.537 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:37:48.538 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.545 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 11:37:48.547 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:37:48.549 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.550 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:37:48.551 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.552 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:37:48.553 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:37:48.559 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 11:37:56.729 [http-nio-8081-exec-1] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServletRegistration'
2025-08-03 11:37:56.729 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServletRegistration'
2025-08-03 11:37:56.729 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 11:37:56.729 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 11:37:56.729 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 11:37:56.729 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7bf6a60a
2025-08-03 11:37:56.729 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@19f09fcf
2025-08-03 11:37:56.729 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 11:37:56.730 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-03 11:37:56.744 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/info
2025-08-03 11:37:56.764 [http-nio-8081-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:37:56.768 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:37:56.769 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:37:56.777 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/info
2025-08-03 11:37:56.780 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/info", parameters={}
2025-08-03 11:37:56.809 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 11:37:56.821 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 11:37:56.846 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{}]
2025-08-03 11:37:56.860 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 11:37:56.969 [http-nio-8081-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 11:37:56.971 [http-nio-8081-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:37:56.972 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:37:56.972 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:37:56.980 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:37:56.993 [http-nio-8081-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 11:37:56.994 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:37:56.995 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:40:17.009 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 11:40:17.018 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 11:40:17.018 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 11:40:17.024 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 11:40:17.039 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 11:40:17.041 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 11:40:17.043 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 11:40:17.045 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 11:40:17.045 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 11:40:17.059 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 11:40:17.060 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 11:40:17.070 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 11:40:17.071 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 11:40:17.073 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 11:51:30.359 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 17964 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 11:51:30.385 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 11:51:30.386 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 11:51:30.434 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 11:51:30.434 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 11:51:32.896 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 11:51:33.006 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 96 ms. Found 5 JPA repository interfaces.
2025-08-03 11:51:33.928 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 11:51:33.943 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 11:51:33.960 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 11:51:33.960 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 11:51:34.041 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 11:51:34.041 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3606 ms
2025-08-03 11:51:34.917 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 11:51:34.957 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 11:51:35.136 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 11:51:35.139 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 11:51:35.166 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 11:51:36.216 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 11:51:36.221 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 11:51:36.221 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 11:51:36.221 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 11:51:36.221 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 11:51:36.222 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 11:51:36.228 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 11:51:36.236 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 11:51:36.237 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 11:51:36.239 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 11:51:36.240 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 11:51:36.242 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 11:51:36.246 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 11:51:36.257 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 11:51:36.259 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 11:51:36.260 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 11:51:36.261 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 11:51:36.266 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 11:51:36.782 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 11:51:36.784 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 11:51:36.900 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 11:51:38.108 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 11:51:38.487 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 11:51:38.617 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 11:51:38.921 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 11:51:39.046 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 11:51:39.114 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 11:51:39.682 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 11:51:39.747 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 11:51:39.798 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 11:51:39.820 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 11:51:39.916 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-08-03 11:51:39.917 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-08-03 11:51:39.917 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 11:51:39.918 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 11:51:39.944 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 11:51:39.944 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 120 ms
2025-08-03 11:51:39.958 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 11:51:39.977 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 1 mappings in 'requestMappingHandlerMapping'
2025-08-03 11:51:39.983 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 11:51:39.992 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 11:51:39.997 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2025-08-03 11:51:40.002 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-08-03 11:51:40.017 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 10.59 seconds (process running for 11.446)
2025-08-03 11:51:40.242 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 11:51:40.278 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 11:51:40.281 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 11:51:40.284 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 11:51:40.688 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.699 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.700 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.701 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.702 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.702 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.711 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.712 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.713 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.714 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.715 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.716 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.726 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.728 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.728 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.729 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.730 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.731 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.739 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.749 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.751 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.752 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.753 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.754 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.756 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.757 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.758 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.758 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.759 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.760 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.760 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.761 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.761 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.762 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.762 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.763 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.764 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.764 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.765 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.766 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.766 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.767 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.770 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:51:40.773 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:51:40.775 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:51:40.776 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.778 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.780 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.781 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.798 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:51:40.799 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:51:40.800 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:51:40.801 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.802 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.803 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.803 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.805 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:51:40.806 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:51:40.808 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:51:40.809 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.810 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.811 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.812 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.814 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:51:40.815 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:51:40.816 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:51:40.817 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.818 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.819 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.819 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.821 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:51:40.821 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:51:40.824 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:51:40.825 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:51:40.826 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.836 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.837 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.838 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.839 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:51:40.882 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 11:51:40.887 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 11:51:40.894 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 11:51:40.901 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 11:51:40.906 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 11:51:40.915 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 11:51:40.923 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 11:51:40.932 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 11:51:40.936 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.946 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 11:51:40.948 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.954 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 11:51:40.955 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.957 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.958 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.959 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.961 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.969 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 11:51:40.978 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 11:51:40.980 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:51:40.982 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.984 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:51:40.985 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:40.996 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 11:51:40.999 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:51:41.000 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:41.003 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:51:41.004 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:41.006 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:51:41.007 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:51:41.012 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 11:51:45.527 [http-nio-8081-exec-1] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServletRegistration'
2025-08-03 11:51:45.527 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServletRegistration'
2025-08-03 11:51:45.527 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 11:51:45.527 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 11:51:45.527 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 11:51:45.527 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3ce6e91b
2025-08-03 11:51:45.528 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@25326608
2025-08-03 11:51:45.528 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 11:51:45.528 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-03 11:51:45.544 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/info
2025-08-03 11:51:45.561 [http-nio-8081-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:51:45.563 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:51:45.563 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:51:45.571 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/info
2025-08-03 11:51:45.575 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/info", parameters={}
2025-08-03 11:51:45.593 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 11:51:45.604 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 11:51:45.629 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{}]
2025-08-03 11:51:45.646 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 11:51:45.817 [http-nio-8081-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 11:51:45.820 [http-nio-8081-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:51:45.821 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:51:45.821 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:51:45.832 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:51:45.843 [http-nio-8081-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 11:51:45.845 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:51:45.846 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:54:20.013 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 11:54:20.029 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 11:54:20.031 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 11:54:20.035 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 11:54:20.071 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 11:54:20.077 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 11:54:20.085 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 11:54:20.086 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 11:54:20.087 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 11:54:20.088 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 11:54:20.088 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 11:54:20.114 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 11:54:20.115 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 11:54:20.118 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 11:54:47.634 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 25936 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 11:54:47.636 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 11:54:47.637 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 11:54:47.679 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 11:54:47.680 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 11:54:49.595 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 11:54:49.691 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 82 ms. Found 5 JPA repository interfaces.
2025-08-03 11:54:50.629 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 11:54:50.645 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 11:54:50.648 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 11:54:50.648 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 11:54:50.726 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 11:54:50.726 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3046 ms
2025-08-03 11:54:51.637 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 11:54:51.677 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 11:54:51.865 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 11:54:51.868 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 11:54:51.906 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 11:54:52.900 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 11:54:52.903 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 11:54:52.904 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 11:54:52.904 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 11:54:52.904 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 11:54:52.904 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 11:54:52.908 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 11:54:52.916 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 11:54:52.917 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 11:54:52.920 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 11:54:52.921 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 11:54:52.923 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 11:54:52.926 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 11:54:52.936 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 11:54:52.937 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 11:54:52.938 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 11:54:52.939 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 11:54:52.943 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 11:54:53.328 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 11:54:53.330 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 11:54:53.414 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 11:54:54.478 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 11:54:54.920 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 11:54:55.081 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 11:54:55.548 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 11:54:55.699 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 11:54:55.773 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 11:54:56.473 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 11:54:56.556 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 11:54:56.641 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 11:54:56.659 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 11:54:56.768 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-08-03 11:54:56.769 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-08-03 11:54:56.770 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 11:54:56.770 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 11:54:56.808 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 11:54:56.809 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 146 ms
2025-08-03 11:54:56.829 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 11:54:56.854 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 1 mappings in 'requestMappingHandlerMapping'
2025-08-03 11:54:56.863 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 11:54:56.877 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 11:54:56.884 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2025-08-03 11:54:56.889 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-08-03 11:54:56.906 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 9.969 seconds (process running for 10.725)
2025-08-03 11:54:57.127 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 11:54:57.172 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 11:54:57.175 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 11:54:57.177 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 11:54:57.593 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.608 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.609 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.611 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.612 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.613 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.627 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.629 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.631 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.632 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.633 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.634 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.651 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.654 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.656 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.658 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.659 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.661 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.673 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.682 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.684 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.685 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.686 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.687 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.689 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.691 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.691 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.692 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.693 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.693 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.694 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.695 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.695 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.696 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.697 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.698 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.698 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.699 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.700 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.700 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.701 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.702 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.705 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:54:57.707 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:54:57.708 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:54:57.710 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.711 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.714 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.716 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.723 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:54:57.725 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:54:57.726 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:54:57.728 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.730 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.731 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.732 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.734 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:54:57.735 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:54:57.736 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:54:57.737 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.739 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.740 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.741 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.742 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:54:57.744 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:54:57.745 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:54:57.747 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.748 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.749 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.749 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.751 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:54:57.752 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:54:57.753 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:54:57.754 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 11:54:57.755 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.757 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.758 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.758 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.759 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 11:54:57.803 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 11:54:57.811 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 11:54:57.819 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 11:54:57.826 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 11:54:57.830 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 11:54:57.837 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 11:54:57.845 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 11:54:57.853 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 11:54:57.856 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.862 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 11:54:57.863 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.866 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 11:54:57.868 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.870 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.872 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.873 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.874 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.878 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 11:54:57.883 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 11:54:57.886 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:54:57.888 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.889 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:54:57.890 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.897 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 11:54:57.898 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:54:57.900 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.902 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:54:57.904 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.905 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 11:54:57.906 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 11:54:57.912 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 11:55:01.648 [http-nio-8081-exec-1] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServletRegistration'
2025-08-03 11:55:01.666 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServletRegistration'
2025-08-03 11:55:01.666 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 11:55:01.666 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 11:55:01.666 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 11:55:01.666 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@32b76eb2
2025-08-03 11:55:01.666 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@307ac9a5
2025-08-03 11:55:01.667 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 11:55:01.667 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-03 11:55:01.678 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/info
2025-08-03 11:55:01.698 [http-nio-8081-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:55:01.700 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:55:01.701 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:55:01.710 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/info
2025-08-03 11:55:01.713 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/info", parameters={}
2025-08-03 11:55:01.734 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 11:55:01.747 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 11:55:01.773 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{}]
2025-08-03 11:55:01.786 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 11:55:01.863 [http-nio-8081-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 11:55:01.865 [http-nio-8081-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:55:01.866 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:55:01.866 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:55:01.872 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:55:01.880 [http-nio-8081-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 11:55:01.882 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:55:01.882 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:55:05.846 [http-nio-8081-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-03 11:55:05.847 [http-nio-8081-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:55:05.847 [http-nio-8081-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:55:05.847 [http-nio-8081-exec-5] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:55:05.848 [http-nio-8081-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-03 11:55:05.848 [http-nio-8081-exec-5] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-08-03 11:55:05.849 [http-nio-8081-exec-5] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 11:55:05.895 [http-nio-8081-exec-5] DEBUG [] o.s.web.client.RestTemplate - HTTP GET https://httpbin.org/status/200
2025-08-03 11:55:05.898 [http-nio-8081-exec-5] DEBUG [] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 11:55:08.846 [http-nio-8081-exec-5] DEBUG [] o.s.web.client.RestTemplate - Response 200 OK
2025-08-03 11:55:08.856 [http-nio-8081-exec-5] DEBUG [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 11:55:08.883 [http-nio-8081-exec-5] DEBUG [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@1af57daf]
2025-08-03 11:55:08.892 [http-nio-8081-exec-5] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 11:55:08.951 [http-nio-8081-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 11:55:08.953 [http-nio-8081-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:55:08.954 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:55:08.954 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:55:08.955 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:55:08.956 [http-nio-8081-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 11:55:08.957 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:55:08.957 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:55:42.560 [http-nio-8081-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/info
2025-08-03 11:55:42.562 [http-nio-8081-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:55:42.563 [http-nio-8081-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:55:42.563 [http-nio-8081-exec-9] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:55:42.565 [http-nio-8081-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/info
2025-08-03 11:55:42.566 [http-nio-8081-exec-9] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/info", parameters={}
2025-08-03 11:55:42.567 [http-nio-8081-exec-9] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 11:55:42.568 [http-nio-8081-exec-9] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 11:55:42.569 [http-nio-8081-exec-9] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{}]
2025-08-03 11:55:42.570 [http-nio-8081-exec-9] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 11:55:42.600 [http-nio-8081-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 11:55:42.600 [http-nio-8081-exec-10] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:55:42.601 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:55:42.601 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:55:42.603 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:55:42.605 [http-nio-8081-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 11:55:42.606 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:55:42.607 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:55:50.616 [http-nio-8081-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/info
2025-08-03 11:55:50.618 [http-nio-8081-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:55:50.618 [http-nio-8081-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:55:50.618 [http-nio-8081-exec-4] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:55:50.619 [http-nio-8081-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/info
2025-08-03 11:55:50.620 [http-nio-8081-exec-4] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/info", parameters={}
2025-08-03 11:55:50.622 [http-nio-8081-exec-4] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 11:55:50.623 [http-nio-8081-exec-4] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 11:55:50.623 [http-nio-8081-exec-4] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{}]
2025-08-03 11:55:50.624 [http-nio-8081-exec-4] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 11:55:50.654 [http-nio-8081-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 11:55:50.655 [http-nio-8081-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 11:55:50.656 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:55:50.656 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 11:55:50.657 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:55:50.659 [http-nio-8081-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 11:55:50.661 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:55:50.662 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 11:56:56.500 [http-nio-8080-exec-2] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 11:56:56.500 [http-nio-8080-exec-2] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 11:56:56.501 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 11:56:56.501 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 11:56:56.501 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 11:56:56.510 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6cabb6c
2025-08-03 11:56:56.511 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@6056839b
2025-08-03 11:56:56.511 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 11:56:56.511 [http-nio-8080-exec-2] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2025-08-03 11:56:56.598 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-08-03 11:56:56.749 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 11:56:56.752 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-08-03 11:56:56.789 [http-nio-8080-exec-2] DEBUG [c00669e6b289446d] o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-08-03 11:56:56.789 [http-nio-8080-exec-2] DEBUG [c00669e6b289446d] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.AuthController#login(LoginRequestDTO)
2025-08-03 11:56:56.838 [http-nio-8080-exec-2] DEBUG [c00669e6b289446d] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.deliverytech.delivery.dto.request.LoginRequestDTO@444701a2]
2025-08-03 11:56:56.952 [http-nio-8080-exec-2] DEBUG [c00669e6b289446d] org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.ativo,
        u1_0.data_criacao,
        u1_0.email,
        u1_0.nome,
        u1_0.restaurante_id,
        u1_0.role,
        u1_0.senha 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
        and u1_0.ativo=?
2025-08-03 11:56:57.026 [http-nio-8080-exec-2] DEBUG [c00669e6b289446d] o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-08-03 11:56:57.029 [http-nio-8080-exec-2] DEBUG [c00669e6b289446d] org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.ativo,
        u1_0.data_criacao,
        u1_0.email,
        u1_0.nome,
        u1_0.restaurante_id,
        u1_0.role,
        u1_0.senha 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
        and u1_0.ativo=?
2025-08-03 11:56:57.059 [http-nio-8080-exec-2] DEBUG [c00669e6b289446d] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 11:56:57.060 [http-nio-8080-exec-2] DEBUG [c00669e6b289446d] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@46814aa0]
2025-08-03 11:56:57.067 [http-nio-8080-exec-2] DEBUG [c00669e6b289446d] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 11:57:10.235 [http-nio-8081-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/info
2025-08-03 11:57:10.241 [http-nio-8081-exec-7] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.ativo,
        u1_0.data_criacao,
        u1_0.email,
        u1_0.nome,
        u1_0.restaurante_id,
        u1_0.role,
        u1_0.senha 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
        and u1_0.ativo=?
2025-08-03 11:57:10.243 [http-nio-8081-exec-7] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Authorities do usuário: [ROLE_ADMIN]
2025-08-03 11:57:10.248 [http-nio-8081-exec-7] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Usuário autenticado com sucesso: admin@admin.com
2025-08-03 11:57:10.248 [http-nio-8081-exec-7] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Authorities após autenticação: [ROLE_ADMIN]
2025-08-03 11:57:10.250 [http-nio-8081-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/info
2025-08-03 11:57:10.250 [http-nio-8081-exec-7] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/info", parameters={}
2025-08-03 11:57:10.251 [http-nio-8081-exec-7] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 11:57:10.251 [http-nio-8081-exec-7] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json', given [*/*] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 11:57:10.251 [http-nio-8081-exec-7] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{}]
2025-08-03 11:57:10.252 [http-nio-8081-exec-7] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:00:10.706 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 12:00:10.789 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 12:00:10.792 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 12:00:10.798 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 12:00:10.907 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 12:00:10.920 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 12:00:10.940 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 12:00:10.943 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 12:00:10.944 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 12:00:10.944 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 12:00:10.945 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 12:00:11.018 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 12:00:11.019 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 12:00:11.024 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 12:00:45.624 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 12824 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 12:00:45.625 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 12:00:45.626 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 12:00:45.671 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 12:00:45.671 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 12:00:48.040 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 12:00:48.151 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 100 ms. Found 5 JPA repository interfaces.
2025-08-03 12:00:49.095 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 12:00:49.109 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 12:00:49.112 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 12:00:49.112 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 12:00:49.178 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 12:00:49.178 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3506 ms
2025-08-03 12:00:50.057 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 12:00:50.095 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 12:00:50.292 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 12:00:50.294 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 12:00:50.324 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 12:00:51.358 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 12:00:51.362 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 12:00:51.362 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 12:00:51.364 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 12:00:51.364 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 12:00:51.364 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 12:00:51.369 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 12:00:51.378 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 12:00:51.380 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 12:00:51.381 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 12:00:51.382 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 12:00:51.385 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 12:00:51.387 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 12:00:51.398 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 12:00:51.400 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 12:00:51.401 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 12:00:51.402 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 12:00:51.406 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 12:00:51.922 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 12:00:51.923 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 12:00:52.027 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 12:00:53.157 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 12:00:53.609 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 12:00:53.763 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 12:00:54.105 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 12:00:54.224 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 12:00:54.299 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 12:00:54.863 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 12:00:54.915 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 12:00:54.980 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 12:00:54.997 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 12:00:55.098 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-08-03 12:00:55.099 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-08-03 12:00:55.100 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 12:00:55.101 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 12:00:55.133 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 12:00:55.134 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 132 ms
2025-08-03 12:00:55.154 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 12:00:55.176 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 1 mappings in 'requestMappingHandlerMapping'
2025-08-03 12:00:55.183 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 12:00:55.192 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 12:00:55.197 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2025-08-03 12:00:55.201 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-08-03 12:00:55.217 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 10.322 seconds (process running for 11.201)
2025-08-03 12:00:55.465 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 12:00:55.500 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 12:00:55.502 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 12:00:55.504 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 12:00:55.912 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.923 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.924 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.925 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.926 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.926 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.935 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.936 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.937 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.938 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.938 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.939 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.950 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.952 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.953 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.965 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.966 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.966 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.974 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:55.983 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:55.984 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:55.986 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:55.987 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:55.988 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:55.990 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.991 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.991 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.992 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.993 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.993 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.994 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.994 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.995 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.995 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.996 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.997 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.997 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.998 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.998 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:55.999 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.000 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.000 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.004 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:00:56.006 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:00:56.008 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:00:56.010 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.012 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.014 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.015 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.021 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:00:56.022 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:00:56.024 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:00:56.025 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.027 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.028 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.029 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.030 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:00:56.032 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:00:56.033 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:00:56.033 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.035 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.036 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.037 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.039 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:00:56.040 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:00:56.041 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:00:56.042 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.043 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.044 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.045 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.046 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:00:56.047 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:00:56.049 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:00:56.049 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:00:56.050 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.052 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.053 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.053 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.054 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:00:56.096 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 12:00:56.100 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 12:00:56.107 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 12:00:56.112 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 12:00:56.116 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 12:00:56.121 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 12:00:56.125 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 12:00:56.130 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 12:00:56.132 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.139 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 12:00:56.141 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.145 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 12:00:56.146 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.148 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.148 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.149 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.150 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.154 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 12:00:56.160 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 12:00:56.161 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:00:56.163 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.164 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:00:56.165 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.174 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 12:00:56.175 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:00:56.176 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.177 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:00:56.178 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.179 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:00:56.180 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:00:56.186 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 12:01:00.988 [http-nio-8081-exec-1] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServletRegistration'
2025-08-03 12:01:00.988 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServletRegistration'
2025-08-03 12:01:00.988 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 12:01:00.988 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 12:01:00.988 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 12:01:00.989 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@33700fef
2025-08-03 12:01:00.989 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@25a60772
2025-08-03 12:01:00.989 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 12:01:00.989 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-03 12:01:01.020 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/info
2025-08-03 12:01:01.035 [http-nio-8081-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:01:01.039 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:01:01.039 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 12:01:01.047 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/info
2025-08-03 12:01:01.049 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/info", parameters={}
2025-08-03 12:01:01.068 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 12:01:01.080 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 12:01:01.101 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{}]
2025-08-03 12:01:01.113 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:01:01.189 [http-nio-8081-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 12:01:01.190 [http-nio-8081-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:01:01.191 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:01:01.191 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 12:01:01.196 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 12:01:01.203 [http-nio-8081-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 12:01:01.205 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:01:01.205 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 12:01:12.265 [http-nio-8080-exec-2] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 12:01:12.265 [http-nio-8080-exec-2] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 12:01:12.265 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 12:01:12.265 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 12:01:12.265 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 12:01:12.266 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1e3db750
2025-08-03 12:01:12.267 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@7949512
2025-08-03 12:01:12.267 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 12:01:12.267 [http-nio-8080-exec-2] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-03 12:01:12.274 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-08-03 12:01:12.333 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:01:12.335 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-08-03 12:01:12.336 [http-nio-8080-exec-2] DEBUG [d7abfbc8b4214407] o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-08-03 12:01:12.336 [http-nio-8080-exec-2] DEBUG [d7abfbc8b4214407] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.AuthController#login(LoginRequestDTO)
2025-08-03 12:01:12.375 [http-nio-8080-exec-2] DEBUG [d7abfbc8b4214407] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.deliverytech.delivery.dto.request.LoginRequestDTO@7cdbe68c]
2025-08-03 12:01:12.512 [http-nio-8080-exec-2] DEBUG [d7abfbc8b4214407] org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.ativo,
        u1_0.data_criacao,
        u1_0.email,
        u1_0.nome,
        u1_0.restaurante_id,
        u1_0.role,
        u1_0.senha 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
        and u1_0.ativo=?
2025-08-03 12:01:12.578 [http-nio-8080-exec-2] DEBUG [d7abfbc8b4214407] o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-08-03 12:01:12.580 [http-nio-8080-exec-2] DEBUG [d7abfbc8b4214407] org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.ativo,
        u1_0.data_criacao,
        u1_0.email,
        u1_0.nome,
        u1_0.restaurante_id,
        u1_0.role,
        u1_0.senha 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
        and u1_0.ativo=?
2025-08-03 12:01:12.600 [http-nio-8080-exec-2] DEBUG [d7abfbc8b4214407] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:01:12.600 [http-nio-8080-exec-2] DEBUG [d7abfbc8b4214407] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@74e5ed47]
2025-08-03 12:01:12.604 [http-nio-8080-exec-2] DEBUG [d7abfbc8b4214407] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:01:22.993 [http-nio-8081-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/info
2025-08-03 12:01:22.999 [http-nio-8081-exec-7] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.ativo,
        u1_0.data_criacao,
        u1_0.email,
        u1_0.nome,
        u1_0.restaurante_id,
        u1_0.role,
        u1_0.senha 
    from
        usuarios u1_0 
    where
        u1_0.email=? 
        and u1_0.ativo=?
2025-08-03 12:01:23.000 [http-nio-8081-exec-7] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Authorities do usuário: [ROLE_ADMIN]
2025-08-03 12:01:23.002 [http-nio-8081-exec-7] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Usuário autenticado com sucesso: admin@admin.com
2025-08-03 12:01:23.003 [http-nio-8081-exec-7] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Authorities após autenticação: [ROLE_ADMIN]
2025-08-03 12:01:23.004 [http-nio-8081-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/info
2025-08-03 12:01:23.004 [http-nio-8081-exec-7] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/info", parameters={}
2025-08-03 12:01:23.004 [http-nio-8081-exec-7] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 12:01:23.005 [http-nio-8081-exec-7] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json', given [*/*] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 12:01:23.005 [http-nio-8081-exec-7] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{}]
2025-08-03 12:01:23.006 [http-nio-8081-exec-7] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:02:22.310 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 12:02:22.316 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 12:02:22.318 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 12:02:22.322 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 12:02:22.339 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 12:02:22.340 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 12:02:22.342 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 12:02:22.343 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 12:02:22.343 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 12:02:22.344 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 12:02:22.344 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 12:02:22.357 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 12:02:22.357 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 12:02:22.359 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 12:08:23.566 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 23732 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 12:08:23.656 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 12:08:23.657 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 12:08:23.721 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 12:08:23.721 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 12:08:27.160 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 12:08:27.264 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 90 ms. Found 5 JPA repository interfaces.
2025-08-03 12:08:28.391 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 12:08:28.416 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 12:08:28.420 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 12:08:28.421 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 12:08:28.506 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 12:08:28.507 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4785 ms
2025-08-03 12:08:29.414 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 12:08:29.443 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 12:08:29.619 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 12:08:29.622 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 12:08:29.647 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 12:08:30.671 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 12:08:30.674 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 12:08:30.674 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 12:08:30.675 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 12:08:30.675 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 12:08:30.675 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 12:08:30.679 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 12:08:30.687 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 12:08:30.688 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 12:08:30.690 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 12:08:30.691 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 12:08:30.694 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 12:08:30.696 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 12:08:30.706 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 12:08:30.707 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 12:08:30.708 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 12:08:30.709 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 12:08:30.713 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 12:08:31.176 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 12:08:31.177 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 12:08:31.259 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 12:08:32.413 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 12:08:32.805 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 12:08:32.914 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 12:08:33.191 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 12:08:33.294 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 12:08:33.349 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 12:08:33.932 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 12:08:34.176 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 12:08:34.263 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 12:08:34.284 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 12:08:34.374 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-08-03 12:08:34.375 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-08-03 12:08:34.375 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 12:08:34.376 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 12:08:34.410 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 12:08:34.411 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 123 ms
2025-08-03 12:08:34.434 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 12:08:34.465 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 1 mappings in 'requestMappingHandlerMapping'
2025-08-03 12:08:34.472 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 12:08:34.482 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 12:08:34.490 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2025-08-03 12:08:34.496 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-08-03 12:08:34.516 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 12.481 seconds (process running for 13.401)
2025-08-03 12:08:34.771 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 12:08:34.807 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 12:08:34.810 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 12:08:34.812 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 12:08:35.222 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.236 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.237 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.237 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.238 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.239 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.248 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.250 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.250 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.251 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.251 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.252 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.263 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.265 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.266 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.267 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.268 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.268 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.278 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.287 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.288 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.290 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.291 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.292 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.294 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.295 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.295 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.296 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.297 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.297 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.298 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.298 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.299 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.299 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.300 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.301 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.301 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.302 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.302 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.303 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.304 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.304 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.307 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:08:35.310 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:08:35.311 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:08:35.312 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.314 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.316 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.317 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.322 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:08:35.324 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:08:35.325 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:08:35.326 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.327 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.328 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.328 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.330 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:08:35.331 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:08:35.332 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:08:35.333 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.335 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.335 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.336 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.338 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:08:35.339 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:08:35.340 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:08:35.341 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.342 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.343 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.344 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.345 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:08:35.346 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:08:35.347 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:08:35.348 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:08:35.349 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.350 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.351 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.352 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.353 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:08:35.392 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 12:08:35.398 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 12:08:35.405 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 12:08:35.412 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 12:08:35.415 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 12:08:35.421 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 12:08:35.425 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 12:08:35.430 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 12:08:35.432 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.438 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 12:08:35.440 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.444 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 12:08:35.445 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.447 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.448 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.448 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.449 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.453 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 12:08:35.458 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 12:08:35.459 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:08:35.460 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.461 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:08:35.463 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.469 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 12:08:35.470 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:08:35.471 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.472 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:08:35.473 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.474 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:08:35.475 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:08:35.480 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 12:08:40.217 [http-nio-8081-exec-1] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServletRegistration'
2025-08-03 12:08:40.217 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServletRegistration'
2025-08-03 12:08:40.217 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 12:08:40.217 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 12:08:40.217 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 12:08:40.217 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@78eab227
2025-08-03 12:08:40.217 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@445db8ee
2025-08-03 12:08:40.218 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 12:08:40.218 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-03 12:08:40.240 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/info
2025-08-03 12:08:40.259 [http-nio-8081-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:08:40.262 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:08:40.262 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 12:08:40.269 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/info
2025-08-03 12:08:40.273 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/info", parameters={}
2025-08-03 12:08:40.302 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 12:08:40.315 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 12:08:40.339 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{}]
2025-08-03 12:08:40.351 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:08:40.501 [http-nio-8081-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 12:08:40.503 [http-nio-8081-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:08:40.503 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:08:40.503 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 12:08:40.511 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 12:08:40.521 [http-nio-8081-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 12:08:40.522 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:08:40.523 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 12:10:06.797 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 12:10:06.803 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 12:10:06.804 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 12:10:06.809 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 12:10:06.821 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 12:10:06.823 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 12:10:06.825 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 12:10:06.826 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 12:10:06.826 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 12:10:06.827 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 12:10:06.827 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 12:10:06.837 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 12:10:06.837 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 12:10:06.839 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 12:10:15.160 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 21640 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 12:10:15.162 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 12:10:15.162 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 12:10:15.211 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 12:10:15.211 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 12:10:17.418 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 12:10:17.537 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 104 ms. Found 5 JPA repository interfaces.
2025-08-03 12:10:18.445 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 12:10:18.458 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 12:10:18.460 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 12:10:18.460 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 12:10:18.522 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 12:10:18.523 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3310 ms
2025-08-03 12:10:19.366 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 12:10:19.401 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 12:10:19.596 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 12:10:19.599 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 12:10:19.632 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 12:10:20.731 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 12:10:20.735 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 12:10:20.735 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 12:10:20.735 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 12:10:20.735 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 12:10:20.736 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 12:10:20.740 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 12:10:20.750 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 12:10:20.751 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 12:10:20.753 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 12:10:20.754 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 12:10:20.755 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 12:10:20.758 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 12:10:20.768 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 12:10:20.769 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 12:10:20.771 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 12:10:20.772 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 12:10:20.775 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 12:10:21.263 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 12:10:21.264 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 12:10:21.361 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 12:10:22.508 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 12:10:22.896 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 12:10:23.018 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 12:10:23.350 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 12:10:23.475 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 12:10:23.545 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 12:10:24.114 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 12:10:24.164 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 12:10:24.221 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 12:10:24.239 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 12:10:24.340 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-08-03 12:10:24.342 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-08-03 12:10:24.343 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 12:10:24.343 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 12:10:24.375 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 12:10:24.375 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 133 ms
2025-08-03 12:10:24.392 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 12:10:24.412 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 1 mappings in 'requestMappingHandlerMapping'
2025-08-03 12:10:24.419 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 12:10:24.430 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 12:10:24.435 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2025-08-03 12:10:24.438 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-08-03 12:10:24.452 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 10.209 seconds (process running for 10.903)
2025-08-03 12:10:24.677 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 12:10:24.713 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 12:10:24.715 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 12:10:24.717 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 12:10:25.121 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.133 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.134 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.135 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.136 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.136 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.145 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.146 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.147 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.148 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.148 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.149 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.160 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.161 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.162 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.163 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.163 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.164 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.173 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.184 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.185 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.186 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.187 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.188 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.190 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.191 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.191 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.192 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.193 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.193 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.194 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.194 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.195 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.195 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.196 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.196 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.197 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.198 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.198 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.199 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.199 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.200 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.203 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:10:25.205 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:10:25.207 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:10:25.208 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.210 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.212 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.213 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.219 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:10:25.220 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:10:25.236 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:10:25.237 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.238 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.239 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.239 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.240 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:10:25.241 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:10:25.242 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:10:25.243 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.244 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.245 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.245 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.246 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:10:25.247 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:10:25.248 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:10:25.249 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.250 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.251 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.251 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.253 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:10:25.254 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:10:25.254 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:10:25.255 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:10:25.256 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.257 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.258 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.259 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.259 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:10:25.303 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 12:10:25.308 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 12:10:25.316 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 12:10:25.321 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 12:10:25.325 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 12:10:25.352 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 12:10:25.359 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 12:10:25.365 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 12:10:25.368 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.375 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 12:10:25.377 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.381 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 12:10:25.383 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.383 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.384 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.385 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.386 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.392 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 12:10:25.399 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 12:10:25.401 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:10:25.402 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.403 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:10:25.404 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.412 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 12:10:25.414 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:10:25.415 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.417 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:10:25.419 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.420 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:10:25.421 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:10:25.432 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 12:10:29.155 [http-nio-8081-exec-1] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServletRegistration'
2025-08-03 12:10:29.155 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServletRegistration'
2025-08-03 12:10:29.156 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 12:10:29.156 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 12:10:29.156 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 12:10:29.156 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5de30c3e
2025-08-03 12:10:29.156 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@5ac89aba
2025-08-03 12:10:29.156 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 12:10:29.156 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-03 12:10:29.170 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/info
2025-08-03 12:10:29.189 [http-nio-8081-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:10:29.191 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:10:29.191 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 12:10:29.199 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/info
2025-08-03 12:10:29.202 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/info", parameters={}
2025-08-03 12:10:29.221 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 12:10:29.231 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 12:10:29.255 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{}]
2025-08-03 12:10:29.268 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:10:29.305 [http-nio-8081-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 12:10:29.308 [http-nio-8081-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:10:29.309 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:10:29.309 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 12:10:29.317 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 12:10:29.327 [http-nio-8081-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 12:10:29.329 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:10:29.329 [http-nio-8081-exec-3] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 12:11:40.516 [File Watcher] INFO  [] o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-08-03 12:11:40.537 [Thread-5] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 12:11:40.541 [tomcat-shutdown] INFO  [] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-08-03 12:11:40.558 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 12:11:40.559 [Thread-5] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 12:11:40.559 [tomcat-shutdown] INFO  [] o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8081"]
2025-08-03 12:11:40.564 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 12:11:40.564 [Thread-5] INFO  [] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8081"]
2025-08-03 12:11:40.567 [Thread-5] INFO  [] o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-03 12:11:40.568 [Thread-5] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServletRegistration'
2025-08-03 12:11:40.571 [Thread-5] INFO  [] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-08-03 12:11:40.578 [Thread-5] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 12:11:40.580 [Thread-5] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 12:11:40.582 [Thread-5] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 12:11:40.583 [Thread-5] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 12:11:40.583 [Thread-5] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 12:11:40.584 [Thread-5] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 12:11:40.584 [Thread-5] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 12:11:40.594 [Thread-5] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 12:11:40.594 [Thread-5] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 12:11:40.596 [Thread-5] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 12:11:40.807 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 21640 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 12:11:40.808 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 12:11:40.808 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 12:11:41.705 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 12:11:41.731 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 5 JPA repository interfaces.
2025-08-03 12:11:41.851 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 12:11:41.852 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 12:11:41.852 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 12:11:41.852 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 12:11:41.879 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 12:11:41.879 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1068 ms
2025-08-03 12:11:41.986 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 12:11:41.987 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-03 12:11:41.989 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 12:11:41.990 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-03 12:11:41.990 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 12:11:42.164 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 12:11:42.164 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 12:11:42.165 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 12:11:42.165 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 12:11:42.165 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 12:11:42.165 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 12:11:42.165 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 12:11:42.166 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 12:11:42.167 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 12:11:42.189 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 12:11:42.190 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 12:11:42.191 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 12:11:42.192 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 12:11:42.193 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 12:11:42.194 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 12:11:42.195 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 12:11:42.196 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 12:11:42.198 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 12:11:42.253 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 12:11:42.253 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 12:11:42.381 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 12:11:42.557 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 12:11:42.588 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 12:11:42.654 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 12:11:42.676 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 12:11:42.683 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 12:11:42.744 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 12:11:42.758 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 12:11:42.777 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 12:11:42.782 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 12:11:42.838 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-08-03 12:11:42.839 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-08-03 12:11:42.839 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 12:11:42.839 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 12:11:42.865 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 12:11:42.865 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 81 ms
2025-08-03 12:11:42.873 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 12:11:42.882 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 1 mappings in 'requestMappingHandlerMapping'
2025-08-03 12:11:42.886 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 12:11:42.892 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 12:11:42.896 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2025-08-03 12:11:42.901 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-08-03 12:11:42.909 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 2.168 seconds (process running for 89.36)
2025-08-03 12:11:42.913 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 12:11:42.918 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 12:11:42.921 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 12:11:42.924 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 12:11:43.304 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.306 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.307 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.307 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.307 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.308 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.310 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.311 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.311 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.312 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.312 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.313 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.315 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.317 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.317 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.318 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.319 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.319 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.321 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.323 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.325 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.326 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.327 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.328 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.329 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.330 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.330 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.331 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.331 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.332 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.332 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.333 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.333 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.334 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.334 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.335 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.335 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.335 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.336 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.336 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.337 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.337 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.339 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:11:43.341 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:11:43.342 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:11:43.343 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.345 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.346 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.346 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.348 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:11:43.349 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:11:43.349 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:11:43.350 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.351 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.353 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.354 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.356 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:11:43.357 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:11:43.358 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:11:43.358 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.359 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.360 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.360 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.361 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:11:43.362 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:11:43.364 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:11:43.365 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.365 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.366 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.367 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.368 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:11:43.369 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:11:43.370 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:11:43.371 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 12:11:43.372 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.373 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.374 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.374 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.375 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 12:11:43.399 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 12:11:43.401 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 12:11:43.404 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 12:11:43.407 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 12:11:43.409 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 12:11:43.412 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 12:11:43.416 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 12:11:43.419 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 12:11:43.420 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.423 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 12:11:43.423 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.425 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 12:11:43.426 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.426 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.427 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.428 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.428 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.431 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 12:11:43.433 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 12:11:43.434 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:11:43.434 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.435 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:11:43.435 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.437 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 12:11:43.438 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:11:43.439 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.439 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:11:43.439 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.440 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 12:11:43.440 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 12:11:43.443 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 12:11:43.446 [restartedMain] INFO  [] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-08-03 12:11:49.031 [http-nio-8081-exec-1] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServletRegistration'
2025-08-03 12:11:49.031 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServletRegistration'
2025-08-03 12:11:49.031 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 12:11:49.031 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 12:11:49.031 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 12:11:49.031 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@740eb9d0
2025-08-03 12:11:49.031 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@14c8e8dd
2025-08-03 12:11:49.031 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 12:11:49.032 [http-nio-8081-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-08-03 12:11:49.032 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/info
2025-08-03 12:11:49.034 [http-nio-8081-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:11:49.035 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:11:49.035 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 12:11:49.038 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/info
2025-08-03 12:11:49.038 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/info", parameters={}
2025-08-03 12:11:49.040 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 12:11:49.041 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 12:11:49.042 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{}]
2025-08-03 12:11:49.043 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:11:49.086 [http-nio-8081-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 12:11:49.088 [http-nio-8081-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:11:49.089 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:11:49.089 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 12:11:49.096 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 12:11:49.099 [http-nio-8081-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 12:11:49.101 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:11:49.102 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 12:15:41.324 [http-nio-8080-exec-1] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 12:15:41.340 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 12:15:41.345 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 12:15:41.346 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 12:15:41.346 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 12:15:41.389 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2c5a2e75
2025-08-03 12:15:41.389 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@2beec029
2025-08-03 12:15:41.391 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 12:15:41.391 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 51 ms
2025-08-03 12:15:41.693 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard.html
2025-08-03 12:15:41.700 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:15:41.702 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:15:41.705 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1A11482F8D2AA650C43A533DAEBA2A75
2025-08-03 12:15:41.743 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard.html
2025-08-03 12:15:41.919 [http-nio-8080-exec-1] WARN  [671e60a5e34c4b0a] o.a.c.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [122] milliseconds.
2025-08-03 12:15:41.958 [http-nio-8080-exec-1] DEBUG [671e60a5e34c4b0a] o.s.web.servlet.DispatcherServlet - GET "/dashboard.html", parameters={}
2025-08-03 12:15:41.971 [http-nio-8080-exec-1] DEBUG [671e60a5e34c4b0a] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-03 12:15:42.096 [http-nio-8080-exec-1] DEBUG [671e60a5e34c4b0a] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:15:42.327 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:15:42.328 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:15:42.329 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:15:42.331 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:15:42.331 [http-nio-8080-exec-2] DEBUG [462caca5f62940b5] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:15:42.333 [http-nio-8080-exec-2] DEBUG [462caca5f62940b5] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:15:42.390 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 12:15:42.391 [http-nio-8080-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:15:42.391 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:15:42.422 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 12:15:42.427 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 12:15:42.428 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:15:42.428 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 12:15:44.994 [http-nio-8080-exec-2] DEBUG [462caca5f62940b5] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:15:44.999 [http-nio-8080-exec-2] DEBUG [462caca5f62940b5] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:15:45.209 [http-nio-8080-exec-2] DEBUG [462caca5f62940b5] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:15:47.324 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:15:47.324 [http-nio-8080-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:15:47.325 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:15:47.326 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:15:47.326 [http-nio-8080-exec-4] DEBUG [e2cd93cf69004124] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:15:47.326 [http-nio-8080-exec-4] DEBUG [e2cd93cf69004124] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:15:47.328 [http-nio-8080-exec-4] DEBUG [e2cd93cf69004124] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:15:47.328 [http-nio-8080-exec-4] DEBUG [e2cd93cf69004124] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:15:47.330 [http-nio-8080-exec-4] DEBUG [e2cd93cf69004124] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:15:53.186 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:15:53.186 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:15:53.187 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:15:53.188 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:15:53.188 [http-nio-8080-exec-7] DEBUG [9474ac1dd6c04dee] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:15:53.188 [http-nio-8080-exec-7] DEBUG [9474ac1dd6c04dee] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:15:53.190 [http-nio-8080-exec-7] DEBUG [9474ac1dd6c04dee] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:15:53.191 [http-nio-8080-exec-7] DEBUG [9474ac1dd6c04dee] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:15:53.191 [http-nio-8080-exec-7] DEBUG [9474ac1dd6c04dee] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:15:58.192 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:15:58.195 [http-nio-8080-exec-8] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:15:58.196 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:15:58.199 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:15:58.200 [http-nio-8080-exec-8] DEBUG [4095e4545ffa4e63] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:15:58.201 [http-nio-8080-exec-8] DEBUG [4095e4545ffa4e63] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:15:58.206 [http-nio-8080-exec-8] DEBUG [4095e4545ffa4e63] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:15:58.207 [http-nio-8080-exec-8] DEBUG [4095e4545ffa4e63] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:15:58.209 [http-nio-8080-exec-8] DEBUG [4095e4545ffa4e63] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:16:03.183 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:16:03.184 [http-nio-8080-exec-10] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:16:03.185 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:16:03.187 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:16:03.187 [http-nio-8080-exec-10] DEBUG [21ef21c2a93c4093] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:16:03.187 [http-nio-8080-exec-10] DEBUG [21ef21c2a93c4093] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:16:03.191 [http-nio-8080-exec-10] DEBUG [21ef21c2a93c4093] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:16:03.192 [http-nio-8080-exec-10] DEBUG [21ef21c2a93c4093] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:16:03.194 [http-nio-8080-exec-10] DEBUG [21ef21c2a93c4093] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:16:08.189 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:16:08.192 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:16:08.193 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:16:08.197 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:16:08.198 [http-nio-8080-exec-1] DEBUG [e29c7592729d4499] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:16:08.198 [http-nio-8080-exec-1] DEBUG [e29c7592729d4499] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:16:08.204 [http-nio-8080-exec-1] DEBUG [e29c7592729d4499] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:16:08.205 [http-nio-8080-exec-1] DEBUG [e29c7592729d4499] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:16:08.207 [http-nio-8080-exec-1] DEBUG [e29c7592729d4499] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:16:13.199 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:16:13.203 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:16:13.204 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:16:13.208 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:16:13.209 [http-nio-8080-exec-2] DEBUG [6ceaa57462a14983] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:16:13.209 [http-nio-8080-exec-2] DEBUG [6ceaa57462a14983] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:16:13.213 [http-nio-8080-exec-2] DEBUG [6ceaa57462a14983] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:16:13.214 [http-nio-8080-exec-2] DEBUG [6ceaa57462a14983] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:16:13.218 [http-nio-8080-exec-2] DEBUG [6ceaa57462a14983] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:16:18.195 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:16:18.197 [http-nio-8080-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:16:18.197 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:16:18.203 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:16:18.204 [http-nio-8080-exec-4] DEBUG [30e565cf41cb491b] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:16:18.205 [http-nio-8080-exec-4] DEBUG [30e565cf41cb491b] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:16:18.209 [http-nio-8080-exec-4] DEBUG [30e565cf41cb491b] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:16:18.210 [http-nio-8080-exec-4] DEBUG [30e565cf41cb491b] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:16:18.212 [http-nio-8080-exec-4] DEBUG [30e565cf41cb491b] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:16:23.198 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:16:23.202 [http-nio-8080-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:16:23.203 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:16:23.207 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:16:23.208 [http-nio-8080-exec-6] DEBUG [a509d2ff2f9d4935] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:16:23.208 [http-nio-8080-exec-6] DEBUG [a509d2ff2f9d4935] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:16:23.211 [http-nio-8080-exec-6] DEBUG [a509d2ff2f9d4935] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:16:23.212 [http-nio-8080-exec-6] DEBUG [a509d2ff2f9d4935] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:16:23.213 [http-nio-8080-exec-6] DEBUG [a509d2ff2f9d4935] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:16:28.177 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:16:28.178 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:16:28.178 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:16:28.179 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:16:28.179 [http-nio-8080-exec-7] DEBUG [470b3be51be84c0f] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:16:28.180 [http-nio-8080-exec-7] DEBUG [470b3be51be84c0f] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:16:28.181 [http-nio-8080-exec-7] DEBUG [470b3be51be84c0f] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:16:28.181 [http-nio-8080-exec-7] DEBUG [470b3be51be84c0f] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:16:28.183 [http-nio-8080-exec-7] DEBUG [470b3be51be84c0f] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:16:33.189 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:16:33.192 [http-nio-8080-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:16:33.193 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:16:33.197 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:16:33.198 [http-nio-8080-exec-9] DEBUG [1f1da07934d743bb] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:16:33.199 [http-nio-8080-exec-9] DEBUG [1f1da07934d743bb] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:16:33.204 [http-nio-8080-exec-9] DEBUG [1f1da07934d743bb] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:16:33.204 [http-nio-8080-exec-9] DEBUG [1f1da07934d743bb] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:16:33.207 [http-nio-8080-exec-9] DEBUG [1f1da07934d743bb] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:16:38.179 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:16:38.179 [http-nio-8080-exec-10] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:16:38.180 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:16:38.180 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:16:38.180 [http-nio-8080-exec-10] DEBUG [0a8229e7582b478e] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:16:38.181 [http-nio-8080-exec-10] DEBUG [0a8229e7582b478e] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:16:38.182 [http-nio-8080-exec-10] DEBUG [0a8229e7582b478e] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:16:38.182 [http-nio-8080-exec-10] DEBUG [0a8229e7582b478e] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:16:38.183 [http-nio-8080-exec-10] DEBUG [0a8229e7582b478e] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:16:43.186 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:16:43.190 [http-nio-8080-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:16:43.192 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:16:43.197 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:16:43.198 [http-nio-8080-exec-3] DEBUG [7f2464e3f3a54e09] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:16:43.199 [http-nio-8080-exec-3] DEBUG [7f2464e3f3a54e09] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:16:43.204 [http-nio-8080-exec-3] DEBUG [7f2464e3f3a54e09] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:16:43.204 [http-nio-8080-exec-3] DEBUG [7f2464e3f3a54e09] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:16:43.207 [http-nio-8080-exec-3] DEBUG [7f2464e3f3a54e09] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:16:48.186 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:16:48.187 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:16:48.187 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:16:48.188 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:16:48.189 [http-nio-8080-exec-2] DEBUG [644afe75c44248af] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:16:48.189 [http-nio-8080-exec-2] DEBUG [644afe75c44248af] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:16:48.190 [http-nio-8080-exec-2] DEBUG [644afe75c44248af] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:16:48.190 [http-nio-8080-exec-2] DEBUG [644afe75c44248af] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:16:48.191 [http-nio-8080-exec-2] DEBUG [644afe75c44248af] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:17:44.194 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:17:44.200 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:17:44.201 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:17:44.205 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:17:44.206 [http-nio-8080-exec-5] DEBUG [d1255be706c148bd] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:17:44.207 [http-nio-8080-exec-5] DEBUG [d1255be706c148bd] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:17:44.212 [http-nio-8080-exec-5] DEBUG [d1255be706c148bd] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:17:44.213 [http-nio-8080-exec-5] DEBUG [d1255be706c148bd] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:17:44.217 [http-nio-8080-exec-5] DEBUG [d1255be706c148bd] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:18:44.183 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:18:44.184 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:18:44.185 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:18:44.187 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:18:44.192 [http-nio-8080-exec-7] DEBUG [bbfd90dd231c4d23] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:18:44.193 [http-nio-8080-exec-7] DEBUG [bbfd90dd231c4d23] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:18:44.212 [http-nio-8080-exec-7] DEBUG [bbfd90dd231c4d23] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:18:44.216 [http-nio-8080-exec-7] DEBUG [bbfd90dd231c4d23] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:18:44.217 [http-nio-8080-exec-7] DEBUG [bbfd90dd231c4d23] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:19:44.186 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:19:44.188 [http-nio-8080-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:19:44.189 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:19:44.190 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:19:44.191 [http-nio-8080-exec-9] DEBUG [2003a004031149f3] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:19:44.192 [http-nio-8080-exec-9] DEBUG [2003a004031149f3] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:19:44.194 [http-nio-8080-exec-9] DEBUG [2003a004031149f3] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:19:44.195 [http-nio-8080-exec-9] DEBUG [2003a004031149f3] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:19:44.197 [http-nio-8080-exec-9] DEBUG [2003a004031149f3] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:20:44.189 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:20:44.191 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:20:44.191 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:20:44.192 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:20:44.193 [http-nio-8080-exec-1] DEBUG [229bed932087495e] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:20:44.194 [http-nio-8080-exec-1] DEBUG [229bed932087495e] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:20:44.198 [http-nio-8080-exec-1] DEBUG [229bed932087495e] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:20:44.198 [http-nio-8080-exec-1] DEBUG [229bed932087495e] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:20:44.198 [http-nio-8080-exec-1] DEBUG [229bed932087495e] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:21:44.182 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:21:44.184 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:21:44.184 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:21:44.185 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:21:44.185 [http-nio-8080-exec-2] DEBUG [817d64e1860c4242] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:21:44.185 [http-nio-8080-exec-2] DEBUG [817d64e1860c4242] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:21:44.187 [http-nio-8080-exec-2] DEBUG [817d64e1860c4242] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:21:44.187 [http-nio-8080-exec-2] DEBUG [817d64e1860c4242] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:21:44.189 [http-nio-8080-exec-2] DEBUG [817d64e1860c4242] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:22:44.184 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:22:44.185 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:22:44.185 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:22:44.187 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:22:44.187 [http-nio-8080-exec-5] DEBUG [37a2b73d69754bfe] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:22:44.187 [http-nio-8080-exec-5] DEBUG [37a2b73d69754bfe] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:22:44.189 [http-nio-8080-exec-5] DEBUG [37a2b73d69754bfe] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:22:44.189 [http-nio-8080-exec-5] DEBUG [37a2b73d69754bfe] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:22:44.189 [http-nio-8080-exec-5] DEBUG [37a2b73d69754bfe] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:23:44.191 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:23:44.192 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:23:44.193 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:23:44.194 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:23:44.195 [http-nio-8080-exec-7] DEBUG [14f81e910b0a4047] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:23:44.195 [http-nio-8080-exec-7] DEBUG [14f81e910b0a4047] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:23:44.198 [http-nio-8080-exec-7] DEBUG [14f81e910b0a4047] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:23:44.198 [http-nio-8080-exec-7] DEBUG [14f81e910b0a4047] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:23:44.199 [http-nio-8080-exec-7] DEBUG [14f81e910b0a4047] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:24:44.218 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:24:44.219 [http-nio-8080-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:24:44.219 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:24:44.220 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:24:44.221 [http-nio-8080-exec-9] DEBUG [72f3e1bc3d5348d9] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:24:44.221 [http-nio-8080-exec-9] DEBUG [72f3e1bc3d5348d9] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:24:44.222 [http-nio-8080-exec-9] DEBUG [72f3e1bc3d5348d9] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:24:44.222 [http-nio-8080-exec-9] DEBUG [72f3e1bc3d5348d9] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:24:44.225 [http-nio-8080-exec-9] DEBUG [72f3e1bc3d5348d9] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:25:44.210 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:25:44.211 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:25:44.212 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:25:44.214 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:25:44.214 [http-nio-8080-exec-1] DEBUG [18879f8f41774c97] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:25:44.214 [http-nio-8080-exec-1] DEBUG [18879f8f41774c97] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:25:44.219 [http-nio-8080-exec-1] DEBUG [18879f8f41774c97] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:25:44.219 [http-nio-8080-exec-1] DEBUG [18879f8f41774c97] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:25:44.220 [http-nio-8080-exec-1] DEBUG [18879f8f41774c97] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:26:44.186 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:26:44.188 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:26:44.189 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:26:44.193 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:26:44.193 [http-nio-8080-exec-2] DEBUG [cb7c5ba4c2d549f5] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:26:44.193 [http-nio-8080-exec-2] DEBUG [cb7c5ba4c2d549f5] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:26:44.196 [http-nio-8080-exec-2] DEBUG [cb7c5ba4c2d549f5] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:26:44.197 [http-nio-8080-exec-2] DEBUG [cb7c5ba4c2d549f5] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:26:44.198 [http-nio-8080-exec-2] DEBUG [cb7c5ba4c2d549f5] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:27:44.191 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:27:44.193 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:27:44.194 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:27:44.198 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:27:44.199 [http-nio-8080-exec-5] DEBUG [7585a134dc824ece] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:27:44.200 [http-nio-8080-exec-5] DEBUG [7585a134dc824ece] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:27:44.208 [http-nio-8080-exec-5] DEBUG [7585a134dc824ece] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:27:44.210 [http-nio-8080-exec-5] DEBUG [7585a134dc824ece] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:27:44.212 [http-nio-8080-exec-5] DEBUG [7585a134dc824ece] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:28:44.194 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:28:44.196 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:28:44.197 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:28:44.200 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:28:44.201 [http-nio-8080-exec-7] DEBUG [2ef9dbb1b3d74e9e] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:28:44.201 [http-nio-8080-exec-7] DEBUG [2ef9dbb1b3d74e9e] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:28:44.205 [http-nio-8080-exec-7] DEBUG [2ef9dbb1b3d74e9e] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:28:44.206 [http-nio-8080-exec-7] DEBUG [2ef9dbb1b3d74e9e] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:28:44.208 [http-nio-8080-exec-7] DEBUG [2ef9dbb1b3d74e9e] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:29:44.188 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:29:44.191 [http-nio-8080-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:29:44.192 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:29:44.193 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:29:44.193 [http-nio-8080-exec-9] DEBUG [e3fd616777c74491] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:29:44.193 [http-nio-8080-exec-9] DEBUG [e3fd616777c74491] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:29:44.195 [http-nio-8080-exec-9] DEBUG [e3fd616777c74491] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:29:44.195 [http-nio-8080-exec-9] DEBUG [e3fd616777c74491] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:29:44.196 [http-nio-8080-exec-9] DEBUG [e3fd616777c74491] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:30:44.193 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:30:44.201 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:30:44.202 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:30:44.205 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:30:44.206 [http-nio-8080-exec-1] DEBUG [36d512ea33d6402a] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:30:44.207 [http-nio-8080-exec-1] DEBUG [36d512ea33d6402a] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:30:44.214 [http-nio-8080-exec-1] DEBUG [36d512ea33d6402a] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:30:44.215 [http-nio-8080-exec-1] DEBUG [36d512ea33d6402a] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:30:44.218 [http-nio-8080-exec-1] DEBUG [36d512ea33d6402a] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:31:44.183 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:31:44.186 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:31:44.187 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:31:44.187 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:31:44.188 [http-nio-8080-exec-2] DEBUG [3b4d648b05e1400f] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:31:44.188 [http-nio-8080-exec-2] DEBUG [3b4d648b05e1400f] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:31:44.189 [http-nio-8080-exec-2] DEBUG [3b4d648b05e1400f] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:31:44.189 [http-nio-8080-exec-2] DEBUG [3b4d648b05e1400f] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:31:44.190 [http-nio-8080-exec-2] DEBUG [3b4d648b05e1400f] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:32:44.201 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:32:44.205 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:32:44.207 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:32:44.210 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:32:44.212 [http-nio-8080-exec-5] DEBUG [4c63b4d2b0a24d19] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:32:44.212 [http-nio-8080-exec-5] DEBUG [4c63b4d2b0a24d19] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:32:44.223 [http-nio-8080-exec-5] DEBUG [4c63b4d2b0a24d19] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:32:44.224 [http-nio-8080-exec-5] DEBUG [4c63b4d2b0a24d19] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:32:44.226 [http-nio-8080-exec-5] DEBUG [4c63b4d2b0a24d19] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:33:44.189 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:33:44.189 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:33:44.190 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:33:44.190 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:33:44.191 [http-nio-8080-exec-7] DEBUG [13d87ca3f10e43c5] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:33:44.192 [http-nio-8080-exec-7] DEBUG [13d87ca3f10e43c5] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:33:44.194 [http-nio-8080-exec-7] DEBUG [13d87ca3f10e43c5] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:33:44.195 [http-nio-8080-exec-7] DEBUG [13d87ca3f10e43c5] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:33:44.197 [http-nio-8080-exec-7] DEBUG [13d87ca3f10e43c5] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:34:44.190 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:34:44.191 [http-nio-8080-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:34:44.191 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:34:44.192 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:34:44.192 [http-nio-8080-exec-9] DEBUG [11b8652a1e3347d1] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:34:44.192 [http-nio-8080-exec-9] DEBUG [11b8652a1e3347d1] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:34:44.194 [http-nio-8080-exec-9] DEBUG [11b8652a1e3347d1] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:34:44.194 [http-nio-8080-exec-9] DEBUG [11b8652a1e3347d1] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:34:44.195 [http-nio-8080-exec-9] DEBUG [11b8652a1e3347d1] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:35:44.189 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:35:44.190 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:35:44.191 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:35:44.193 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:35:44.194 [http-nio-8080-exec-1] DEBUG [cb7cbb87931b4c00] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:35:44.194 [http-nio-8080-exec-1] DEBUG [cb7cbb87931b4c00] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:35:44.196 [http-nio-8080-exec-1] DEBUG [cb7cbb87931b4c00] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:35:44.198 [http-nio-8080-exec-1] DEBUG [cb7cbb87931b4c00] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:35:44.198 [http-nio-8080-exec-1] DEBUG [cb7cbb87931b4c00] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:36:44.194 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:36:44.195 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:36:44.195 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:36:44.196 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:36:44.196 [http-nio-8080-exec-2] DEBUG [214ee26cfb3f4771] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:36:44.196 [http-nio-8080-exec-2] DEBUG [214ee26cfb3f4771] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:36:44.198 [http-nio-8080-exec-2] DEBUG [214ee26cfb3f4771] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:36:44.198 [http-nio-8080-exec-2] DEBUG [214ee26cfb3f4771] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:36:44.199 [http-nio-8080-exec-2] DEBUG [214ee26cfb3f4771] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:37:44.183 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:37:44.188 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:37:44.188 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:37:44.190 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:37:44.190 [http-nio-8080-exec-5] DEBUG [1fd1eef9cbf94adc] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:37:44.191 [http-nio-8080-exec-5] DEBUG [1fd1eef9cbf94adc] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:37:44.192 [http-nio-8080-exec-5] DEBUG [1fd1eef9cbf94adc] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:37:44.192 [http-nio-8080-exec-5] DEBUG [1fd1eef9cbf94adc] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:37:44.193 [http-nio-8080-exec-5] DEBUG [1fd1eef9cbf94adc] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:38:44.191 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:38:44.192 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:38:44.192 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:38:44.207 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:38:44.208 [http-nio-8080-exec-7] DEBUG [5651bfd4228d46b3] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:38:44.208 [http-nio-8080-exec-7] DEBUG [5651bfd4228d46b3] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:38:44.209 [http-nio-8080-exec-7] DEBUG [5651bfd4228d46b3] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:38:44.209 [http-nio-8080-exec-7] DEBUG [5651bfd4228d46b3] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:38:44.210 [http-nio-8080-exec-7] DEBUG [5651bfd4228d46b3] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:39:44.191 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:39:44.191 [http-nio-8080-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:39:44.191 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:39:44.193 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:39:44.193 [http-nio-8080-exec-9] DEBUG [dbab0ccaaf2c47ee] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:39:44.193 [http-nio-8080-exec-9] DEBUG [dbab0ccaaf2c47ee] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:39:44.194 [http-nio-8080-exec-9] DEBUG [dbab0ccaaf2c47ee] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:39:44.196 [http-nio-8080-exec-9] DEBUG [dbab0ccaaf2c47ee] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:39:44.197 [http-nio-8080-exec-9] DEBUG [dbab0ccaaf2c47ee] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:40:44.177 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:40:44.178 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:40:44.178 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:40:44.179 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:40:44.179 [http-nio-8080-exec-1] DEBUG [d8c180ef3755467d] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:40:44.179 [http-nio-8080-exec-1] DEBUG [d8c180ef3755467d] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:40:44.185 [http-nio-8080-exec-1] DEBUG [d8c180ef3755467d] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:40:44.186 [http-nio-8080-exec-1] DEBUG [d8c180ef3755467d] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:40:44.187 [http-nio-8080-exec-1] DEBUG [d8c180ef3755467d] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:41:44.186 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:41:44.188 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:41:44.188 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:41:44.191 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:41:44.191 [http-nio-8080-exec-2] DEBUG [2a35bd0be84143ea] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:41:44.192 [http-nio-8080-exec-2] DEBUG [2a35bd0be84143ea] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:41:44.196 [http-nio-8080-exec-2] DEBUG [2a35bd0be84143ea] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:41:44.197 [http-nio-8080-exec-2] DEBUG [2a35bd0be84143ea] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:41:44.199 [http-nio-8080-exec-2] DEBUG [2a35bd0be84143ea] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:42:44.198 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:42:44.200 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:42:44.201 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:42:44.203 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:42:44.205 [http-nio-8080-exec-5] DEBUG [32fe536e282a45c3] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:42:44.206 [http-nio-8080-exec-5] DEBUG [32fe536e282a45c3] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:42:44.209 [http-nio-8080-exec-5] DEBUG [32fe536e282a45c3] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:42:44.210 [http-nio-8080-exec-5] DEBUG [32fe536e282a45c3] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:42:44.211 [http-nio-8080-exec-5] DEBUG [32fe536e282a45c3] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:43:44.181 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:43:44.182 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:43:44.182 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:43:44.182 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:43:44.183 [http-nio-8080-exec-7] DEBUG [830a9369d4fe414e] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:43:44.183 [http-nio-8080-exec-7] DEBUG [830a9369d4fe414e] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:43:44.184 [http-nio-8080-exec-7] DEBUG [830a9369d4fe414e] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:43:44.185 [http-nio-8080-exec-7] DEBUG [830a9369d4fe414e] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:43:44.185 [http-nio-8080-exec-7] DEBUG [830a9369d4fe414e] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:44:44.202 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:44:44.204 [http-nio-8080-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:44:44.206 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:44:44.209 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:44:44.210 [http-nio-8080-exec-9] DEBUG [9b84159632bc4c7d] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:44:44.211 [http-nio-8080-exec-9] DEBUG [9b84159632bc4c7d] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:44:44.215 [http-nio-8080-exec-9] DEBUG [9b84159632bc4c7d] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:44:44.217 [http-nio-8080-exec-9] DEBUG [9b84159632bc4c7d] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:44:44.219 [http-nio-8080-exec-9] DEBUG [9b84159632bc4c7d] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:45:44.189 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:45:44.189 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:45:44.190 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:45:44.191 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:45:44.191 [http-nio-8080-exec-1] DEBUG [a7c19f4e21ba4ffc] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:45:44.191 [http-nio-8080-exec-1] DEBUG [a7c19f4e21ba4ffc] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:45:44.193 [http-nio-8080-exec-1] DEBUG [a7c19f4e21ba4ffc] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:45:44.193 [http-nio-8080-exec-1] DEBUG [a7c19f4e21ba4ffc] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:45:44.194 [http-nio-8080-exec-1] DEBUG [a7c19f4e21ba4ffc] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:46:44.201 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:46:44.204 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:46:44.205 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:46:44.208 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:46:44.210 [http-nio-8080-exec-2] DEBUG [54001d6b9f9942a7] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:46:44.210 [http-nio-8080-exec-2] DEBUG [54001d6b9f9942a7] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:46:44.228 [http-nio-8080-exec-2] DEBUG [54001d6b9f9942a7] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:46:44.228 [http-nio-8080-exec-2] DEBUG [54001d6b9f9942a7] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:46:44.229 [http-nio-8080-exec-2] DEBUG [54001d6b9f9942a7] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:47:44.215 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:47:44.216 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:47:44.216 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:47:44.218 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:47:44.218 [http-nio-8080-exec-5] DEBUG [ea1f8f1a412d4f92] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:47:44.219 [http-nio-8080-exec-5] DEBUG [ea1f8f1a412d4f92] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:47:44.220 [http-nio-8080-exec-5] DEBUG [ea1f8f1a412d4f92] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:47:44.220 [http-nio-8080-exec-5] DEBUG [ea1f8f1a412d4f92] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:47:44.222 [http-nio-8080-exec-5] DEBUG [ea1f8f1a412d4f92] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:48:44.192 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:48:44.192 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:48:44.193 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:48:44.193 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:48:44.193 [http-nio-8080-exec-7] DEBUG [adb6abf893cd4e29] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:48:44.194 [http-nio-8080-exec-7] DEBUG [adb6abf893cd4e29] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:48:44.195 [http-nio-8080-exec-7] DEBUG [adb6abf893cd4e29] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:48:44.195 [http-nio-8080-exec-7] DEBUG [adb6abf893cd4e29] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:48:44.196 [http-nio-8080-exec-7] DEBUG [adb6abf893cd4e29] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:49:44.193 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:49:44.196 [http-nio-8080-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:49:44.196 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:49:44.201 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:49:44.202 [http-nio-8080-exec-9] DEBUG [b4c910babafc4a10] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:49:44.202 [http-nio-8080-exec-9] DEBUG [b4c910babafc4a10] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:49:44.208 [http-nio-8080-exec-9] DEBUG [b4c910babafc4a10] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:49:44.209 [http-nio-8080-exec-9] DEBUG [b4c910babafc4a10] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:49:44.213 [http-nio-8080-exec-9] DEBUG [b4c910babafc4a10] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:50:44.179 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:50:44.198 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:50:44.199 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:50:44.200 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:50:44.200 [http-nio-8080-exec-1] DEBUG [44cf822063ac4ec3] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:50:44.200 [http-nio-8080-exec-1] DEBUG [44cf822063ac4ec3] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:50:44.205 [http-nio-8080-exec-1] DEBUG [44cf822063ac4ec3] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:50:44.205 [http-nio-8080-exec-1] DEBUG [44cf822063ac4ec3] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:50:44.206 [http-nio-8080-exec-1] DEBUG [44cf822063ac4ec3] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:51:44.179 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:51:44.179 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:51:44.180 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:51:44.181 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:51:44.182 [http-nio-8080-exec-2] DEBUG [3be0df51d37446f4] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:51:44.182 [http-nio-8080-exec-2] DEBUG [3be0df51d37446f4] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:51:44.184 [http-nio-8080-exec-2] DEBUG [3be0df51d37446f4] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:51:44.184 [http-nio-8080-exec-2] DEBUG [3be0df51d37446f4] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:51:44.190 [http-nio-8080-exec-2] DEBUG [3be0df51d37446f4] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:52:44.178 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:52:44.179 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:52:44.181 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:52:44.182 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:52:44.182 [http-nio-8080-exec-5] DEBUG [12eec36e89c24f93] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:52:44.182 [http-nio-8080-exec-5] DEBUG [12eec36e89c24f93] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:52:44.184 [http-nio-8080-exec-5] DEBUG [12eec36e89c24f93] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:52:44.184 [http-nio-8080-exec-5] DEBUG [12eec36e89c24f93] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:52:44.185 [http-nio-8080-exec-5] DEBUG [12eec36e89c24f93] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:53:28.604 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:53:28.606 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:53:28.606 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:53:28.607 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:53:28.608 [http-nio-8080-exec-7] DEBUG [0382d74f40a44a94] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:53:28.609 [http-nio-8080-exec-7] DEBUG [0382d74f40a44a94] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:53:28.611 [http-nio-8080-exec-7] DEBUG [0382d74f40a44a94] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:53:28.611 [http-nio-8080-exec-7] DEBUG [0382d74f40a44a94] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:53:28.613 [http-nio-8080-exec-7] DEBUG [0382d74f40a44a94] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:53:31.775 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/prometheu
2025-08-03 12:53:31.781 [http-nio-8080-exec-8] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:53:31.782 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:53:31.782 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/prometheu
2025-08-03 12:53:31.783 [http-nio-8080-exec-8] DEBUG [1de7fb53076b4cb2] o.s.web.servlet.DispatcherServlet - GET "/actuator/prometheu", parameters={}
2025-08-03 12:53:31.790 [http-nio-8080-exec-8] DEBUG [1de7fb53076b4cb2] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-03 12:53:32.168 [http-nio-8080-exec-8] DEBUG [1de7fb53076b4cb2] o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-08-03 12:53:32.269 [http-nio-8080-exec-8] DEBUG [1de7fb53076b4cb2] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource actuator/prometheu.]
2025-08-03 12:53:32.269 [http-nio-8080-exec-8] DEBUG [1de7fb53076b4cb2] o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-03 12:53:32.287 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 12:53:32.288 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:53:32.292 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 12:53:33.185 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:53:33.186 [http-nio-8080-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:53:33.186 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:53:33.187 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:53:33.187 [http-nio-8080-exec-9] DEBUG [97e6159239ea4722] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:53:33.188 [http-nio-8080-exec-9] DEBUG [97e6159239ea4722] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:53:33.189 [http-nio-8080-exec-9] DEBUG [97e6159239ea4722] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:53:33.190 [http-nio-8080-exec-9] DEBUG [97e6159239ea4722] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:53:33.192 [http-nio-8080-exec-9] DEBUG [97e6159239ea4722] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:53:35.795 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/prometheus
2025-08-03 12:53:35.796 [http-nio-8080-exec-10] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:53:35.796 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:53:35.798 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/prometheus
2025-08-03 12:53:35.799 [http-nio-8080-exec-10] DEBUG [b67f817d68b74b0e] o.s.web.servlet.DispatcherServlet - GET "/actuator/prometheus", parameters={}
2025-08-03 12:53:35.800 [http-nio-8080-exec-10] DEBUG [b67f817d68b74b0e] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-03 12:53:35.803 [http-nio-8080-exec-10] DEBUG [b67f817d68b74b0e] o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-08-03 12:53:35.816 [http-nio-8080-exec-10] DEBUG [b67f817d68b74b0e] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource actuator/prometheus.]
2025-08-03 12:53:35.817 [http-nio-8080-exec-10] DEBUG [b67f817d68b74b0e] o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-03 12:53:35.818 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 12:53:35.819 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:53:35.820 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 12:53:38.196 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:53:38.198 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:53:38.199 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:53:38.201 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:53:38.202 [http-nio-8080-exec-2] DEBUG [804d1186c40f40ac] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:53:38.203 [http-nio-8080-exec-2] DEBUG [804d1186c40f40ac] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:53:38.207 [http-nio-8080-exec-2] DEBUG [804d1186c40f40ac] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:53:38.208 [http-nio-8080-exec-2] DEBUG [804d1186c40f40ac] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:53:38.210 [http-nio-8080-exec-2] DEBUG [804d1186c40f40ac] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:53:42.261 [http-nio-8081-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/prometheus
2025-08-03 12:53:42.262 [http-nio-8081-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:53:42.262 [http-nio-8081-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:53:42.263 [http-nio-8081-exec-5] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 6136CDE40338AB190B37C0D86771E96D
2025-08-03 12:53:42.264 [http-nio-8081-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/prometheus
2025-08-03 12:53:42.264 [http-nio-8081-exec-5] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/prometheus", parameters={}
2025-08-03 12:53:42.273 [http-nio-8081-exec-5] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 12:53:42.632 [http-nio-8081-exec-5] DEBUG [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:text/plain;version=0.0.4;charset=utf-8' in response
2025-08-03 12:53:42.646 [http-nio-8081-exec-5] DEBUG [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{35, 32, 72, 69, 76, 80, 32, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 95, 114, 101, 97, 1 (truncated)...]
2025-08-03 12:53:42.648 [http-nio-8081-exec-5] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:53:42.729 [http-nio-8081-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 12:53:42.730 [http-nio-8081-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:53:42.730 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:53:42.730 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 6136CDE40338AB190B37C0D86771E96D
2025-08-03 12:53:42.731 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 12:53:42.733 [http-nio-8081-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 12:53:42.734 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:53:42.735 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 12:53:43.187 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:53:43.188 [http-nio-8080-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:53:43.188 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:53:43.189 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:53:43.189 [http-nio-8080-exec-4] DEBUG [6aa0fb25b84248df] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:53:43.189 [http-nio-8080-exec-4] DEBUG [6aa0fb25b84248df] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:53:43.190 [http-nio-8080-exec-4] DEBUG [6aa0fb25b84248df] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:53:43.190 [http-nio-8080-exec-4] DEBUG [6aa0fb25b84248df] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:53:43.191 [http-nio-8080-exec-4] DEBUG [6aa0fb25b84248df] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:53:48.189 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:53:48.191 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:53:48.191 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:53:48.192 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:53:48.192 [http-nio-8080-exec-5] DEBUG [f74533a058cd44a2] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:53:48.192 [http-nio-8080-exec-5] DEBUG [f74533a058cd44a2] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:53:48.193 [http-nio-8080-exec-5] DEBUG [f74533a058cd44a2] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:53:48.193 [http-nio-8080-exec-5] DEBUG [f74533a058cd44a2] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:53:48.193 [http-nio-8080-exec-5] DEBUG [f74533a058cd44a2] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:53:53.177 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:53:53.177 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:53:53.178 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:53:53.178 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:53:53.178 [http-nio-8080-exec-7] DEBUG [8e6489e89f614dfe] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:53:53.178 [http-nio-8080-exec-7] DEBUG [8e6489e89f614dfe] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:53:53.180 [http-nio-8080-exec-7] DEBUG [8e6489e89f614dfe] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:53:53.180 [http-nio-8080-exec-7] DEBUG [8e6489e89f614dfe] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:53:53.181 [http-nio-8080-exec-7] DEBUG [8e6489e89f614dfe] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:53:58.185 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:53:58.186 [http-nio-8080-exec-8] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:53:58.186 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:53:58.187 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:53:58.187 [http-nio-8080-exec-8] DEBUG [f46f3b0373ab4758] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:53:58.187 [http-nio-8080-exec-8] DEBUG [f46f3b0373ab4758] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:53:58.188 [http-nio-8080-exec-8] DEBUG [f46f3b0373ab4758] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:53:58.188 [http-nio-8080-exec-8] DEBUG [f46f3b0373ab4758] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:53:58.189 [http-nio-8080-exec-8] DEBUG [f46f3b0373ab4758] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:54:03.188 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:54:03.188 [http-nio-8080-exec-10] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:54:03.188 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:54:03.189 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:54:03.189 [http-nio-8080-exec-10] DEBUG [e7465b407c544232] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:54:03.189 [http-nio-8080-exec-10] DEBUG [e7465b407c544232] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:54:03.190 [http-nio-8080-exec-10] DEBUG [e7465b407c544232] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:54:03.191 [http-nio-8080-exec-10] DEBUG [e7465b407c544232] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:54:03.191 [http-nio-8080-exec-10] DEBUG [e7465b407c544232] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:54:08.189 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:54:08.193 [http-nio-8080-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:54:08.194 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:54:08.198 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:54:08.225 [http-nio-8080-exec-3] DEBUG [1b9510f087d04d44] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:54:08.226 [http-nio-8080-exec-3] DEBUG [1b9510f087d04d44] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:54:08.227 [http-nio-8080-exec-3] DEBUG [1b9510f087d04d44] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:54:08.228 [http-nio-8080-exec-3] DEBUG [1b9510f087d04d44] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:54:08.229 [http-nio-8080-exec-3] DEBUG [1b9510f087d04d44] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:54:13.186 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:54:13.188 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:54:13.188 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:54:13.189 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:54:13.189 [http-nio-8080-exec-1] DEBUG [d12bbc17bb83478b] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:54:13.189 [http-nio-8080-exec-1] DEBUG [d12bbc17bb83478b] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:54:13.190 [http-nio-8080-exec-1] DEBUG [d12bbc17bb83478b] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:54:13.190 [http-nio-8080-exec-1] DEBUG [d12bbc17bb83478b] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:54:13.191 [http-nio-8080-exec-1] DEBUG [d12bbc17bb83478b] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:54:18.196 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:54:18.198 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:54:18.199 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:54:18.201 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:54:18.202 [http-nio-8080-exec-2] DEBUG [a3054818b3124706] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:54:18.204 [http-nio-8080-exec-2] DEBUG [a3054818b3124706] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:54:18.208 [http-nio-8080-exec-2] DEBUG [a3054818b3124706] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:54:18.209 [http-nio-8080-exec-2] DEBUG [a3054818b3124706] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:54:18.211 [http-nio-8080-exec-2] DEBUG [a3054818b3124706] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:54:23.234 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:54:23.234 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:54:23.234 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:54:23.235 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:54:23.235 [http-nio-8080-exec-5] DEBUG [7e357e83f23f4cff] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:54:23.235 [http-nio-8080-exec-5] DEBUG [7e357e83f23f4cff] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:54:23.255 [http-nio-8080-exec-5] DEBUG [7e357e83f23f4cff] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:54:23.255 [http-nio-8080-exec-5] DEBUG [7e357e83f23f4cff] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:54:23.256 [http-nio-8080-exec-5] DEBUG [7e357e83f23f4cff] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:54:28.188 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:54:28.190 [http-nio-8080-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:54:28.190 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:54:28.190 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:54:28.191 [http-nio-8080-exec-6] DEBUG [df338b2b2f0c4408] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:54:28.191 [http-nio-8080-exec-6] DEBUG [df338b2b2f0c4408] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:54:28.194 [http-nio-8080-exec-6] DEBUG [df338b2b2f0c4408] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:54:28.195 [http-nio-8080-exec-6] DEBUG [df338b2b2f0c4408] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:54:28.196 [http-nio-8080-exec-6] DEBUG [df338b2b2f0c4408] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:54:33.180 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:54:33.183 [http-nio-8080-exec-8] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:54:33.183 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:54:33.184 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:54:33.184 [http-nio-8080-exec-8] DEBUG [be118dd494164894] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:54:33.184 [http-nio-8080-exec-8] DEBUG [be118dd494164894] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:54:33.185 [http-nio-8080-exec-8] DEBUG [be118dd494164894] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:54:33.185 [http-nio-8080-exec-8] DEBUG [be118dd494164894] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:54:33.186 [http-nio-8080-exec-8] DEBUG [be118dd494164894] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:54:38.181 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:54:38.182 [http-nio-8080-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:54:38.182 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:54:38.182 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:54:38.183 [http-nio-8080-exec-9] DEBUG [badc844d2ef34bdd] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:54:38.183 [http-nio-8080-exec-9] DEBUG [badc844d2ef34bdd] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:54:38.196 [http-nio-8080-exec-9] DEBUG [badc844d2ef34bdd] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:54:38.197 [http-nio-8080-exec-9] DEBUG [badc844d2ef34bdd] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:54:38.197 [http-nio-8080-exec-9] DEBUG [badc844d2ef34bdd] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:54:43.186 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:54:43.187 [http-nio-8080-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:54:43.187 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:54:43.188 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:54:43.188 [http-nio-8080-exec-3] DEBUG [5d935663af2748b0] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:54:43.188 [http-nio-8080-exec-3] DEBUG [5d935663af2748b0] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:54:43.190 [http-nio-8080-exec-3] DEBUG [5d935663af2748b0] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:54:43.190 [http-nio-8080-exec-3] DEBUG [5d935663af2748b0] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:54:43.190 [http-nio-8080-exec-3] DEBUG [5d935663af2748b0] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:54:48.184 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:54:48.184 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:54:48.184 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:54:48.185 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:54:48.185 [http-nio-8080-exec-1] DEBUG [7b5b2da273f44caa] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:54:48.185 [http-nio-8080-exec-1] DEBUG [7b5b2da273f44caa] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:54:48.186 [http-nio-8080-exec-1] DEBUG [7b5b2da273f44caa] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:54:48.186 [http-nio-8080-exec-1] DEBUG [7b5b2da273f44caa] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:54:48.187 [http-nio-8080-exec-1] DEBUG [7b5b2da273f44caa] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:54:53.187 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:54:53.189 [http-nio-8080-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:54:53.189 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:54:53.189 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:54:53.190 [http-nio-8080-exec-4] DEBUG [5cc39fdb29fb4f09] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:54:53.190 [http-nio-8080-exec-4] DEBUG [5cc39fdb29fb4f09] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:54:53.190 [http-nio-8080-exec-4] DEBUG [5cc39fdb29fb4f09] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:54:53.191 [http-nio-8080-exec-4] DEBUG [5cc39fdb29fb4f09] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:54:53.191 [http-nio-8080-exec-4] DEBUG [5cc39fdb29fb4f09] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:54:58.184 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:54:58.185 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:54:58.186 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:54:58.188 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:54:58.188 [http-nio-8080-exec-5] DEBUG [3406037f747e4249] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:54:58.189 [http-nio-8080-exec-5] DEBUG [3406037f747e4249] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:54:58.195 [http-nio-8080-exec-5] DEBUG [3406037f747e4249] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:54:58.197 [http-nio-8080-exec-5] DEBUG [3406037f747e4249] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:54:58.199 [http-nio-8080-exec-5] DEBUG [3406037f747e4249] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:55:03.192 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:55:03.194 [http-nio-8080-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:55:03.195 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:55:03.198 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:55:03.199 [http-nio-8080-exec-6] DEBUG [9182255b9a324103] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:55:03.199 [http-nio-8080-exec-6] DEBUG [9182255b9a324103] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:55:03.203 [http-nio-8080-exec-6] DEBUG [9182255b9a324103] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:55:03.204 [http-nio-8080-exec-6] DEBUG [9182255b9a324103] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:55:03.206 [http-nio-8080-exec-6] DEBUG [9182255b9a324103] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:55:08.187 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:55:08.188 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:55:08.189 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:55:08.191 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:55:08.192 [http-nio-8080-exec-7] DEBUG [75c94cd22d3a4b44] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:55:08.193 [http-nio-8080-exec-7] DEBUG [75c94cd22d3a4b44] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:55:08.197 [http-nio-8080-exec-7] DEBUG [75c94cd22d3a4b44] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:55:08.197 [http-nio-8080-exec-7] DEBUG [75c94cd22d3a4b44] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:55:08.200 [http-nio-8080-exec-7] DEBUG [75c94cd22d3a4b44] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:55:13.184 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:55:13.185 [http-nio-8080-exec-8] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:55:13.185 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:55:13.186 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:55:13.186 [http-nio-8080-exec-8] DEBUG [4b2457c110614c08] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:55:13.186 [http-nio-8080-exec-8] DEBUG [4b2457c110614c08] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:55:13.188 [http-nio-8080-exec-8] DEBUG [4b2457c110614c08] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:55:13.188 [http-nio-8080-exec-8] DEBUG [4b2457c110614c08] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:55:13.189 [http-nio-8080-exec-8] DEBUG [4b2457c110614c08] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:55:44.191 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:55:44.192 [http-nio-8080-exec-10] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:55:44.194 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:55:44.195 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:55:44.197 [http-nio-8080-exec-10] DEBUG [df57c6c160964158] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:55:44.197 [http-nio-8080-exec-10] DEBUG [df57c6c160964158] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:55:44.215 [http-nio-8080-exec-10] DEBUG [df57c6c160964158] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:55:44.216 [http-nio-8080-exec-10] DEBUG [df57c6c160964158] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:55:44.220 [http-nio-8080-exec-10] DEBUG [df57c6c160964158] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:56:44.190 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:56:44.196 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:56:44.197 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:56:44.201 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:56:44.202 [http-nio-8080-exec-1] DEBUG [79e8bc904e7c451a] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:56:44.202 [http-nio-8080-exec-1] DEBUG [79e8bc904e7c451a] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:56:44.209 [http-nio-8080-exec-1] DEBUG [79e8bc904e7c451a] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:56:44.209 [http-nio-8080-exec-1] DEBUG [79e8bc904e7c451a] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:56:44.213 [http-nio-8080-exec-1] DEBUG [79e8bc904e7c451a] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:57:44.194 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:57:44.197 [http-nio-8080-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:57:44.198 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:57:44.201 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:57:44.203 [http-nio-8080-exec-4] DEBUG [d700fcc8a09e45c9] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:57:44.204 [http-nio-8080-exec-4] DEBUG [d700fcc8a09e45c9] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:57:44.210 [http-nio-8080-exec-4] DEBUG [d700fcc8a09e45c9] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:57:44.210 [http-nio-8080-exec-4] DEBUG [d700fcc8a09e45c9] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:57:44.213 [http-nio-8080-exec-4] DEBUG [d700fcc8a09e45c9] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:58:44.219 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:58:44.221 [http-nio-8080-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:58:44.221 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:58:44.222 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:58:44.222 [http-nio-8080-exec-6] DEBUG [b6e80559d0bf4dba] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:58:44.222 [http-nio-8080-exec-6] DEBUG [b6e80559d0bf4dba] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:58:44.225 [http-nio-8080-exec-6] DEBUG [b6e80559d0bf4dba] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:58:44.226 [http-nio-8080-exec-6] DEBUG [b6e80559d0bf4dba] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:58:44.228 [http-nio-8080-exec-6] DEBUG [b6e80559d0bf4dba] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 12:59:44.183 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 12:59:44.185 [http-nio-8080-exec-8] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 12:59:44.189 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 12:59:44.190 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 12:59:44.190 [http-nio-8080-exec-8] DEBUG [01a25618f2674c47] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 12:59:44.192 [http-nio-8080-exec-8] DEBUG [01a25618f2674c47] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 12:59:44.194 [http-nio-8080-exec-8] DEBUG [01a25618f2674c47] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 12:59:44.197 [http-nio-8080-exec-8] DEBUG [01a25618f2674c47] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 12:59:44.198 [http-nio-8080-exec-8] DEBUG [01a25618f2674c47] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:00:44.203 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:00:44.225 [http-nio-8080-exec-10] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:00:44.226 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:00:44.235 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:00:44.236 [http-nio-8080-exec-10] DEBUG [bd3f5b63047c4080] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:00:44.237 [http-nio-8080-exec-10] DEBUG [bd3f5b63047c4080] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:00:44.241 [http-nio-8080-exec-10] DEBUG [bd3f5b63047c4080] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:00:44.242 [http-nio-8080-exec-10] DEBUG [bd3f5b63047c4080] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:00:44.244 [http-nio-8080-exec-10] DEBUG [bd3f5b63047c4080] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:01:01.028 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:01:01.030 [http-nio-8080-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:01:01.031 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:01:01.032 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:01:01.032 [http-nio-8080-exec-3] DEBUG [2b0a5c79068845fd] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:01:01.033 [http-nio-8080-exec-3] DEBUG [2b0a5c79068845fd] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:01:01.036 [http-nio-8080-exec-3] DEBUG [2b0a5c79068845fd] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:01:01.038 [http-nio-8080-exec-3] DEBUG [2b0a5c79068845fd] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:01:01.041 [http-nio-8080-exec-3] DEBUG [2b0a5c79068845fd] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:01:02.331 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:01:02.331 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:01:02.331 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:01:02.332 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:01:02.333 [http-nio-8080-exec-1] DEBUG [13ced0fe0d4d4e5e] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:01:02.334 [http-nio-8080-exec-1] DEBUG [13ced0fe0d4d4e5e] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:01:02.335 [http-nio-8080-exec-1] DEBUG [13ced0fe0d4d4e5e] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:01:02.336 [http-nio-8080-exec-1] DEBUG [13ced0fe0d4d4e5e] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:01:02.337 [http-nio-8080-exec-1] DEBUG [13ced0fe0d4d4e5e] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:01:07.326 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:01:07.327 [http-nio-8080-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:01:07.327 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:01:07.329 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:01:07.329 [http-nio-8080-exec-4] DEBUG [dfc19818258d4789] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:01:07.329 [http-nio-8080-exec-4] DEBUG [dfc19818258d4789] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:01:07.331 [http-nio-8080-exec-4] DEBUG [dfc19818258d4789] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:01:07.331 [http-nio-8080-exec-4] DEBUG [dfc19818258d4789] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:01:07.332 [http-nio-8080-exec-4] DEBUG [dfc19818258d4789] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:01:13.189 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:01:13.190 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:01:13.190 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:01:13.191 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:01:13.191 [http-nio-8080-exec-5] DEBUG [327f28574791439d] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:01:13.191 [http-nio-8080-exec-5] DEBUG [327f28574791439d] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:01:13.193 [http-nio-8080-exec-5] DEBUG [327f28574791439d] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:01:13.193 [http-nio-8080-exec-5] DEBUG [327f28574791439d] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:01:13.194 [http-nio-8080-exec-5] DEBUG [327f28574791439d] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:01:18.183 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:01:18.183 [http-nio-8080-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:01:18.183 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:01:18.184 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:01:18.184 [http-nio-8080-exec-6] DEBUG [f6b991eb43794799] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:01:18.184 [http-nio-8080-exec-6] DEBUG [f6b991eb43794799] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:01:18.185 [http-nio-8080-exec-6] DEBUG [f6b991eb43794799] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:01:18.185 [http-nio-8080-exec-6] DEBUG [f6b991eb43794799] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:01:18.186 [http-nio-8080-exec-6] DEBUG [f6b991eb43794799] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:01:23.179 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:01:23.181 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:01:23.181 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:01:23.211 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:01:23.212 [http-nio-8080-exec-7] DEBUG [ffa7736513124486] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:01:23.212 [http-nio-8080-exec-7] DEBUG [ffa7736513124486] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:01:23.213 [http-nio-8080-exec-7] DEBUG [ffa7736513124486] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:01:23.213 [http-nio-8080-exec-7] DEBUG [ffa7736513124486] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:01:23.214 [http-nio-8080-exec-7] DEBUG [ffa7736513124486] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:01:28.185 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:01:28.186 [http-nio-8080-exec-8] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:01:28.186 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:01:28.187 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:01:28.187 [http-nio-8080-exec-8] DEBUG [65534f68bd7c432c] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:01:28.187 [http-nio-8080-exec-8] DEBUG [65534f68bd7c432c] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:01:28.188 [http-nio-8080-exec-8] DEBUG [65534f68bd7c432c] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:01:28.189 [http-nio-8080-exec-8] DEBUG [65534f68bd7c432c] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:01:28.189 [http-nio-8080-exec-8] DEBUG [65534f68bd7c432c] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:01:33.191 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:01:33.192 [http-nio-8080-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:01:33.192 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:01:33.193 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:01:33.193 [http-nio-8080-exec-9] DEBUG [2f73a351ee464026] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:01:33.194 [http-nio-8080-exec-9] DEBUG [2f73a351ee464026] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:01:33.196 [http-nio-8080-exec-9] DEBUG [2f73a351ee464026] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:01:33.196 [http-nio-8080-exec-9] DEBUG [2f73a351ee464026] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:01:33.197 [http-nio-8080-exec-9] DEBUG [2f73a351ee464026] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:01:38.184 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:01:38.185 [http-nio-8080-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:01:38.185 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:01:38.186 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:01:38.186 [http-nio-8080-exec-3] DEBUG [b2898f17f81d4dc0] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:01:38.186 [http-nio-8080-exec-3] DEBUG [b2898f17f81d4dc0] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:01:38.187 [http-nio-8080-exec-3] DEBUG [b2898f17f81d4dc0] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:01:38.187 [http-nio-8080-exec-3] DEBUG [b2898f17f81d4dc0] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:01:38.188 [http-nio-8080-exec-3] DEBUG [b2898f17f81d4dc0] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:01:43.187 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:01:43.189 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:01:43.189 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:01:43.227 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:01:43.227 [http-nio-8080-exec-1] DEBUG [4088d97d859a4211] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:01:43.228 [http-nio-8080-exec-1] DEBUG [4088d97d859a4211] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:01:43.228 [http-nio-8080-exec-1] DEBUG [4088d97d859a4211] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:01:43.229 [http-nio-8080-exec-1] DEBUG [4088d97d859a4211] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:01:43.230 [http-nio-8080-exec-1] DEBUG [4088d97d859a4211] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:01:48.181 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:01:48.181 [http-nio-8080-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:01:48.182 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:01:48.182 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:01:48.182 [http-nio-8080-exec-4] DEBUG [1fcd0f6cf2e8453f] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:01:48.182 [http-nio-8080-exec-4] DEBUG [1fcd0f6cf2e8453f] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:01:48.183 [http-nio-8080-exec-4] DEBUG [1fcd0f6cf2e8453f] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:01:48.209 [http-nio-8080-exec-4] DEBUG [1fcd0f6cf2e8453f] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:01:48.210 [http-nio-8080-exec-4] DEBUG [1fcd0f6cf2e8453f] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:01:53.197 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:01:53.199 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:01:53.199 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:01:53.200 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:01:53.200 [http-nio-8080-exec-5] DEBUG [c10d43e899df41cc] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:01:53.200 [http-nio-8080-exec-5] DEBUG [c10d43e899df41cc] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:01:53.202 [http-nio-8080-exec-5] DEBUG [c10d43e899df41cc] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:01:53.202 [http-nio-8080-exec-5] DEBUG [c10d43e899df41cc] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:01:53.202 [http-nio-8080-exec-5] DEBUG [c10d43e899df41cc] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:01:58.191 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:01:58.192 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:01:58.192 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:01:58.193 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:01:58.193 [http-nio-8080-exec-7] DEBUG [c8130df0b3dd403b] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:01:58.193 [http-nio-8080-exec-7] DEBUG [c8130df0b3dd403b] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:01:58.195 [http-nio-8080-exec-7] DEBUG [c8130df0b3dd403b] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:01:58.195 [http-nio-8080-exec-7] DEBUG [c8130df0b3dd403b] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:01:58.196 [http-nio-8080-exec-7] DEBUG [c8130df0b3dd403b] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:02:02.322 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:02:02.323 [http-nio-8080-exec-8] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:02.323 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:02.323 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:02:02.323 [http-nio-8080-exec-8] DEBUG [27d86e9869994977] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:02:02.324 [http-nio-8080-exec-8] DEBUG [27d86e9869994977] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:02:02.326 [http-nio-8080-exec-8] DEBUG [27d86e9869994977] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:02:02.326 [http-nio-8080-exec-8] DEBUG [27d86e9869994977] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:02:02.327 [http-nio-8080-exec-8] DEBUG [27d86e9869994977] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:02:08.189 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:02:08.189 [http-nio-8080-exec-10] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:08.189 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:08.190 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:02:08.190 [http-nio-8080-exec-10] DEBUG [ca60175dea8c4c24] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:02:08.190 [http-nio-8080-exec-10] DEBUG [ca60175dea8c4c24] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:02:08.191 [http-nio-8080-exec-10] DEBUG [ca60175dea8c4c24] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:02:08.191 [http-nio-8080-exec-10] DEBUG [ca60175dea8c4c24] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:02:08.192 [http-nio-8080-exec-10] DEBUG [ca60175dea8c4c24] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:02:13.188 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:02:13.189 [http-nio-8080-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:13.190 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:13.191 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:02:13.192 [http-nio-8080-exec-3] DEBUG [77be42fe70b44b8c] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:02:13.192 [http-nio-8080-exec-3] DEBUG [77be42fe70b44b8c] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:02:13.197 [http-nio-8080-exec-3] DEBUG [77be42fe70b44b8c] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:02:13.197 [http-nio-8080-exec-3] DEBUG [77be42fe70b44b8c] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:02:13.199 [http-nio-8080-exec-3] DEBUG [77be42fe70b44b8c] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:02:15.097 [http-nio-8081-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/loggers
2025-08-03 13:02:15.097 [http-nio-8081-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:15.097 [http-nio-8081-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:15.097 [http-nio-8081-exec-9] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 6136CDE40338AB190B37C0D86771E96D
2025-08-03 13:02:15.098 [http-nio-8081-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/loggers
2025-08-03 13:02:15.098 [http-nio-8081-exec-9] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/loggers", parameters={}
2025-08-03 13:02:15.100 [http-nio-8081-exec-9] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 13:02:15.173 [http-nio-8081-exec-9] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 13:02:15.219 [http-nio-8081-exec-9] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [org.springframework.boot.actuate.logging.LoggersEndpoint$LoggersDescriptor@66e7dae]
2025-08-03 13:02:15.249 [http-nio-8081-exec-9] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:02:15.340 [http-nio-8081-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 13:02:15.341 [http-nio-8081-exec-10] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:15.341 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:15.341 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 6136CDE40338AB190B37C0D86771E96D
2025-08-03 13:02:15.343 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 13:02:15.346 [http-nio-8081-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 13:02:15.348 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:15.349 [http-nio-8081-exec-10] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 13:02:18.188 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:02:18.188 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:18.188 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:18.189 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:02:18.189 [http-nio-8080-exec-2] DEBUG [469da847d69c43eb] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:02:18.189 [http-nio-8080-exec-2] DEBUG [469da847d69c43eb] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:02:18.190 [http-nio-8080-exec-2] DEBUG [469da847d69c43eb] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:02:18.190 [http-nio-8080-exec-2] DEBUG [469da847d69c43eb] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:02:18.191 [http-nio-8080-exec-2] DEBUG [469da847d69c43eb] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:02:23.207 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:02:23.208 [http-nio-8080-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:23.209 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:23.209 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:02:23.210 [http-nio-8080-exec-4] DEBUG [2083f99eb78045bb] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:02:23.210 [http-nio-8080-exec-4] DEBUG [2083f99eb78045bb] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:02:23.211 [http-nio-8080-exec-4] DEBUG [2083f99eb78045bb] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:02:23.211 [http-nio-8080-exec-4] DEBUG [2083f99eb78045bb] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:02:23.212 [http-nio-8080-exec-4] DEBUG [2083f99eb78045bb] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:02:23.999 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/env
2025-08-03 13:02:24.000 [http-nio-8081-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:24.000 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:24.000 [http-nio-8081-exec-1] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 6136CDE40338AB190B37C0D86771E96D
2025-08-03 13:02:24.000 [http-nio-8081-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/env
2025-08-03 13:02:24.000 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/env", parameters={}
2025-08-03 13:02:24.001 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 13:02:24.021 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 13:02:24.023 [http-nio-8081-exec-1] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [org.springframework.boot.actuate.env.EnvironmentEndpoint$EnvironmentDescriptor@3cb6c152]
2025-08-03 13:02:24.030 [http-nio-8081-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:02:24.062 [http-nio-8081-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 13:02:24.063 [http-nio-8081-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:24.063 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:24.063 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 6136CDE40338AB190B37C0D86771E96D
2025-08-03 13:02:24.064 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 13:02:24.065 [http-nio-8081-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 13:02:24.066 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:24.066 [http-nio-8081-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 13:02:28.188 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:02:28.189 [http-nio-8080-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:28.189 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:28.189 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:02:28.190 [http-nio-8080-exec-6] DEBUG [92deeb4ad9094660] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:02:28.190 [http-nio-8080-exec-6] DEBUG [92deeb4ad9094660] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:02:28.191 [http-nio-8080-exec-6] DEBUG [92deeb4ad9094660] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:02:28.191 [http-nio-8080-exec-6] DEBUG [92deeb4ad9094660] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:02:28.192 [http-nio-8080-exec-6] DEBUG [92deeb4ad9094660] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:02:33.179 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:02:33.180 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:33.180 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:33.180 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:02:33.180 [http-nio-8080-exec-7] DEBUG [caddeefefd564543] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:02:33.180 [http-nio-8080-exec-7] DEBUG [caddeefefd564543] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:02:33.181 [http-nio-8080-exec-7] DEBUG [caddeefefd564543] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:02:33.181 [http-nio-8080-exec-7] DEBUG [caddeefefd564543] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:02:33.182 [http-nio-8080-exec-7] DEBUG [caddeefefd564543] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:02:38.190 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:02:38.190 [http-nio-8080-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:38.190 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:38.190 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:02:38.190 [http-nio-8080-exec-9] DEBUG [314b1468f98b43c9] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:02:38.191 [http-nio-8080-exec-9] DEBUG [314b1468f98b43c9] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:02:38.191 [http-nio-8080-exec-9] DEBUG [314b1468f98b43c9] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:02:38.191 [http-nio-8080-exec-9] DEBUG [314b1468f98b43c9] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:02:38.193 [http-nio-8080-exec-9] DEBUG [314b1468f98b43c9] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:02:43.182 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:02:43.183 [http-nio-8080-exec-10] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:43.183 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:43.183 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:02:43.184 [http-nio-8080-exec-10] DEBUG [757c7f604197495f] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:02:43.184 [http-nio-8080-exec-10] DEBUG [757c7f604197495f] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:02:43.185 [http-nio-8080-exec-10] DEBUG [757c7f604197495f] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:02:43.185 [http-nio-8080-exec-10] DEBUG [757c7f604197495f] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:02:43.186 [http-nio-8080-exec-10] DEBUG [757c7f604197495f] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:02:48.183 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:02:48.185 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:48.185 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:48.187 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:02:48.188 [http-nio-8080-exec-1] DEBUG [d46d75aae1d54487] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:02:48.188 [http-nio-8080-exec-1] DEBUG [d46d75aae1d54487] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:02:48.191 [http-nio-8080-exec-1] DEBUG [d46d75aae1d54487] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:02:48.192 [http-nio-8080-exec-1] DEBUG [d46d75aae1d54487] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:02:48.194 [http-nio-8080-exec-1] DEBUG [d46d75aae1d54487] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:02:53.186 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:02:53.188 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:53.188 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:53.190 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:02:53.191 [http-nio-8080-exec-2] DEBUG [8ac89bc1e41345b5] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:02:53.191 [http-nio-8080-exec-2] DEBUG [8ac89bc1e41345b5] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:02:53.195 [http-nio-8080-exec-2] DEBUG [8ac89bc1e41345b5] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:02:53.196 [http-nio-8080-exec-2] DEBUG [8ac89bc1e41345b5] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:02:53.198 [http-nio-8080-exec-2] DEBUG [8ac89bc1e41345b5] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:02:58.185 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:02:58.186 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:02:58.186 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:02:58.188 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:02:58.189 [http-nio-8080-exec-5] DEBUG [d53c5f80c33c49c8] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:02:58.189 [http-nio-8080-exec-5] DEBUG [d53c5f80c33c49c8] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:02:58.193 [http-nio-8080-exec-5] DEBUG [d53c5f80c33c49c8] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:02:58.194 [http-nio-8080-exec-5] DEBUG [d53c5f80c33c49c8] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:02:58.196 [http-nio-8080-exec-5] DEBUG [d53c5f80c33c49c8] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:03:03.175 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:03:03.176 [http-nio-8080-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:03:03.176 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:03:03.176 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:03:03.176 [http-nio-8080-exec-6] DEBUG [f07cf1a2990946d7] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:03:03.176 [http-nio-8080-exec-6] DEBUG [f07cf1a2990946d7] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:03:03.177 [http-nio-8080-exec-6] DEBUG [f07cf1a2990946d7] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:03:03.177 [http-nio-8080-exec-6] DEBUG [f07cf1a2990946d7] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:03:03.178 [http-nio-8080-exec-6] DEBUG [f07cf1a2990946d7] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:03:44.191 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:03:44.192 [http-nio-8080-exec-8] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:03:44.193 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:03:44.196 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:03:44.197 [http-nio-8080-exec-8] DEBUG [9aedfc814e4640b3] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:03:44.197 [http-nio-8080-exec-8] DEBUG [9aedfc814e4640b3] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:03:44.202 [http-nio-8080-exec-8] DEBUG [9aedfc814e4640b3] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:03:44.202 [http-nio-8080-exec-8] DEBUG [9aedfc814e4640b3] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:03:44.204 [http-nio-8080-exec-8] DEBUG [9aedfc814e4640b3] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:04:34.189 [http-nio-8081-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/info
2025-08-03 13:04:34.190 [http-nio-8081-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:04:34.191 [http-nio-8081-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:04:34.191 [http-nio-8081-exec-5] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 6136CDE40338AB190B37C0D86771E96D
2025-08-03 13:04:34.191 [http-nio-8081-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/info
2025-08-03 13:04:34.191 [http-nio-8081-exec-5] DEBUG [] o.s.web.servlet.DispatcherServlet - GET "/actuator/info", parameters={}
2025-08-03 13:04:34.193 [http-nio-8081-exec-5] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 13:04:34.194 [http-nio-8081-exec-5] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 13:04:34.194 [http-nio-8081-exec-5] DEBUG [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{}]
2025-08-03 13:04:34.196 [http-nio-8081-exec-5] DEBUG [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:04:34.236 [http-nio-8081-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 13:04:34.237 [http-nio-8081-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:04:34.237 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:04:34.237 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 6136CDE40338AB190B37C0D86771E96D
2025-08-03 13:04:34.238 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 13:04:34.239 [http-nio-8081-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 13:04:34.241 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:04:34.242 [http-nio-8081-exec-6] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 13:04:44.184 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:04:44.185 [http-nio-8080-exec-10] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:04:44.186 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:04:44.190 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:04:44.191 [http-nio-8080-exec-10] DEBUG [cea840b8ad914063] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:04:44.191 [http-nio-8080-exec-10] DEBUG [cea840b8ad914063] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:04:44.196 [http-nio-8080-exec-10] DEBUG [cea840b8ad914063] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:04:44.197 [http-nio-8080-exec-10] DEBUG [cea840b8ad914063] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:04:44.199 [http-nio-8080-exec-10] DEBUG [cea840b8ad914063] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:05:44.185 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:05:44.186 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:05:44.187 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:05:44.188 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:05:44.189 [http-nio-8080-exec-1] DEBUG [07ee24e237db4f59] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:05:44.189 [http-nio-8080-exec-1] DEBUG [07ee24e237db4f59] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:05:44.192 [http-nio-8080-exec-1] DEBUG [07ee24e237db4f59] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:05:44.192 [http-nio-8080-exec-1] DEBUG [07ee24e237db4f59] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:05:44.194 [http-nio-8080-exec-1] DEBUG [07ee24e237db4f59] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:06:44.177 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:06:44.178 [http-nio-8080-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:06:44.178 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:06:44.178 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:06:44.178 [http-nio-8080-exec-4] DEBUG [6f40796b80da4ce8] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:06:44.179 [http-nio-8080-exec-4] DEBUG [6f40796b80da4ce8] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:06:44.180 [http-nio-8080-exec-4] DEBUG [6f40796b80da4ce8] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:06:44.181 [http-nio-8080-exec-4] DEBUG [6f40796b80da4ce8] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:06:44.181 [http-nio-8080-exec-4] DEBUG [6f40796b80da4ce8] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:07:44.185 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /dashboard/api/metrics
2025-08-03 13:07:44.186 [http-nio-8080-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:07:44.186 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:07:44.189 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /dashboard/api/metrics
2025-08-03 13:07:44.190 [http-nio-8080-exec-6] DEBUG [a678b250bd1041bb] o.s.web.servlet.DispatcherServlet - GET "/dashboard/api/metrics", parameters={}
2025-08-03 13:07:44.190 [http-nio-8080-exec-6] DEBUG [a678b250bd1041bb] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.DashboardController#getMetricsData()
2025-08-03 13:07:44.192 [http-nio-8080-exec-6] DEBUG [a678b250bd1041bb] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:07:44.193 [http-nio-8080-exec-6] DEBUG [a678b250bd1041bb] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{usuarios_ativos=0.0, tempo_medio_banco=0.0, memoria_max=1.073741824E9, tempo_medio_pedido=0.0, rece (truncated)...]
2025-08-03 13:07:44.194 [http-nio-8080-exec-6] DEBUG [a678b250bd1041bb] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:08:01.331 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 13:08:01.369 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 13:08:01.373 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 13:08:01.380 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 13:08:01.494 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:08:01.510 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:08:01.529 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:08:01.529 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:08:01.530 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:08:01.533 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:08:01.534 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:08:01.558 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 13:08:01.559 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-03 13:08:01.651 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-03 13:09:28.910 [main] INFO  [] c.d.delivery.config.DataBaseTest - Starting DataBaseTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:09:28.926 [main] DEBUG [] c.d.delivery.config.DataBaseTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:09:28.927 [main] INFO  [] c.d.delivery.config.DataBaseTest - The following 1 profile is active: "test"
2025-08-03 13:09:28.957 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@fcd0e8d
2025-08-03 13:09:30.897 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:09:30.987 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 78 ms. Found 5 JPA repository interfaces.
2025-08-03 13:09:32.374 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:09:32.411 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 13:09:32.782 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:09:32.784 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 13:09:32.840 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:09:34.451 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:34.455 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:34.456 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:34.456 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:34.456 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:34.456 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:34.464 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:09:34.474 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:09:34.477 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:09:34.479 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:09:34.480 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:09:34.482 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:09:34.485 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:09:34.502 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:09:34.503 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:09:34.504 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:34.506 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:34.511 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:34.902 [main] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 13:09:36.338 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:09:36.960 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:09:37.122 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:09:37.440 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:09:37.655 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:09:37.737 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:09:38.496 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:09:38.575 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:09:38.576 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:09:38.576 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:09:38.576 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:09:38.578 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-03 13:09:38.694 [main] INFO  [] c.d.delivery.config.DataBaseTest - Started DataBaseTest in 10.807 seconds (process running for 13.296)
2025-08-03 13:09:38.962 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:09:39.038 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:09:39.040 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:09:39.043 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:09:39.444 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.461 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.463 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.464 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.464 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.465 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.477 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.479 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.480 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.481 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.481 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.482 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.498 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.500 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.502 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.503 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.504 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.505 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.517 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.528 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.530 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.531 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.533 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.535 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.536 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.538 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.538 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.539 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.540 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.541 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.541 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.542 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.543 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.544 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.544 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.545 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.546 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.548 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.548 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.549 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.550 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.551 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.555 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:39.557 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:39.559 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:39.560 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.563 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.565 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.566 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.573 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:39.574 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:39.576 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:39.577 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.578 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.579 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.580 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.582 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:39.583 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:39.584 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:39.585 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.587 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.588 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.588 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.590 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:39.591 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:39.593 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:39.594 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.595 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.596 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.596 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.598 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:39.599 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:39.600 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:39.601 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:39.603 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.604 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.605 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.606 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.607 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.648 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:09:39.655 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:09:39.665 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:09:39.672 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:09:39.677 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:09:39.686 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:09:39.693 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:09:39.699 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:09:39.701 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.706 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:09:39.708 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.711 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:09:39.712 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.713 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.714 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.715 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.716 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.719 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:39.724 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:39.726 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:39.727 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.727 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:39.728 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.734 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:09:39.735 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:39.736 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.737 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:39.737 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.738 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:39.739 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:39.743 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:39.763 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:39.765 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:40.267 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@fcd0e8d, started on Sun Aug 03 13:09:28 BRT 2025
2025-08-03 13:09:40.277 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:40.277 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:40.280 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:40.281 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:40.282 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:40.283 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:40.283 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:40.285 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 13:09:40.287 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 13:09:40.305 [main] INFO  [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.deliverytech.delivery.config.SwaggerIntegrationTest]: SwaggerIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-03 13:09:40.307 [main] INFO  [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.deliverytech.delivery.DeliveryApiApplication for test class com.deliverytech.delivery.config.SwaggerIntegrationTest
2025-08-03 13:09:40.321 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:09:40.381 [main] INFO  [] c.d.d.config.SwaggerIntegrationTest - Starting SwaggerIntegrationTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:09:40.381 [main] DEBUG [] c.d.d.config.SwaggerIntegrationTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:09:40.381 [main] INFO  [] c.d.d.config.SwaggerIntegrationTest - The following 1 profile is active: "development"
2025-08-03 13:09:40.972 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:09:41.005 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 30 ms. Found 5 JPA repository interfaces.
2025-08-03 13:09:41.357 [main] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2025-08-03 13:09:41.388 [main] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2025-08-03 13:09:41.390 [main] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 13:09:41.390 [main] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 13:09:41.474 [main] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 13:09:41.475 [main] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1091 ms
2025-08-03 13:09:41.590 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:09:41.592 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-03 13:09:41.597 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 13:09:41.598 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-03 13:09:41.599 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:09:41.699 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:41.699 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:41.700 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:41.700 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:41.700 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:41.700 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:41.701 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:09:41.702 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:09:41.703 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:09:41.704 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:09:41.705 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:09:41.707 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:09:41.708 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:09:41.710 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:09:41.713 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:09:41.715 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:41.716 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:41.718 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:41.798 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:09:41.798 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:09:41.958 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:09:42.049 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:09:42.094 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:09:42.193 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:09:42.255 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:09:42.276 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:09:42.366 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 13:09:42.483 [main] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2025-08-03 13:09:42.526 [main] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 63998 (http) with context path '/'
2025-08-03 13:09:42.636 [main] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2025-08-03 13:09:42.637 [main] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-2"]
2025-08-03 13:09:42.638 [main] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 13:09:42.638 [main] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 13:09:42.681 [main] INFO  [] o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 13:09:42.681 [main] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 151 ms
2025-08-03 13:09:42.703 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 13:09:42.740 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 1 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:09:42.756 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:09:42.774 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:09:42.782 [main] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-2"]
2025-08-03 13:09:42.788 [main] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 64002 (http) with context path '/'
2025-08-03 13:09:42.798 [main] INFO  [] c.d.d.config.SwaggerIntegrationTest - Started SwaggerIntegrationTest in 2.477 seconds (process running for 17.4)
2025-08-03 13:09:42.805 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:09:42.811 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:09:42.814 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:09:42.817 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:09:43.196 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.199 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.200 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.201 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.201 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.202 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.207 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.209 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.211 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.212 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.213 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.214 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.218 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.219 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.221 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.223 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.224 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.226 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.229 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.232 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.233 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.235 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.237 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.239 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.241 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.242 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.243 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.244 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.245 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.246 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.247 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.248 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.249 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.249 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.250 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.251 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.252 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.252 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.253 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.254 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.255 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.255 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.258 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:43.261 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:43.263 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:43.265 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.268 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.270 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.271 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.273 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:43.275 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:43.277 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:43.278 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.280 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.280 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.282 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.284 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:43.285 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:43.287 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:43.288 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.289 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.290 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.291 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.293 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:43.294 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:43.296 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:43.299 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.301 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.303 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.304 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.305 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:43.307 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:43.309 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:43.310 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:43.311 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.313 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.314 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.315 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.316 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:43.319 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:09:43.323 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:09:43.329 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:09:43.333 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:09:43.336 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:09:43.339 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:09:43.344 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:09:43.349 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:09:43.350 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.354 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:09:43.355 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.358 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:09:43.359 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.360 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.361 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.362 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.363 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.366 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:43.369 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:43.370 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:43.371 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.373 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:43.373 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.376 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:09:43.378 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:43.379 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.380 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:43.382 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.383 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:43.384 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:43.387 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:43.425 [main] DEBUG [] o.s.web.client.RestTemplate - HTTP GET http://localhost:63998/api-docs
2025-08-03 13:09:43.433 [main] DEBUG [] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 13:09:43.630 [http-nio-auto-1-exec-1] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 13:09:43.630 [http-nio-auto-1-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 13:09:43.630 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 13:09:43.630 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 13:09:43.630 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 13:09:43.631 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7d9eec48
2025-08-03 13:09:43.632 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@6adc3ac1
2025-08-03 13:09:43.632 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 13:09:43.632 [http-nio-auto-1-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-03 13:09:43.666 [http-nio-auto-1-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api-docs
2025-08-03 13:09:43.682 [http-nio-auto-1-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:09:43.686 [http-nio-auto-1-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:09:43.735 [http-nio-auto-1-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api-docs
2025-08-03 13:09:43.770 [http-nio-auto-1-exec-1] DEBUG [ca920940b99f47d3] o.s.web.servlet.DispatcherServlet - GET "/api-docs", parameters={}
2025-08-03 13:09:43.774 [http-nio-auto-1-exec-1] DEBUG [ca920940b99f47d3] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
2025-08-03 13:09:46.567 [http-nio-auto-1-exec-1] INFO  [ca920940b99f47d3] o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 2743 ms
2025-08-03 13:09:46.614 [http-nio-auto-1-exec-1] DEBUG [ca920940b99f47d3] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [text/plain, application/json, application/yaml, application/*+json, */*] and supported [application/json]
2025-08-03 13:09:46.623 [http-nio-auto-1-exec-1] DEBUG [ca920940b99f47d3] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 49, 46, 48, 34, 44, 34, 105, 110, 10 (truncated)...]
2025-08-03 13:09:46.631 [http-nio-auto-1-exec-1] DEBUG [ca920940b99f47d3] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:09:46.662 [main] DEBUG [] o.s.web.client.RestTemplate - Response 200 OK
2025-08-03 13:09:46.663 [main] DEBUG [] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json"
2025-08-03 13:09:46.694 [main] DEBUG [] o.s.web.client.RestTemplate - HTTP GET http://localhost:63998/api-docs
2025-08-03 13:09:46.694 [main] DEBUG [] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 13:09:46.699 [http-nio-auto-1-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api-docs
2025-08-03 13:09:46.699 [http-nio-auto-1-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:09:46.700 [http-nio-auto-1-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:09:46.701 [http-nio-auto-1-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api-docs
2025-08-03 13:09:46.701 [http-nio-auto-1-exec-2] DEBUG [40c359d9945c48a2] o.s.web.servlet.DispatcherServlet - GET "/api-docs", parameters={}
2025-08-03 13:09:46.701 [http-nio-auto-1-exec-2] DEBUG [40c359d9945c48a2] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
2025-08-03 13:09:46.714 [http-nio-auto-1-exec-2] DEBUG [40c359d9945c48a2] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [text/plain, application/json, application/yaml, application/*+json, */*] and supported [application/json]
2025-08-03 13:09:46.721 [http-nio-auto-1-exec-2] DEBUG [40c359d9945c48a2] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 49, 46, 48, 34, 44, 34, 105, 110, 10 (truncated)...]
2025-08-03 13:09:46.722 [http-nio-auto-1-exec-2] DEBUG [40c359d9945c48a2] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:09:46.722 [main] DEBUG [] o.s.web.client.RestTemplate - Response 200 OK
2025-08-03 13:09:46.722 [main] DEBUG [] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json"
2025-08-03 13:09:46.737 [main] DEBUG [] o.s.web.client.RestTemplate - HTTP GET http://localhost:63998/swagger-ui.html
2025-08-03 13:09:46.738 [main] DEBUG [] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 13:09:46.741 [http-nio-auto-1-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui.html
2025-08-03 13:09:46.741 [http-nio-auto-1-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:09:46.742 [http-nio-auto-1-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:09:46.743 [http-nio-auto-1-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui.html
2025-08-03 13:09:46.743 [http-nio-auto-1-exec-3] DEBUG [ddf2589b62874607] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui.html", parameters={}
2025-08-03 13:09:46.743 [http-nio-auto-1-exec-3] DEBUG [ddf2589b62874607] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.ui.SwaggerWelcomeWebMvc#redirectToUi(HttpServletRequest)
2025-08-03 13:09:46.747 [http-nio-auto-1-exec-3] DEBUG [ddf2589b62874607] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [text/plain, application/json, application/yaml, application/*+json, */*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:09:46.748 [http-nio-auto-1-exec-3] DEBUG [ddf2589b62874607] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Nothing to write: null body
2025-08-03 13:09:46.748 [http-nio-auto-1-exec-3] DEBUG [ddf2589b62874607] o.s.web.servlet.DispatcherServlet - Completed 302 FOUND
2025-08-03 13:09:46.759 [http-nio-auto-1-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-08-03 13:09:46.760 [http-nio-auto-1-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:09:46.760 [http-nio-auto-1-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:09:46.762 [http-nio-auto-1-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-08-03 13:09:46.762 [http-nio-auto-1-exec-4] DEBUG [a2cbb7b7206b4fc2] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/index.html", parameters={}
2025-08-03 13:09:46.763 [http-nio-auto-1-exec-4] DEBUG [a2cbb7b7206b4fc2] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-08-03 13:09:46.767 [http-nio-auto-1-exec-4] DEBUG [a2cbb7b7206b4fc2] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 13:09:46.768 [main] DEBUG [] o.s.web.client.RestTemplate - Response 200 OK
2025-08-03 13:09:46.768 [main] DEBUG [] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "text/html"
2025-08-03 13:09:46.775 [main] INFO  [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.deliverytech.delivery.controller.ClienteControllerITTest]: ClienteControllerITTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-03 13:09:46.788 [main] INFO  [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.deliverytech.delivery.DeliveryApiApplication for test class com.deliverytech.delivery.controller.ClienteControllerITTest
2025-08-03 13:09:46.792 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:09:46.821 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:09:46.821 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:09:46.821 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-03 13:09:46.824 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@43ead5
2025-08-03 13:09:47.156 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:09:47.176 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 5 JPA repository interfaces.
2025-08-03 13:09:47.289 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:09:47.291 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-08-03 13:09:47.292 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection conn20: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:09:47.292 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-08-03 13:09:47.293 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:09:47.373 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:47.373 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:47.373 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:47.373 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:47.374 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:47.374 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:47.375 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:09:47.377 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:09:47.379 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:09:47.380 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:09:47.382 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:09:47.383 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:09:47.385 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:09:47.386 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:09:47.388 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:09:47.390 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:47.392 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:47.395 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:47.560 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:09:47.679 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:09:47.712 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:09:47.785 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:09:47.828 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:09:47.836 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:09:47.918 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:09:47.933 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:09:47.933 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:09:47.933 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:09:47.933 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:09:47.934 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-03 13:09:47.962 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 1.17 seconds (process running for 22.564)
2025-08-03 13:09:47.966 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:09:47.970 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:09:47.972 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:09:47.974 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:09:48.332 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.333 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.334 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.334 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.335 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.335 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.337 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.339 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.339 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.340 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.340 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.342 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.345 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.346 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.347 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.348 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.349 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.350 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.351 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.353 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.354 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.354 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.355 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.357 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.358 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.359 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.360 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.360 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.361 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.361 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.362 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.362 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.363 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.363 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.364 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.364 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.365 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.365 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.366 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.366 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.368 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.368 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.371 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:48.373 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:48.374 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:48.375 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.377 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.378 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.378 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.380 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:48.381 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:48.381 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:48.382 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.383 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.383 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.384 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.385 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:48.386 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:48.386 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:48.387 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.388 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.389 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.390 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.391 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:48.392 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:48.393 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:48.393 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.395 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.395 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.396 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.397 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:48.398 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:48.399 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:48.400 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:48.401 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.402 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.403 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.404 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.404 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.407 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:09:48.409 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:09:48.413 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:09:48.416 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:09:48.418 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:09:48.421 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:09:48.424 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:09:48.427 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:09:48.428 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.431 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:09:48.432 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.436 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:09:48.437 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.438 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.439 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.439 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.440 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.442 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:48.445 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:48.446 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:48.447 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.447 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:48.448 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.450 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:09:48.451 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:48.452 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.452 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:48.453 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.453 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:48.454 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:48.456 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:48.462 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.464 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:48.476 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:09:48.486 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing DELETE /api/clientes/7
2025-08-03 13:09:48.489 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:09:48.491 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured DELETE /api/clientes/7
2025-08-03 13:09:48.493 [main] DEBUG [e04ac72743ac4ecc] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#deletarCliente(Long)
2025-08-03 13:09:48.495 [main] DEBUG [e04ac72743ac4ecc] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.deletarCliente(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-03 13:09:48.508 [main] DEBUG [e04ac72743ac4ecc] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.deletarCliente(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-03 13:09:48.509 [main] DEBUG [e04ac72743ac4ecc] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:48.520 [main] DEBUG [e04ac72743ac4ecc] org.hibernate.SQL - 
    /* delete for com.deliverytech.delivery.entity.Cliente */delete 
    from
        clientes 
    where
        id=?
2025-08-03 13:09:48.531 [main] DEBUG [e04ac72743ac4ecc] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:09:48.532 [main] DEBUG [e04ac72743ac4ecc] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Nothing to write: null body
2025-08-03 13:09:48.546 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/clientes/7
2025-08-03 13:09:48.546 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:09:48.547 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/clientes/7
2025-08-03 13:09:48.548 [main] DEBUG [ee52e8aa71cd4870] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#buscarPorId(Long)
2025-08-03 13:09:48.548 [main] DEBUG [ee52e8aa71cd4870] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-03 13:09:48.549 [main] DEBUG [ee52e8aa71cd4870] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-03 13:09:48.550 [main] DEBUG [ee52e8aa71cd4870] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:48.555 [main] DEBUG [ee52e8aa71cd4870] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleEntityNotFoundException(EntityNotFoundException, WebRequest)
2025-08-03 13:09:48.559 [main] DEBUG [ee52e8aa71cd4870] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:09:48.559 [main] DEBUG [ee52e8aa71cd4870] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@b838753]
2025-08-03 13:09:48.564 [main] DEBUG [ee52e8aa71cd4870] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.deliverytech.delivery.exceptions.EntityNotFoundException: Cliente não encontrado: 7]
2025-08-03 13:09:48.568 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@43ead5, started on Sun Aug 03 13:09:46 BRT 2025
2025-08-03 13:09:48.571 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:48.571 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:48.572 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:48.573 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:48.573 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:48.574 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:48.575 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:48.576 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2025-08-03 13:09:48.576 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2025-08-03 13:09:48.580 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:09:48.616 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:09:48.617 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:09:48.617 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-03 13:09:48.618 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@70972923
2025-08-03 13:09:48.921 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:09:48.938 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 5 JPA repository interfaces.
2025-08-03 13:09:49.030 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:09:49.031 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
2025-08-03 13:09:49.032 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Added connection conn30: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:09:49.032 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
2025-08-03 13:09:49.033 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:09:49.096 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:49.096 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:49.096 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:49.096 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:49.096 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:49.096 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:49.097 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:09:49.098 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:09:49.099 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:09:49.099 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:09:49.100 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:09:49.101 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:09:49.103 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:09:49.104 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:09:49.105 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:09:49.106 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:49.107 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:49.108 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:49.238 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:09:49.337 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:09:49.373 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:09:49.441 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:09:49.479 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:09:49.486 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:09:49.553 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:09:49.564 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:09:49.564 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:09:49.564 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:09:49.564 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:09:49.565 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-03 13:09:49.579 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 0.999 seconds (process running for 24.181)
2025-08-03 13:09:49.581 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:09:49.585 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:09:49.588 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:09:49.590 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:09:49.945 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.946 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.947 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.947 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.948 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.948 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.950 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.950 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.951 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.951 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.952 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.952 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.954 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.955 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.956 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.956 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.957 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.957 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.959 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:49.960 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:49.961 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:49.962 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:49.963 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:49.964 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:49.965 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.966 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.966 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.967 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.967 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.967 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.968 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.969 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.969 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.970 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.970 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.971 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.971 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.972 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.972 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.973 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.973 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.974 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.975 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:49.977 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:49.978 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:49.979 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:49.980 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.981 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.981 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.982 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:49.983 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:49.984 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:49.984 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:49.985 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.986 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.986 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.987 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:49.988 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:49.989 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:49.990 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:49.990 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.991 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.992 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.992 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:49.994 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:49.995 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:49.995 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:49.996 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.997 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.997 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:49.998 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:49.999 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:50.000 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:50.001 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:50.002 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:50.003 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:50.004 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:50.004 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:50.004 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:50.008 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:09:50.010 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:09:50.013 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:09:50.016 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:09:50.018 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:09:50.020 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:09:50.022 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:09:50.025 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:09:50.026 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:50.028 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:09:50.029 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:50.031 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:09:50.031 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:50.032 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:50.032 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:50.033 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:50.033 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:50.036 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:50.038 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:50.038 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:50.039 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:50.040 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:50.040 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:50.042 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:09:50.043 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:50.043 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:50.043 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:50.044 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:50.044 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:50.045 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:50.047 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:50.051 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:50.053 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:50.060 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/clientes
2025-08-03 13:09:50.061 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:09:50.061 [main] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:09:50.063 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/clientes
2025-08-03 13:09:50.064 [main] DEBUG [2cb6a3a8ccc54884] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#cadastrarCliente(ClienteRequestDTO)
2025-08-03 13:09:50.078 [main] DEBUG [2cb6a3a8ccc54884] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ClienteRequestDTO{email='mariacliente@email.com', nome='Maria Silva', telefone='11888888888', endere (truncated)...]
2025-08-03 13:09:50.138 [main] DEBUG [2cb6a3a8ccc54884] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:09:50.140 [main] DEBUG [2cb6a3a8ccc54884] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.cpf=? 
    fetch
        first ? rows only
2025-08-03 13:09:50.172 [main] DEBUG [2cb6a3a8ccc54884] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:50.177 [main] DEBUG [2cb6a3a8ccc54884] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:09:50.177 [main] DEBUG [2cb6a3a8ccc54884] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@fb988d2]
2025-08-03 13:09:50.235 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@70972923, started on Sun Aug 03 13:09:48 BRT 2025
2025-08-03 13:09:50.242 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:50.242 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:50.243 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:50.243 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:50.244 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:50.244 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:50.244 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:50.245 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown initiated...
2025-08-03 13:09:50.246 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown completed.
2025-08-03 13:09:50.248 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:09:50.275 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:09:50.276 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:09:50.276 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-03 13:09:50.277 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@408ebb0f
2025-08-03 13:09:50.511 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:09:50.527 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2025-08-03 13:09:50.606 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:09:50.607 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Starting...
2025-08-03 13:09:50.608 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-5 - Added connection conn40: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:09:50.608 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Start completed.
2025-08-03 13:09:50.608 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:09:50.664 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:50.665 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:50.665 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:50.665 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:50.665 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:50.665 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:50.677 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:09:50.678 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:09:50.679 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:09:50.680 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:09:50.681 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:09:50.682 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:09:50.683 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:09:50.684 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:09:50.685 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:09:50.686 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:50.687 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:50.689 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:50.841 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:09:50.944 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:09:51.009 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:09:51.076 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:09:51.114 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:09:51.123 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:09:51.195 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:09:51.207 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:09:51.207 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:09:51.207 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:09:51.207 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:09:51.208 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-03 13:09:51.221 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 0.972 seconds (process running for 25.823)
2025-08-03 13:09:51.225 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:09:51.228 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:09:51.230 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:09:51.232 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:09:51.588 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.590 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.590 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.590 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.591 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.592 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.594 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.595 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.595 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.595 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.596 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.596 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.598 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.599 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.600 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.601 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.601 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.602 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.603 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.604 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.605 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.606 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.607 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.608 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.609 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.610 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.610 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.611 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.611 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.612 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.612 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.612 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.613 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.613 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.614 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.614 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.614 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.615 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.615 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.615 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.616 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.616 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.618 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:51.621 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:51.623 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:51.624 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.626 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.627 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.628 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.629 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:51.630 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:51.631 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:51.631 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.632 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.633 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.633 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.634 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:51.635 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:51.636 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:51.637 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.642 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.643 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.644 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.645 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:51.646 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:51.647 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:51.648 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.649 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.649 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.650 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.651 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:51.651 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:51.652 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:51.653 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:51.653 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.654 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.655 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.656 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.656 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.659 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:09:51.661 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:09:51.663 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:09:51.665 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:09:51.667 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:09:51.669 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:09:51.672 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:09:51.675 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:09:51.676 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.678 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:09:51.679 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.682 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:09:51.683 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.684 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.685 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.685 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.685 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.687 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:51.689 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:51.690 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:51.691 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.691 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:51.691 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.693 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:09:51.694 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:51.694 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.695 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:51.695 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.695 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:51.696 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:51.698 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:51.703 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.705 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:51.710 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:09:51.713 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/clientes/1
2025-08-03 13:09:51.715 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:09:51.716 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/clientes/1
2025-08-03 13:09:51.717 [main] DEBUG [243724337bcf4313] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#buscarPorId(Long)
2025-08-03 13:09:51.719 [main] DEBUG [243724337bcf4313] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-03 13:09:51.720 [main] DEBUG [243724337bcf4313] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-03 13:09:51.720 [main] DEBUG [243724337bcf4313] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:51.724 [main] DEBUG [243724337bcf4313] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:09:51.725 [main] DEBUG [243724337bcf4313] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@d4f694a]
2025-08-03 13:09:51.731 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@408ebb0f, started on Sun Aug 03 13:09:50 BRT 2025
2025-08-03 13:09:51.733 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:51.733 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:51.734 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:51.734 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:51.734 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:51.734 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:51.735 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:51.735 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown initiated...
2025-08-03 13:09:51.736 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown completed.
2025-08-03 13:09:51.738 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:09:51.763 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:09:51.763 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:09:51.763 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-03 13:09:51.765 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@77c86e14
2025-08-03 13:09:51.997 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:09:52.012 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
2025-08-03 13:09:52.084 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:09:52.085 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Starting...
2025-08-03 13:09:52.086 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-6 - Added connection conn50: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:09:52.086 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Start completed.
2025-08-03 13:09:52.086 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:09:52.141 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:52.141 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:52.141 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:52.141 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:52.141 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:52.141 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:52.142 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:09:52.142 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:09:52.143 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:09:52.146 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:09:52.147 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:09:52.148 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:09:52.148 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:09:52.149 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:09:52.150 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:09:52.151 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:52.152 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:52.153 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:52.273 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:09:52.362 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:09:52.394 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:09:52.459 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:09:52.497 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:09:52.505 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:09:52.568 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:09:52.579 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:09:52.580 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:09:52.580 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:09:52.580 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:09:52.580 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-08-03 13:09:52.594 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 0.856 seconds (process running for 27.197)
2025-08-03 13:09:52.596 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:09:52.599 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:09:52.602 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:09:52.604 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:09:52.963 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.964 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.964 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.965 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.965 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.966 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.968 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.968 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.969 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.969 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.970 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.970 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.972 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.973 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.974 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.976 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.977 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.978 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.979 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:52.981 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:52.982 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:52.983 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:52.984 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:52.985 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:52.986 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.987 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.987 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.989 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.989 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.998 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.998 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.999 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:52.999 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.000 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.000 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.001 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.001 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.001 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.002 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.002 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.003 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.003 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.005 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:53.007 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:53.009 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:53.011 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.012 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.013 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.014 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.015 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:53.016 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:53.017 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:53.017 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.018 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.019 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.019 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.020 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:53.021 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:53.022 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:53.023 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.024 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.025 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.025 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.026 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:53.027 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:53.028 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:53.028 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.029 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.030 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.031 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.032 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:53.033 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:53.033 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:53.034 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:53.035 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.035 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.036 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.037 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.038 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.041 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:09:53.043 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:09:53.046 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:09:53.048 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:09:53.050 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:09:53.051 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:09:53.054 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:09:53.056 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:09:53.057 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.059 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:09:53.060 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.062 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:09:53.063 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.063 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.064 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.064 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.064 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.066 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:53.068 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:53.069 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:53.069 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.070 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:53.070 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.072 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:09:53.072 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:53.073 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.073 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:53.073 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.074 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:53.074 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:53.076 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:53.080 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.083 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:53.087 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:09:53.093 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing PUT /api/clientes/1
2025-08-03 13:09:53.094 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:09:53.096 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured PUT /api/clientes/1
2025-08-03 13:09:53.097 [main] DEBUG [113b4186b40f475d] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#atualizarCliente(Long, ClienteRequestDTO)
2025-08-03 13:09:53.100 [main] DEBUG [113b4186b40f475d] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ClienteRequestDTO{email='novoemail@email.com', nome='Nome Atualizado', telefone='11777777777', ender (truncated)...]
2025-08-03 13:09:53.104 [main] DEBUG [113b4186b40f475d] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.atualizarCliente(java.lang.Long,com.deliverytech.delivery.dto.request.ClienteRequestDTO); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-03 13:09:53.106 [main] DEBUG [113b4186b40f475d] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.atualizarCliente(java.lang.Long,com.deliverytech.delivery.dto.request.ClienteRequestDTO); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-03 13:09:53.106 [main] DEBUG [113b4186b40f475d] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:53.118 [main] DEBUG [113b4186b40f475d] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Cliente */update clientes 
    set
        ativo=?,
        cpf=?,
        data_cadastro=?,
        email=?,
        endereco=?,
        nome=?,
        telefone=? 
    where
        id=?
2025-08-03 13:09:53.122 [main] DEBUG [113b4186b40f475d] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:09:53.122 [main] DEBUG [113b4186b40f475d] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@5bd89199]
2025-08-03 13:09:53.127 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@77c86e14, started on Sun Aug 03 13:09:51 BRT 2025
2025-08-03 13:09:53.129 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:53.129 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:53.129 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:53.130 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:53.130 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:53.130 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:53.130 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:53.131 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown initiated...
2025-08-03 13:09:53.132 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown completed.
2025-08-03 13:09:53.134 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:09:53.158 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:09:53.158 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:09:53.158 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-03 13:09:53.159 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@72220379
2025-08-03 13:09:53.424 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:09:53.440 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2025-08-03 13:09:53.514 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:09:53.515 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Starting...
2025-08-03 13:09:53.516 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-7 - Added connection conn60: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:09:53.516 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Start completed.
2025-08-03 13:09:53.517 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:09:53.569 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:53.569 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:53.569 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:53.569 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:53.569 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:53.570 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:53.570 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:09:53.571 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:09:53.572 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:09:53.573 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:09:53.574 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:09:53.574 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:09:53.575 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:09:53.576 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:09:53.577 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:09:53.578 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:53.579 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:53.580 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:53.688 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:09:53.766 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:09:53.797 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:09:53.859 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:09:53.894 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:09:53.923 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:09:53.980 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:09:53.991 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:09:53.991 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:09:53.991 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:09:53.991 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:09:53.992 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-03 13:09:54.004 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 0.87 seconds (process running for 28.607)
2025-08-03 13:09:54.006 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:09:54.009 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:09:54.011 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:09:54.012 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:09:54.369 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.370 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.371 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.371 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.371 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.372 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.374 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.375 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.375 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.375 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.376 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.378 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.380 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.381 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.381 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.382 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.382 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.383 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.384 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.385 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.386 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.387 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.387 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.388 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.389 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.390 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.390 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.391 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.391 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.392 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.392 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.392 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.393 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.393 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.393 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.394 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.394 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.394 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.395 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.395 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.396 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.396 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.397 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:54.399 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:54.400 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:54.400 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.401 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.402 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.403 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.404 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:54.404 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:54.406 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:54.406 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.407 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.408 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.408 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.409 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:54.410 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:54.411 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:54.411 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.412 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.413 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.413 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.414 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:54.415 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:54.416 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:54.416 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.417 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.418 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.418 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.419 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:54.420 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:54.421 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:54.422 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:54.423 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.424 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.425 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.426 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.426 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.429 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:09:54.431 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:09:54.433 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:09:54.435 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:09:54.437 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:09:54.439 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:09:54.441 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:09:54.443 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:09:54.444 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.446 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:09:54.447 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.449 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:09:54.449 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.450 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.450 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.451 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.451 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.453 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:54.456 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:54.456 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:54.457 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.457 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:54.458 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.459 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:09:54.460 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:54.461 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.461 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:54.461 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.462 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:54.462 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:54.464 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:54.469 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.471 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:54.476 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/clientes
2025-08-03 13:09:54.477 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:09:54.479 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/clientes
2025-08-03 13:09:54.479 [main] DEBUG [02a36895e70f4426] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#listarClientesAtivos(Pageable)
2025-08-03 13:09:54.482 [main] DEBUG [02a36895e70f4426] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.listarClientesAtivos(org.springframework.data.domain.Pageable); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-03 13:09:54.483 [main] DEBUG [02a36895e70f4426] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.listarClientesAtivos(org.springframework.data.domain.Pageable); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-03 13:09:54.487 [main] DEBUG [02a36895e70f4426] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo 
    fetch
        first ? rows only
2025-08-03 13:09:54.499 [main] DEBUG [02a36895e70f4426] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:09:54.500 [main] DEBUG [02a36895e70f4426] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.PagedResponseWrapper@1f70d9cf]
2025-08-03 13:09:54.513 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@72220379, started on Sun Aug 03 13:09:53 BRT 2025
2025-08-03 13:09:54.515 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:54.515 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:54.515 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:54.516 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:54.516 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:54.516 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:54.516 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:54.517 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown initiated...
2025-08-03 13:09:54.518 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown completed.
2025-08-03 13:09:54.520 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:09:54.541 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:09:54.542 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:09:54.542 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-03 13:09:54.542 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@11a4fef0
2025-08-03 13:09:54.741 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:09:54.754 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2025-08-03 13:09:54.818 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:09:54.818 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Starting...
2025-08-03 13:09:54.819 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-8 - Added connection conn70: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:09:54.819 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Start completed.
2025-08-03 13:09:54.819 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:09:54.867 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:54.867 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:54.867 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:54.867 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:54.880 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:54.880 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:54.880 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:09:54.881 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:09:54.882 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:09:54.882 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:09:54.883 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:09:54.884 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:09:54.884 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:09:54.885 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:09:54.886 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:09:54.887 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:54.888 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:54.890 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:55.005 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:09:55.113 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:09:55.150 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:09:55.219 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:09:55.255 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:09:55.261 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:09:55.321 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:09:55.333 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:09:55.333 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:09:55.333 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:09:55.334 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:09:55.334 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-08-03 13:09:55.348 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 0.827 seconds (process running for 29.951)
2025-08-03 13:09:55.351 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:09:55.355 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:09:55.356 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:09:55.358 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:09:55.721 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.724 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.726 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.728 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.729 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.730 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.733 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.734 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.735 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.735 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.736 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.736 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.738 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.741 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.742 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.744 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.747 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.748 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.750 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.752 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.753 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.754 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.760 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.763 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.764 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.765 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.766 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.767 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.767 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.768 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.768 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.768 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.769 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.769 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.769 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.770 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.770 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.770 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.770 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.771 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.771 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.771 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.773 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:55.774 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:55.775 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:55.776 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.777 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.778 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.779 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.780 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:55.781 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:55.782 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:55.782 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.783 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.784 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.784 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.785 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:55.786 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:55.787 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:55.787 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.788 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.789 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.789 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.790 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:55.790 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:55.791 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:55.791 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.793 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.793 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.794 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.795 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:55.797 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:55.797 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:55.797 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:55.798 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.799 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.801 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.801 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.801 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.803 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:09:55.806 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:09:55.815 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:09:55.818 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:09:55.820 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:09:55.824 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:09:55.826 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:09:55.829 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:09:55.830 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.833 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:09:55.834 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.838 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:09:55.840 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.841 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.842 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.843 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.844 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.848 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:55.851 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:55.852 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:55.853 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.853 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:55.854 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.856 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:09:55.858 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:55.859 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.860 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:55.861 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.862 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:55.863 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:55.868 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:55.873 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.875 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:55.882 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/clientes/999
2025-08-03 13:09:55.883 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:09:55.885 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/clientes/999
2025-08-03 13:09:55.886 [main] DEBUG [5dcb124b2c05406b] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#buscarPorId(Long)
2025-08-03 13:09:55.887 [main] DEBUG [5dcb124b2c05406b] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-03 13:09:55.888 [main] DEBUG [5dcb124b2c05406b] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-03 13:09:55.889 [main] DEBUG [5dcb124b2c05406b] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:55.890 [main] DEBUG [5dcb124b2c05406b] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleEntityNotFoundException(EntityNotFoundException, WebRequest)
2025-08-03 13:09:55.893 [main] DEBUG [5dcb124b2c05406b] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:09:55.894 [main] DEBUG [5dcb124b2c05406b] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@5d96f3f1]
2025-08-03 13:09:55.894 [main] DEBUG [5dcb124b2c05406b] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.deliverytech.delivery.exceptions.EntityNotFoundException: Cliente não encontrado: 999]
2025-08-03 13:09:55.903 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@11a4fef0, started on Sun Aug 03 13:09:54 BRT 2025
2025-08-03 13:09:55.905 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:55.906 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:55.906 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:55.907 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:55.907 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:55.907 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:55.907 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:55.908 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown initiated...
2025-08-03 13:09:55.909 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown completed.
2025-08-03 13:09:55.913 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:09:55.955 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:09:55.957 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:09:55.957 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-03 13:09:55.960 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@493ed9a0
2025-08-03 13:09:56.483 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:09:56.522 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 33 ms. Found 5 JPA repository interfaces.
2025-08-03 13:09:56.671 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:09:56.672 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Starting...
2025-08-03 13:09:56.674 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-9 - Added connection conn80: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:09:56.674 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Start completed.
2025-08-03 13:09:56.674 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:09:56.762 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:56.762 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:56.762 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:56.762 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:56.762 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:56.763 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:56.763 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:09:56.765 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:09:56.766 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:09:56.768 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:09:56.769 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:09:56.771 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:09:56.772 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:09:56.774 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:09:56.775 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:09:56.776 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:56.778 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:56.781 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:56.992 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:09:57.123 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:09:57.161 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:09:57.225 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:09:57.264 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:09:57.272 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:09:57.339 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:09:57.353 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:09:57.353 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:09:57.353 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:09:57.353 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:09:57.354 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-03 13:09:57.368 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 1.456 seconds (process running for 31.97)
2025-08-03 13:09:57.371 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:09:57.374 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:09:57.376 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:09:57.378 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:09:57.740 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.741 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.741 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.742 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.742 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.742 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.744 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.744 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.745 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.745 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.746 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.746 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.748 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.749 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.749 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.750 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.751 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.751 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.752 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.754 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.755 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.756 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.757 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.758 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.758 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.759 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.760 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.760 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.760 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.760 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.761 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.761 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.762 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.762 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.762 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.763 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.763 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.764 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.764 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.764 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.765 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.765 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.766 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:57.768 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:57.769 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:57.770 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.771 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.772 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.772 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.774 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:57.774 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:57.775 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:57.775 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.776 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.777 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.777 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.778 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:57.779 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:57.779 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:57.780 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.781 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.781 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.782 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.784 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:57.785 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:57.786 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:57.786 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.787 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.787 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.788 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.789 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:57.790 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:57.790 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:57.791 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:57.792 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.793 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.794 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.794 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.795 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.798 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:09:57.800 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:09:57.803 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:09:57.806 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:09:57.809 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:09:57.812 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:09:57.814 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:09:57.817 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:09:57.818 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.820 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:09:57.821 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.823 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:09:57.824 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.824 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.825 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.825 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.825 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.828 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:57.830 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:57.832 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:57.832 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.833 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:57.833 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.835 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:09:57.836 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:57.837 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.837 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:57.837 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.838 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:57.838 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:57.840 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:57.845 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.848 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:57.855 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/clientes
2025-08-03 13:09:57.856 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:09:57.856 [main] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:09:57.857 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/clientes
2025-08-03 13:09:57.858 [main] DEBUG [b2fe87f5d1534997] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#cadastrarCliente(ClienteRequestDTO)
2025-08-03 13:09:57.860 [main] DEBUG [b2fe87f5d1534997] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ClienteRequestDTO{email='email-invalido', nome='', telefone='', endereco=''}]
2025-08-03 13:09:57.883 [main] DEBUG [b2fe87f5d1534997] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException, WebRequest)
2025-08-03 13:09:57.885 [main] DEBUG [b2fe87f5d1534997] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:09:57.885 [main] DEBUG [b2fe87f5d1534997] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@6c40b06e]
2025-08-03 13:09:57.886 [main] DEBUG [b2fe87f5d1534997] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.deliverytech.delivery.dto.response.ApiResponseWrapper<com.deliverytech.delivery.dto.response.ClienteResponseDTO>> com.deliverytech.delivery.controller.ClienteController.cadastrarCliente(com.deliverytech.delivery.dto.request.ClienteRequestDTO) with 7 errors: [Field error in object 'clienteRequestDTO' on field 'telefone': rejected value []; codes [Pattern.clienteRequestDTO.telefone,Pattern.telefone,Pattern.java.lang.String,Pattern]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.telefone,telefone]; arguments []; default message [telefone],[Ljakarta.validation.constraints.Pattern$Flag;@23a4adba,^\+?[0-9]{10,15}$]; default message [O telefone deve ser um número válido com 10 a 15 dígitos, podendo iniciar com '+']] [Field error in object 'clienteRequestDTO' on field 'endereco': rejected value []; codes [NotBlank.clienteRequestDTO.endereco,NotBlank.endereco,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.endereco,endereco]; arguments []; default message [endereco]]; default message [O endereço é obrigatório]] [Field error in object 'clienteRequestDTO' on field 'telefone': rejected value []; codes [Pattern.clienteRequestDTO.telefone,Pattern.telefone,Pattern.java.lang.String,Pattern]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.telefone,telefone]; arguments []; default message [telefone],[Ljakarta.validation.constraints.Pattern$Flag;@23a4adba,^\+?[0-9]{10,15}$]; default message [O telefone deve ser um número válido com 10 a 15 dígitos]] [Field error in object 'clienteRequestDTO' on field 'email': rejected value [email-invalido]; codes [Email.clienteRequestDTO.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@329733eb,.*]; default message [O email deve ser válido]] [Field error in object 'clienteRequestDTO' on field 'nome': rejected value []; codes [NotBlank.clienteRequestDTO.nome,NotBlank.nome,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.nome,nome]; arguments []; default message [nome]]; default message [O nome é obrigatório]] [Field error in object 'clienteRequestDTO' on field 'cpf': rejected value [null]; codes [NotBlank.clienteRequestDTO.cpf,NotBlank.cpf,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.cpf,cpf]; arguments []; default message [cpf]]; default message [O CPF é obrigatório]] [Field error in object 'clienteRequestDTO' on field 'cpf': rejected value [null]; codes [ValidCPF.clienteRequestDTO.cpf,ValidCPF.cpf,ValidCPF.java.lang.String,ValidCPF]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.cpf,cpf]; arguments []; default message [cpf]]; default message [CPF deve ter formato válido 12345678909 ou 123.456.789-09)]] ]
2025-08-03 13:09:57.895 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@493ed9a0, started on Sun Aug 03 13:09:55 BRT 2025
2025-08-03 13:09:57.898 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:57.898 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:57.899 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:57.899 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:57.899 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:57.899 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:57.900 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:57.900 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Shutdown initiated...
2025-08-03 13:09:57.902 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Shutdown completed.
2025-08-03 13:09:57.907 [main] INFO  [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.deliverytech.delivery.controller.PedidoControllerITTest]: PedidoControllerITTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-03 13:09:57.909 [main] INFO  [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.deliverytech.delivery.DeliveryApiApplication for test class com.deliverytech.delivery.controller.PedidoControllerITTest
2025-08-03 13:09:57.913 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:09:57.938 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:09:57.939 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:09:57.939 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-03 13:09:57.940 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@12a4781f
2025-08-03 13:09:58.152 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:09:58.166 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
2025-08-03 13:09:58.234 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:09:58.234 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Starting...
2025-08-03 13:09:58.235 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-10 - Added connection conn90: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:09:58.235 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Start completed.
2025-08-03 13:09:58.236 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:09:58.289 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:58.289 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:58.289 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:58.289 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:58.289 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:58.289 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:58.290 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:09:58.291 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:09:58.292 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:09:58.292 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:09:58.293 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:09:58.294 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:09:58.294 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:09:58.295 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:09:58.296 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:09:58.296 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:58.297 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:58.299 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:58.413 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:09:58.484 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:09:58.524 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:09:58.596 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:09:58.636 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:09:58.652 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:09:58.741 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:09:58.754 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:09:58.755 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:09:58.755 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:09:58.755 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:09:58.755 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-08-03 13:09:58.768 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 0.855 seconds (process running for 33.37)
2025-08-03 13:09:58.772 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:09:58.776 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:09:58.777 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:09:58.778 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:09:59.135 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.136 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.136 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.137 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.137 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.138 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.139 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.139 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.140 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.140 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.140 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.141 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.142 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.143 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.144 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.144 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.145 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.145 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.146 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.148 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.148 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.149 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.149 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.150 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.151 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.151 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.152 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.152 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.152 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.153 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.153 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.153 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.154 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.154 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.155 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.155 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.155 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.156 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.156 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.156 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.157 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.157 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.158 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:59.160 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:59.160 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:59.161 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.162 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.163 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.163 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.165 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:59.187 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:59.187 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:59.188 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.189 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.190 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.190 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.191 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:59.191 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:59.192 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:59.192 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.193 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.193 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.194 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.195 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:59.195 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:59.195 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:59.196 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.197 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.197 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.197 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.198 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:59.199 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:59.199 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:59.200 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:59.200 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.201 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.201 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.202 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.202 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.204 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:09:59.206 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:09:59.208 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:09:59.210 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:09:59.211 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:09:59.213 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:09:59.215 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:09:59.217 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:09:59.218 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.220 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:09:59.220 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.222 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:09:59.222 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.223 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.223 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.223 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.223 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.225 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:59.227 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:59.228 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:59.229 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.229 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:59.229 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.231 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:09:59.231 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:59.232 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.232 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:59.232 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.233 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:59.233 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.236 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:09:59.241 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.242 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.247 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:09:59.249 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:09:59.250 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.250 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.251 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.251 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.251 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.251 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.258 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:59.263 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.restaurante_id,
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco 
    from
        produtos p1_0 
    where
        p1_0.restaurante_id=?
2025-08-03 13:09:59.275 [main] DEBUG [] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-03 13:09:59.276 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.282 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-03 13:09:59.283 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:09:59.284 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-03 13:09:59.284 [main] DEBUG [48e3a98bd8d44ed6] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-03 13:09:59.290 [main] DEBUG [48e3a98bd8d44ed6] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=1, numeroPedido='PEDIDO20250729', dataPedido='2025-08-03T13:09:59.2768759 (truncated)...]
2025-08-03 13:09:59.350 [main] DEBUG [48e3a98bd8d44ed6] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-03 13:09:59.352 [main] DEBUG [48e3a98bd8d44ed6] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-03 13:09:59.353 [main] DEBUG [48e3a98bd8d44ed6] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:09:59.355 [main] DEBUG [48e3a98bd8d44ed6] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:09:59.356 [main] DEBUG [48e3a98bd8d44ed6] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:09:59.358 [main] DEBUG [48e3a98bd8d44ed6] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.371 [main] DEBUG [48e3a98bd8d44ed6] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:09:59.373 [main] DEBUG [48e3a98bd8d44ed6] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-03 13:09:59.375 [main] DEBUG [48e3a98bd8d44ed6] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:09:59.375 [main] DEBUG [48e3a98bd8d44ed6] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@5d893b03]
2025-08-03 13:09:59.384 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@12a4781f, started on Sun Aug 03 13:09:57 BRT 2025
2025-08-03 13:09:59.386 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:59.386 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:59.387 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:59.387 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:59.388 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:59.388 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:59.388 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:59.388 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Shutdown initiated...
2025-08-03 13:09:59.389 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Shutdown completed.
2025-08-03 13:09:59.391 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:09:59.420 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:09:59.420 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:09:59.421 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-03 13:09:59.422 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6d669bde
2025-08-03 13:09:59.611 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:09:59.625 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2025-08-03 13:09:59.701 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:09:59.702 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-11 - Starting...
2025-08-03 13:09:59.703 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-11 - Added connection conn100: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:09:59.703 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-11 - Start completed.
2025-08-03 13:09:59.703 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:09:59.757 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:09:59.757 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:09:59.757 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:09:59.757 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:09:59.757 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:09:59.757 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:09:59.769 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:09:59.770 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:09:59.771 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:09:59.772 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:09:59.772 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:09:59.773 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:09:59.774 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:09:59.775 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:09:59.776 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:09:59.777 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:59.777 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:09:59.779 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:09:59.879 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:09:59.948 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:09:59.975 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:10:00.039 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:10:00.079 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:10:00.088 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:10:00.158 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:10:00.182 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:10:00.182 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:10:00.182 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:10:00.182 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:10:00.183 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-03 13:10:00.196 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 0.805 seconds (process running for 34.799)
2025-08-03 13:10:00.199 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:10:00.202 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:10:00.204 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:10:00.205 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:10:00.564 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.565 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.565 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.565 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.566 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.566 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.568 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.569 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.569 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.569 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.570 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.570 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.572 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.573 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.573 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.574 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.574 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.575 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.576 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.577 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.578 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.579 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.579 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.579 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.580 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.581 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.581 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.581 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.582 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.583 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.583 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.584 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.584 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.585 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.585 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.585 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.586 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.586 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.586 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.587 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.587 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.587 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.589 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:00.590 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:00.590 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:00.591 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.591 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.592 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.592 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.593 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:00.594 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:00.595 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:00.595 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.596 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.597 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.597 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.598 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:00.599 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:00.600 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:00.600 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.601 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.602 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.602 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.603 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:00.603 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:00.604 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:00.604 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.605 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.605 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.605 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.606 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:00.607 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:00.607 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:00.608 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:00.608 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.609 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.609 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.610 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.610 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.612 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:10:00.614 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:10:00.617 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:10:00.618 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:10:00.619 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:10:00.621 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:10:00.622 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:10:00.624 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:10:00.625 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.626 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:10:00.627 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.629 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:10:00.629 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.630 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.630 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.631 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.631 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.633 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:00.635 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:00.636 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:00.636 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.637 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:00.637 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.639 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:10:00.639 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:00.640 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.640 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:00.640 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.640 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:00.641 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.643 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:00.647 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.648 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:00.652 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:10:00.653 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:10:00.654 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.654 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.654 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.655 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.655 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.655 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.659 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-03 13:10:00.659 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:00.660 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-03 13:10:00.660 [main] DEBUG [5e0e92d4b58248e5] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-03 13:10:00.663 [main] DEBUG [5e0e92d4b58248e5] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=null, numeroPedido='null', dataPedido='null', valorTotal=null, observacoe (truncated)...]
2025-08-03 13:10:00.684 [main] DEBUG [5e0e92d4b58248e5] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException, WebRequest)
2025-08-03 13:10:00.686 [main] DEBUG [5e0e92d4b58248e5] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:00.686 [main] DEBUG [5e0e92d4b58248e5] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@6addfec0]
2025-08-03 13:10:00.686 [main] DEBUG [5e0e92d4b58248e5] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.deliverytech.delivery.dto.response.ApiResponseWrapper<com.deliverytech.delivery.dto.response.PedidoResponseDTO>> com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO) with 9 errors: [Field error in object 'pedidoRequestDTO' on field 'dataPedido': rejected value [null]; codes [NotNull.pedidoRequestDTO.dataPedido,NotNull.dataPedido,NotNull.java.time.LocalDateTime,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.dataPedido,dataPedido]; arguments []; default message [dataPedido]]; default message [A data do pedido é obrigatória]] [Field error in object 'pedidoRequestDTO' on field 'cep': rejected value [null]; codes [NotBlank.pedidoRequestDTO.cep,NotBlank.cep,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.cep,cep]; arguments []; default message [cep]]; default message [CEP é obrigatório]] [Field error in object 'pedidoRequestDTO' on field 'numeroPedido': rejected value [null]; codes [NotNull.pedidoRequestDTO.numeroPedido,NotNull.numeroPedido,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.numeroPedido,numeroPedido]; arguments []; default message [numeroPedido]]; default message [O número do pedido é obrigatório]] [Field error in object 'pedidoRequestDTO' on field 'cep': rejected value [null]; codes [ValidCEP.pedidoRequestDTO.cep,ValidCEP.cep,ValidCEP.java.lang.String,ValidCEP]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.cep,cep]; arguments []; default message [cep]]; default message [CEP deve ter formato válido (00000-000 ou 00000000)]] [Field error in object 'pedidoRequestDTO' on field 'clienteId': rejected value [null]; codes [NotNull.pedidoRequestDTO.clienteId,NotNull.clienteId,NotNull.java.lang.Long,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.clienteId,clienteId]; arguments []; default message [clienteId]]; default message [O status do pedido é obrigatório]] [Field error in object 'pedidoRequestDTO' on field 'valorTotal': rejected value [null]; codes [NotNull.pedidoRequestDTO.valorTotal,NotNull.valorTotal,NotNull.java.math.BigDecimal,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.valorTotal,valorTotal]; arguments []; default message [valorTotal]]; default message [O valor do pedido é obrigatório]] [Field error in object 'pedidoRequestDTO' on field 'clienteId': rejected value [null]; codes [NotNull.pedidoRequestDTO.clienteId,NotNull.clienteId,NotNull.java.lang.Long,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.clienteId,clienteId]; arguments []; default message [clienteId]]; default message [O id do cliente é obrigatório]] [Field error in object 'pedidoRequestDTO' on field 'restauranteId': rejected value [null]; codes [NotNull.pedidoRequestDTO.restauranteId,NotNull.restauranteId,NotNull.java.lang.Long,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.restauranteId,restauranteId]; arguments []; default message [restauranteId]]; default message [O restaurante é obrigatório]] [Field error in object 'pedidoRequestDTO' on field 'formaPagamento': rejected value [null]; codes [NotBlank.pedidoRequestDTO.formaPagamento,NotBlank.formaPagamento,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.formaPagamento,formaPagamento]; arguments []; default message [formaPagamento]]; default message [Forma de pagamento é obrigatória]] ]
2025-08-03 13:10:00.690 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/pedidos/clientes/1/pedidos
2025-08-03 13:10:00.690 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:00.691 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/pedidos/clientes/1/pedidos
2025-08-03 13:10:00.691 [main] DEBUG [d7817fdf23314016] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#buscarPedidosPorCliente(Long)
2025-08-03 13:10:00.692 [main] DEBUG [d7817fdf23314016] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.buscarPedidosPorCliente(java.lang.Long); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-03 13:10:00.693 [main] DEBUG [d7817fdf23314016] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.buscarPedidosPorCliente(java.lang.Long); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-03 13:10:00.695 [main] DEBUG [d7817fdf23314016] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:00.696 [main] DEBUG [d7817fdf23314016] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:00.697 [main] DEBUG [d7817fdf23314016] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:00.701 [main] DEBUG [d7817fdf23314016] org.hibernate.SQL - 
    select
        i1_0.pedido_id,
        i1_0.id,
        i1_0.preco_unitario,
        p2_0.id,
        p2_0.categoria,
        p2_0.descricao,
        p2_0.disponivel,
        p2_0.estoque,
        p2_0.nome,
        p2_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos,
        i1_0.quantidade,
        i1_0.subtotal 
    from
        itens_pedido i1_0 
    left join
        produtos p2_0 
            on p2_0.id=i1_0.produto_id 
    left join
        restaurantes r1_0 
            on r1_0.id=p2_0.restaurante_id 
    where
        i1_0.pedido_id=?
2025-08-03 13:10:00.705 [main] DEBUG [d7817fdf23314016] org.hibernate.SQL - 
    select
        i1_0.pedido_id,
        i1_0.id,
        i1_0.preco_unitario,
        p2_0.id,
        p2_0.categoria,
        p2_0.descricao,
        p2_0.disponivel,
        p2_0.estoque,
        p2_0.nome,
        p2_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos,
        i1_0.quantidade,
        i1_0.subtotal 
    from
        itens_pedido i1_0 
    left join
        produtos p2_0 
            on p2_0.id=i1_0.produto_id 
    left join
        restaurantes r1_0 
            on r1_0.id=p2_0.restaurante_id 
    where
        i1_0.pedido_id=?
2025-08-03 13:10:00.709 [main] DEBUG [d7817fdf23314016] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:00.710 [main] DEBUG [d7817fdf23314016] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@21684d4]
2025-08-03 13:10:00.719 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@6d669bde, started on Sun Aug 03 13:09:59 BRT 2025
2025-08-03 13:10:00.721 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:10:00.721 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:10:00.722 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:10:00.722 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:10:00.722 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:10:00.722 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:10:00.722 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:10:00.723 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-11 - Shutdown initiated...
2025-08-03 13:10:00.724 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-11 - Shutdown completed.
2025-08-03 13:10:00.727 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:10:00.749 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:10:00.773 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:10:00.773 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-03 13:10:00.774 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@456fba8c
2025-08-03 13:10:00.976 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:10:00.988 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 5 JPA repository interfaces.
2025-08-03 13:10:01.049 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:10:01.050 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-12 - Starting...
2025-08-03 13:10:01.051 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-12 - Added connection conn110: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:10:01.051 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-12 - Start completed.
2025-08-03 13:10:01.051 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:10:01.095 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:10:01.095 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:10:01.095 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:10:01.095 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:10:01.095 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:10:01.095 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:10:01.095 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:10:01.097 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:10:01.098 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:10:01.098 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:10:01.098 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:10:01.099 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:10:01.100 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:10:01.100 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:10:01.101 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:10:01.101 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:10:01.102 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:10:01.103 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:10:01.263 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:10:01.334 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:10:01.363 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:10:01.419 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:10:01.456 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:10:01.465 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:10:01.525 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:10:01.536 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:10:01.536 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:10:01.536 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:10:01.536 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:10:01.537 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-03 13:10:01.549 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 0.823 seconds (process running for 36.152)
2025-08-03 13:10:01.552 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:10:01.555 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:10:01.557 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:10:01.559 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:10:01.915 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.917 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.918 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.919 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.919 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.920 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.922 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.924 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.924 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.925 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.925 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.925 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.927 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.929 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.929 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.930 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.930 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.931 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.932 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:01.934 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:01.936 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:01.937 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:01.940 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:01.941 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:01.942 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.944 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.944 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.945 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.945 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.946 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.946 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.946 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.947 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.947 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.947 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.948 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.948 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.948 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.949 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.949 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.949 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.950 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.952 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:01.955 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:01.957 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:01.958 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:01.959 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.960 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.961 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.963 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:01.964 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:01.965 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:01.965 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:01.966 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.967 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.967 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.968 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:01.969 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:01.969 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:01.970 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:01.971 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.971 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.972 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.973 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:01.974 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:01.974 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:01.975 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:01.976 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.976 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.977 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.978 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:01.978 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:01.979 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:01.980 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:01.981 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:01.983 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.984 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.985 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.985 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:01.989 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:10:01.991 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:10:01.993 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:10:01.995 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:10:01.998 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:10:02.000 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:10:02.002 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:10:02.004 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:10:02.005 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.007 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:10:02.007 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.009 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:10:02.009 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.010 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.010 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.011 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.011 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.014 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:02.017 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:02.019 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:02.020 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.020 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:02.020 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.022 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:10:02.022 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:02.023 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.023 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:02.023 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.023 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:02.024 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.026 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:02.031 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:02.032 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:02.037 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:10:02.039 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:10:02.040 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.040 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.041 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.041 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.041 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.041 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.043 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:02.044 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.restaurante_id,
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco 
    from
        produtos p1_0 
    where
        p1_0.restaurante_id=?
2025-08-03 13:10:02.046 [main] DEBUG [] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-03 13:10:02.047 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.052 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-03 13:10:02.052 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:02.054 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-03 13:10:02.054 [main] DEBUG [e88ae16fcc6d4880] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-03 13:10:02.056 [main] DEBUG [e88ae16fcc6d4880] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=1, numeroPedido='PEDIDO20250729', dataPedido='2025-08-03T13:10:02.048784' (truncated)...]
2025-08-03 13:10:02.082 [main] DEBUG [e88ae16fcc6d4880] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-03 13:10:02.083 [main] DEBUG [e88ae16fcc6d4880] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-03 13:10:02.084 [main] DEBUG [e88ae16fcc6d4880] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:02.085 [main] DEBUG [e88ae16fcc6d4880] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:02.085 [main] DEBUG [e88ae16fcc6d4880] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:02.086 [main] DEBUG [e88ae16fcc6d4880] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:02.092 [main] DEBUG [e88ae16fcc6d4880] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:02.094 [main] DEBUG [e88ae16fcc6d4880] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-03 13:10:02.096 [main] DEBUG [e88ae16fcc6d4880] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:02.096 [main] DEBUG [e88ae16fcc6d4880] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@2366bdb]
2025-08-03 13:10:02.103 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing PATCH /api/pedidos/6/status
2025-08-03 13:10:02.103 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:02.104 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured PATCH /api/pedidos/6/status
2025-08-03 13:10:02.105 [main] DEBUG [844afd6a666a45bc] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#atualizarStatus(Long, StatusPedido)
2025-08-03 13:10:02.106 [main] DEBUG [844afd6a666a45bc] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [CONFIRMADO]
2025-08-03 13:10:02.112 [main] DEBUG [844afd6a666a45bc] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.atualizarStatus(java.lang.Long,com.deliverytech.delivery.enums.StatusPedido); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-03 13:10:02.113 [main] DEBUG [844afd6a666a45bc] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.atualizarStatus(java.lang.Long,com.deliverytech.delivery.enums.StatusPedido); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-03 13:10:02.113 [main] DEBUG [844afd6a666a45bc] org.hibernate.SQL - 
    select
        p1_0.id,
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:02.116 [main] DEBUG [844afd6a666a45bc] org.hibernate.SQL - 
    select
        i1_0.pedido_id,
        i1_0.id,
        i1_0.preco_unitario,
        p2_0.id,
        p2_0.categoria,
        p2_0.descricao,
        p2_0.disponivel,
        p2_0.estoque,
        p2_0.nome,
        p2_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos,
        i1_0.quantidade,
        i1_0.subtotal 
    from
        itens_pedido i1_0 
    left join
        produtos p2_0 
            on p2_0.id=i1_0.produto_id 
    left join
        restaurantes r1_0 
            on r1_0.id=p2_0.restaurante_id 
    where
        i1_0.pedido_id=?
2025-08-03 13:10:02.118 [main] DEBUG [844afd6a666a45bc] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Pedido */update pedidos 
    set
        cliente_id=?,
        data_pedido=?,
        endereco_entrega=?,
        numero_pedido=?,
        observacoes=?,
        restaurante_id=?,
        status=?,
        subtotal=?,
        taxa_entrega=?,
        valor_total=? 
    where
        id=?
2025-08-03 13:10:02.119 [main] DEBUG [844afd6a666a45bc] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:02.120 [main] DEBUG [844afd6a666a45bc] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@6e310c69]
2025-08-03 13:10:02.124 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@456fba8c, started on Sun Aug 03 13:10:00 BRT 2025
2025-08-03 13:10:02.126 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:10:02.126 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:10:02.127 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:10:02.127 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:10:02.128 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:10:02.128 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:10:02.128 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:10:02.128 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-12 - Shutdown initiated...
2025-08-03 13:10:02.129 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-12 - Shutdown completed.
2025-08-03 13:10:02.132 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:10:02.154 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:10:02.154 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:10:02.154 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-03 13:10:02.155 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@5385226c
2025-08-03 13:10:02.334 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:10:02.346 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 5 JPA repository interfaces.
2025-08-03 13:10:02.408 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:10:02.408 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-13 - Starting...
2025-08-03 13:10:02.409 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-13 - Added connection conn120: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:10:02.409 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-13 - Start completed.
2025-08-03 13:10:02.409 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:10:02.451 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:10:02.451 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:10:02.451 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:10:02.452 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:10:02.452 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:10:02.452 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:10:02.452 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:10:02.453 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:10:02.453 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:10:02.454 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:10:02.454 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:10:02.455 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:10:02.455 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:10:02.456 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:10:02.457 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:10:02.457 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:10:02.458 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:10:02.459 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:10:02.560 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:10:02.636 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:10:02.665 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:10:02.721 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:10:02.755 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:10:02.761 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:10:02.816 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:10:02.826 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:10:02.826 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:10:02.826 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:10:02.826 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:10:02.827 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-03 13:10:02.839 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 0.707 seconds (process running for 37.441)
2025-08-03 13:10:02.840 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:10:02.842 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:10:02.844 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:10:02.845 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:10:03.201 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.202 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.202 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.203 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.203 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.203 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.204 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.205 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.205 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.206 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.206 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.206 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.208 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.208 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.209 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.209 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.210 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.210 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.212 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.213 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.213 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.214 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.214 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.215 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.216 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.216 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.216 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.217 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.217 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.217 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.217 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.218 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.218 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.218 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.219 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.219 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.219 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.219 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.220 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.220 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.220 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.220 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.221 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:03.222 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:03.223 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:03.223 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.224 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.225 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.225 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.226 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:03.226 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:03.227 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:03.227 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.228 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.228 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.229 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.229 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:03.230 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:03.230 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:03.231 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.231 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.232 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.232 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.233 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:03.233 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:03.233 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:03.234 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.234 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.235 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.235 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.236 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:03.236 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:03.237 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:03.237 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:03.237 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.238 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.238 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.238 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.239 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.240 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:10:03.242 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:10:03.244 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:10:03.246 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:10:03.248 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:10:03.250 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:10:03.252 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:10:03.254 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:10:03.255 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.256 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:10:03.257 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.258 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:10:03.258 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.259 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.259 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.259 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.260 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.262 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:03.264 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:03.265 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:03.265 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.265 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:03.265 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.267 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:10:03.267 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:03.268 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.268 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:03.268 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.268 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:03.268 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.270 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:03.274 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.276 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:03.280 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:10:03.282 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:10:03.283 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.283 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.284 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.284 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.284 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.284 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.285 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.289 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-03 13:10:03.289 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:03.291 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-03 13:10:03.291 [main] DEBUG [81f8160c48204822] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-03 13:10:03.293 [main] DEBUG [81f8160c48204822] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=1, numeroPedido='PEDIDO20250729', dataPedido='2025-08-03T13:10:03.2855587 (truncated)...]
2025-08-03 13:10:03.309 [main] DEBUG [81f8160c48204822] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-03 13:10:03.310 [main] DEBUG [81f8160c48204822] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-03 13:10:03.311 [main] DEBUG [81f8160c48204822] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:03.311 [main] DEBUG [81f8160c48204822] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:03.312 [main] DEBUG [81f8160c48204822] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:03.313 [main] DEBUG [81f8160c48204822] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleEntityNotFoundException(EntityNotFoundException, WebRequest)
2025-08-03 13:10:03.314 [main] DEBUG [81f8160c48204822] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:03.315 [main] DEBUG [81f8160c48204822] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@1b5477a6]
2025-08-03 13:10:03.315 [main] DEBUG [81f8160c48204822] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.deliverytech.delivery.exceptions.EntityNotFoundException: Produto não encontrado: 999]
2025-08-03 13:10:03.319 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@5385226c, started on Sun Aug 03 13:10:02 BRT 2025
2025-08-03 13:10:03.321 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:10:03.321 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:10:03.321 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:10:03.321 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:10:03.322 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:10:03.322 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:10:03.322 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:10:03.322 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-13 - Shutdown initiated...
2025-08-03 13:10:03.329 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-13 - Shutdown completed.
2025-08-03 13:10:03.333 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:10:03.368 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:10:03.369 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:10:03.369 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-03 13:10:03.370 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@37f91dbf
2025-08-03 13:10:03.583 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:10:03.597 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2025-08-03 13:10:03.656 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:10:03.656 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-14 - Starting...
2025-08-03 13:10:03.657 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-14 - Added connection conn130: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:10:03.658 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-14 - Start completed.
2025-08-03 13:10:03.658 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:10:03.702 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:10:03.703 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:10:03.703 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:10:03.703 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:10:03.703 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:10:03.703 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:10:03.703 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:10:03.705 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:10:03.705 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:10:03.706 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:10:03.706 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:10:03.707 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:10:03.707 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:10:03.709 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:10:03.710 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:10:03.710 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:10:03.711 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:10:03.712 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:10:03.815 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:10:03.879 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:10:03.911 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:10:03.975 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:10:04.008 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:10:04.015 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:10:04.068 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:10:04.079 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:10:04.079 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:10:04.079 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:10:04.079 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:10:04.080 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-03 13:10:04.096 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 0.762 seconds (process running for 38.698)
2025-08-03 13:10:04.098 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:10:04.102 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:10:04.103 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:10:04.105 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:10:04.461 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.462 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.462 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.463 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.463 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.463 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.464 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.465 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.465 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.465 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.466 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.466 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.467 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.468 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.468 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.469 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.469 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.470 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.471 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.472 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.472 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.473 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.473 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.474 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.474 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.475 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.475 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.476 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.476 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.476 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.477 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.477 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.477 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.477 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.478 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.478 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.478 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.478 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.478 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.479 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.479 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.479 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.481 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:04.483 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:04.483 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:04.484 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.485 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.486 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.486 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.487 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:04.488 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:04.489 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:04.489 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.490 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.490 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.490 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.491 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:04.492 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:04.492 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:04.493 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.493 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.494 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.494 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.495 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:04.496 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:04.496 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:04.496 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.498 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.498 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.498 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.500 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:04.501 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:04.501 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:04.502 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:04.502 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.503 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.504 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.504 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.505 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.506 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:10:04.508 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:10:04.510 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:10:04.512 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:10:04.514 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:10:04.516 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:10:04.518 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:10:04.520 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:10:04.521 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.522 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:10:04.523 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.525 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:10:04.525 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.526 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.526 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.526 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.526 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.528 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:04.531 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:04.531 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:04.532 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.532 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:04.532 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.534 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:10:04.534 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:04.535 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.535 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:04.535 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.535 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:04.535 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.537 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:04.540 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.542 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:04.546 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:10:04.548 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:10:04.549 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.549 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.549 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.549 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.550 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.550 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.562 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:04.563 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.restaurante_id,
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco 
    from
        produtos p1_0 
    where
        p1_0.restaurante_id=?
2025-08-03 13:10:04.564 [main] DEBUG [] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-03 13:10:04.565 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.568 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-03 13:10:04.569 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:04.570 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-03 13:10:04.570 [main] DEBUG [5e8e15adf50e462c] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-03 13:10:04.573 [main] DEBUG [5e8e15adf50e462c] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=1, numeroPedido='PEDIDO20250729', dataPedido='2025-08-03T13:10:04.5652176 (truncated)...]
2025-08-03 13:10:04.587 [main] DEBUG [5e8e15adf50e462c] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-03 13:10:04.588 [main] DEBUG [5e8e15adf50e462c] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-03 13:10:04.589 [main] DEBUG [5e8e15adf50e462c] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:04.589 [main] DEBUG [5e8e15adf50e462c] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:04.590 [main] DEBUG [5e8e15adf50e462c] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:04.591 [main] DEBUG [5e8e15adf50e462c] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleBusinessException(Exception, WebRequest)
2025-08-03 13:10:04.592 [main] DEBUG [5e8e15adf50e462c] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:04.593 [main] DEBUG [5e8e15adf50e462c] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@fb1e1fd]
2025-08-03 13:10:04.593 [main] DEBUG [5e8e15adf50e462c] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.deliverytech.delivery.exceptions.BusinessException: Estoque insuficiente para o produto Pizza Margherita. Estoque atual: 5, Quantidade solicitada: 10]
2025-08-03 13:10:04.597 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:04.600 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@37f91dbf, started on Sun Aug 03 13:10:03 BRT 2025
2025-08-03 13:10:04.601 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:10:04.601 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:10:04.601 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:10:04.601 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:10:04.602 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:10:04.602 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:10:04.602 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:10:04.602 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-14 - Shutdown initiated...
2025-08-03 13:10:04.603 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-14 - Shutdown completed.
2025-08-03 13:10:04.605 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:10:04.625 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:10:04.626 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:10:04.626 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-03 13:10:04.626 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@5d7336ad
2025-08-03 13:10:04.826 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:10:04.838 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 5 JPA repository interfaces.
2025-08-03 13:10:04.893 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:10:04.894 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-15 - Starting...
2025-08-03 13:10:04.895 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-15 - Added connection conn140: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:10:04.895 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-15 - Start completed.
2025-08-03 13:10:04.895 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:10:04.933 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:10:04.933 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:10:04.934 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:10:04.934 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:10:04.934 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:10:04.934 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:10:04.934 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:10:04.935 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:10:04.935 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:10:04.936 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:10:04.936 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:10:04.937 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:10:04.937 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:10:04.938 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:10:04.939 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:10:04.939 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:10:04.940 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:10:04.941 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:10:05.051 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:10:05.161 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:10:05.196 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:10:05.264 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:10:05.296 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:10:05.303 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:10:05.364 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:10:05.374 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:10:05.374 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:10:05.374 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:10:05.374 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:10:05.374 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-08-03 13:10:05.385 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 0.78 seconds (process running for 39.987)
2025-08-03 13:10:05.388 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:10:05.391 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:10:05.392 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:10:05.393 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:10:05.744 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.745 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.746 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.746 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.746 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.747 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.748 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.748 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.748 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.749 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.749 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.749 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.751 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.751 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.752 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.752 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.753 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.753 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.754 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.756 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.756 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.757 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.757 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.758 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.758 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.759 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.759 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.759 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.759 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.760 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.760 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.760 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.760 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.761 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.761 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.761 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.761 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.762 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.762 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.762 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.762 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.762 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.763 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:05.765 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:05.765 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:05.766 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.767 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.767 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.768 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.768 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:05.769 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:05.769 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:05.770 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.771 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.772 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.772 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.773 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:05.773 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:05.774 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:05.774 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.775 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.776 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.776 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.777 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:05.777 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:05.778 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:05.778 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.779 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.779 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.779 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.780 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:05.781 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:05.781 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:05.781 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:05.782 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.782 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.783 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.784 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.784 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.787 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:10:05.789 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:10:05.791 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:10:05.794 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:10:05.796 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:10:05.798 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:10:05.800 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:10:05.803 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:10:05.804 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.806 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:10:05.806 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.808 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:10:05.808 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.809 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.809 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.809 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.809 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.811 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:05.813 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:05.814 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:05.814 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.814 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:05.815 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.816 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:10:05.816 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:05.817 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.817 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:05.817 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.817 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:05.818 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.819 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:05.823 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.824 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.828 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:10:05.829 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:10:05.830 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.830 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.830 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.830 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.831 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.831 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.832 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:05.832 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.restaurante_id,
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco 
    from
        produtos p1_0 
    where
        p1_0.restaurante_id=?
2025-08-03 13:10:05.834 [main] DEBUG [] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-03 13:10:05.835 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.839 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-03 13:10:05.839 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:05.840 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-03 13:10:05.841 [main] DEBUG [4fcea03cda4c43e9] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-03 13:10:05.843 [main] DEBUG [4fcea03cda4c43e9] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=1, numeroPedido='PEDIDO20250729', dataPedido='2025-08-03T13:10:05.835963' (truncated)...]
2025-08-03 13:10:05.858 [main] DEBUG [4fcea03cda4c43e9] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-03 13:10:05.859 [main] DEBUG [4fcea03cda4c43e9] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-03 13:10:05.859 [main] DEBUG [4fcea03cda4c43e9] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:05.860 [main] DEBUG [4fcea03cda4c43e9] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:05.861 [main] DEBUG [4fcea03cda4c43e9] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:05.862 [main] DEBUG [4fcea03cda4c43e9] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.866 [main] DEBUG [4fcea03cda4c43e9] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.866 [main] DEBUG [4fcea03cda4c43e9] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:05.867 [main] DEBUG [4fcea03cda4c43e9] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-03 13:10:05.869 [main] DEBUG [4fcea03cda4c43e9] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:05.869 [main] DEBUG [4fcea03cda4c43e9] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@136fcf13]
2025-08-03 13:10:05.875 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@5d7336ad, started on Sun Aug 03 13:10:04 BRT 2025
2025-08-03 13:10:05.877 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:10:05.877 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:10:05.877 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:10:05.877 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:10:05.878 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:10:05.878 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:10:05.878 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:10:05.878 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-15 - Shutdown initiated...
2025-08-03 13:10:05.879 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-15 - Shutdown completed.
2025-08-03 13:10:05.885 [main] INFO  [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.deliverytech.delivery.controller.RestauranteControllerITTest]: RestauranteControllerITTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-03 13:10:05.888 [main] INFO  [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.deliverytech.delivery.DeliveryApiApplication for test class com.deliverytech.delivery.controller.RestauranteControllerITTest
2025-08-03 13:10:05.891 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:10:05.917 [main] INFO  [] c.d.d.c.RestauranteControllerITTest - Starting RestauranteControllerITTest using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:10:05.917 [main] DEBUG [] c.d.d.c.RestauranteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:10:05.918 [main] INFO  [] c.d.d.c.RestauranteControllerITTest - The following 1 profile is active: "test"
2025-08-03 13:10:05.919 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@616171ef
2025-08-03 13:10:06.105 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:10:06.117 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 5 JPA repository interfaces.
2025-08-03 13:10:06.184 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:10:06.185 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-16 - Starting...
2025-08-03 13:10:06.185 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-16 - Added connection conn150: url=jdbc:h2:mem:testdb user=SA
2025-08-03 13:10:06.185 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-16 - Start completed.
2025-08-03 13:10:06.186 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:10:06.229 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:10:06.229 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:10:06.229 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:10:06.229 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:10:06.229 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:10:06.230 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:10:06.230 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:10:06.231 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:10:06.231 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:10:06.232 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:10:06.232 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:10:06.233 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:10:06.233 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:10:06.234 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:10:06.235 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:10:06.235 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:10:06.236 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:10:06.237 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:10:06.364 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:10:06.434 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:10:06.462 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:10:06.518 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:10:06.550 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:10:06.556 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:10:06.608 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-03 13:10:06.618 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 13:10:06.618 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 13:10:06.618 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-03 13:10:06.618 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-03 13:10:06.619 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-03 13:10:06.630 [main] INFO  [] c.d.d.c.RestauranteControllerITTest - Started RestauranteControllerITTest in 0.74 seconds (process running for 41.233)
2025-08-03 13:10:06.632 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:10:06.634 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:10:06.635 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:10:06.636 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:10:06.992 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.992 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.992 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.993 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.993 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.993 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.995 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.995 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.995 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.996 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.996 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.996 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.997 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.998 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.998 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.998 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.999 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:06.999 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.000 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.001 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.002 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.002 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.002 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.003 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.003 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.004 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.004 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.004 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.004 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.005 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.005 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.005 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.006 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.006 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.006 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.006 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.007 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.007 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.007 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.007 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.007 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.008 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.009 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:07.010 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:07.010 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:07.011 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.012 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.012 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.012 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.013 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:07.014 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:07.014 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:07.014 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.015 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.015 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.016 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.016 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:07.017 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:07.017 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:07.017 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.018 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.018 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.018 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.019 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:07.020 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:07.020 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:07.020 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.021 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.021 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.022 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.022 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:07.023 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:07.023 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:07.024 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:07.024 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.024 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.025 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.025 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.025 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.027 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:10:07.029 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:10:07.031 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:10:07.032 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:10:07.033 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:10:07.034 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:10:07.036 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:10:07.038 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:10:07.039 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.040 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:10:07.041 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.042 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:10:07.043 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.043 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.043 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.043 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.044 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.046 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:07.048 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:07.048 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:07.049 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.049 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:07.049 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.051 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:10:07.051 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:07.052 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.052 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:07.052 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.052 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:07.052 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.054 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:07.073 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.077 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes?page=0&size=10
2025-08-03 13:10:07.078 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:07.079 [main] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:10:07.080 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes?page=0&size=10
2025-08-03 13:10:07.080 [main] DEBUG [dbac69a698d94896] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#listarRestaurantesComFiltro(String, Boolean, Pageable)
2025-08-03 13:10:07.103 [main] DEBUG [dbac69a698d94896] org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Restaurante r 
    WHERE
        (
            :categoria IS NULL 
            OR r.categoria = :categoria
        ) 
        AND (
            :ativo IS NULL 
            OR r.ativo = :ativo
        ) */ select
            r1_0.id,
            r1_0.ativo,
            r1_0.avaliacao,
            r1_0.categoria,
            r1_0.data_criacao,
            r1_0.endereco,
            r1_0.horario_funcionamento,
            r1_0.nome,
            r1_0.taxa_entrega,
            r1_0.telefone,
            r1_0.tempo_entrega_minutos 
        from
            restaurantes r1_0 
        where
            (
                ? is null 
                or r1_0.categoria=?
            ) 
            and (
                ? is null 
                or r1_0.ativo=?
            ) 
        fetch
            first ? rows only
2025-08-03 13:10:07.109 [main] DEBUG [dbac69a698d94896] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:07.109 [main] DEBUG [dbac69a698d94896] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.PagedResponseWrapper@3406cc54]
2025-08-03 13:10:07.131 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.134 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing PUT /api/restaurantes/8
2025-08-03 13:10:07.134 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:07.136 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured PUT /api/restaurantes/8
2025-08-03 13:10:07.136 [main] DEBUG [529ffa097fb040d8] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#atualizarRestaurante(Long, RestauranteRequestDTO)
2025-08-03 13:10:07.162 [main] DEBUG [529ffa097fb040d8] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RestauranteRequestDTO{ativo=true, nome='Pizza Express Atualizada', categoria='Italiana', endereco='R (truncated)...]
2025-08-03 13:10:07.176 [main] DEBUG [529ffa097fb040d8] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.RestauranteController.atualizarRestaurante(java.lang.Long,com.deliverytech.delivery.dto.request.RestauranteRequestDTO); target is of class [com.deliverytech.delivery.controller.RestauranteController]
2025-08-03 13:10:07.179 [main] DEBUG [529ffa097fb040d8] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.RestauranteController.atualizarRestaurante(java.lang.Long,com.deliverytech.delivery.dto.request.RestauranteRequestDTO); target is of class [com.deliverytech.delivery.controller.RestauranteController]
2025-08-03 13:10:07.185 [main] DEBUG [529ffa097fb040d8] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:07.185 [main] DEBUG [529ffa097fb040d8] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@26a203fb]
2025-08-03 13:10:07.196 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.198 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes
2025-08-03 13:10:07.198 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:07.199 [main] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 13:10:07.199 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes
2025-08-03 13:10:07.199 [main] DEBUG [b1b18e07d7b74ac9] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#listarRestaurantesComFiltro(String, Boolean, Pageable)
2025-08-03 13:10:07.203 [main] DEBUG [b1b18e07d7b74ac9] org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Restaurante r 
    WHERE
        (
            :categoria IS NULL 
            OR r.categoria = :categoria
        ) 
        AND (
            :ativo IS NULL 
            OR r.ativo = :ativo
        ) */ select
            r1_0.id,
            r1_0.ativo,
            r1_0.avaliacao,
            r1_0.categoria,
            r1_0.data_criacao,
            r1_0.endereco,
            r1_0.horario_funcionamento,
            r1_0.nome,
            r1_0.taxa_entrega,
            r1_0.telefone,
            r1_0.tempo_entrega_minutos 
        from
            restaurantes r1_0 
        where
            (
                ? is null 
                or r1_0.categoria=?
            ) 
            and (
                ? is null 
                or r1_0.ativo=?
            ) 
        fetch
            first ? rows only
2025-08-03 13:10:07.205 [main] DEBUG [b1b18e07d7b74ac9] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:07.205 [main] DEBUG [b1b18e07d7b74ac9] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.PagedResponseWrapper@504d8195]
2025-08-03 13:10:07.215 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.217 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes/categoria/Americana
2025-08-03 13:10:07.217 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:07.218 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes/categoria/Americana
2025-08-03 13:10:07.218 [main] DEBUG [2a96b47406b8467f] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#buscarRestaurantePorCategoria(String)
2025-08-03 13:10:07.221 [main] DEBUG [2a96b47406b8467f] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:10:07.223 [main] DEBUG [2a96b47406b8467f] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:07.223 [main] DEBUG [2a96b47406b8467f] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@34ba2f95]
2025-08-03 13:10:07.235 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.237 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes/999
2025-08-03 13:10:07.237 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:07.238 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes/999
2025-08-03 13:10:07.238 [main] DEBUG [c95f06a68118439c] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#buscarPorId(Long)
2025-08-03 13:10:07.239 [main] DEBUG [c95f06a68118439c] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:07.241 [main] DEBUG [c95f06a68118439c] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleEntityNotFoundException(EntityNotFoundException, WebRequest)
2025-08-03 13:10:07.242 [main] DEBUG [c95f06a68118439c] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:07.242 [main] DEBUG [c95f06a68118439c] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@1566637b]
2025-08-03 13:10:07.242 [main] DEBUG [c95f06a68118439c] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.deliverytech.delivery.exceptions.EntityNotFoundException: Restaurante não encontrado com ID: 999]
2025-08-03 13:10:07.250 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.252 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes/12
2025-08-03 13:10:07.252 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:07.253 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes/12
2025-08-03 13:10:07.253 [main] DEBUG [8d40a87b92a9488f] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#buscarPorId(Long)
2025-08-03 13:10:07.255 [main] DEBUG [8d40a87b92a9488f] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:07.255 [main] DEBUG [8d40a87b92a9488f] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@1e60a0f7]
2025-08-03 13:10:07.266 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.267 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing PATCH /api/restaurantes/13/status
2025-08-03 13:10:07.268 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:07.268 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured PATCH /api/restaurantes/13/status
2025-08-03 13:10:07.268 [main] DEBUG [cc108558454142c5] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#ativarDesativarRestaurante(Long)
2025-08-03 13:10:07.271 [main] DEBUG [cc108558454142c5] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:07.271 [main] DEBUG [cc108558454142c5] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@74735c68]
2025-08-03 13:10:07.279 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.281 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/restaurantes
2025-08-03 13:10:07.281 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:07.282 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/restaurantes
2025-08-03 13:10:07.282 [main] DEBUG [417c97f603b3420a] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#cadastrarRestaurante(RestauranteRequestDTO)
2025-08-03 13:10:07.283 [main] DEBUG [417c97f603b3420a] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RestauranteRequestDTO{ativo=true, nome='', categoria='Italiana', endereco='Rua das Flores, 123', tel (truncated)...]
2025-08-03 13:10:07.284 [main] DEBUG [417c97f603b3420a] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException, WebRequest)
2025-08-03 13:10:07.284 [main] DEBUG [417c97f603b3420a] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:07.284 [main] DEBUG [417c97f603b3420a] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@3f92cb10]
2025-08-03 13:10:07.285 [main] DEBUG [417c97f603b3420a] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.deliverytech.delivery.dto.response.ApiResponseWrapper<com.deliverytech.delivery.dto.response.RestauranteResponseDTO>> com.deliverytech.delivery.controller.RestauranteController.cadastrarRestaurante(com.deliverytech.delivery.dto.request.RestauranteRequestDTO) with 5 errors: [Field error in object 'restauranteRequestDTO' on field 'telefone': rejected value [123]; codes [Pattern.restauranteRequestDTO.telefone,Pattern.telefone,Pattern.java.lang.String,Pattern]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restauranteRequestDTO.telefone,telefone]; arguments []; default message [telefone],[Ljakarta.validation.constraints.Pattern$Flag;@23a4adba,^\+?[0-9]{10,11}$]; default message [O telefone deve ser um número válido com 10 a 11 dígitos]] [Field error in object 'restauranteRequestDTO' on field 'nome': rejected value []; codes [Size.restauranteRequestDTO.nome,Size.nome,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restauranteRequestDTO.nome,nome]; arguments []; default message [nome],100,3]; default message [O nome do restaurante deve ter entre 3 e 100 caracteres]] [Field error in object 'restauranteRequestDTO' on field 'nome': rejected value []; codes [Size.restauranteRequestDTO.nome,Size.nome,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restauranteRequestDTO.nome,nome]; arguments []; default message [nome],100,2]; default message [O nome do restaurante deve ter entre 3 e 100 caracteres]] [Field error in object 'restauranteRequestDTO' on field 'nome': rejected value []; codes [NotBlank.restauranteRequestDTO.nome,NotBlank.nome,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restauranteRequestDTO.nome,nome]; arguments []; default message [nome]]; default message [O nome do restaurante é obrigatório]] [Field error in object 'restauranteRequestDTO' on field 'telefone': rejected value [123]; codes [ValidTelefone.restauranteRequestDTO.telefone,ValidTelefone.telefone,ValidTelefone.java.lang.String,ValidTelefone]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restauranteRequestDTO.telefone,telefone]; arguments []; default message [telefone]]; default message [Telefone deve ter formato válido (10 ou 11 digitos)]] ]
2025-08-03 13:10:07.292 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.294 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/restaurantes
2025-08-03 13:10:07.294 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 13:10:07.295 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/restaurantes
2025-08-03 13:10:07.296 [main] DEBUG [2d6b9d1aaf7c44ee] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#cadastrarRestaurante(RestauranteRequestDTO)
2025-08-03 13:10:07.296 [main] DEBUG [2d6b9d1aaf7c44ee] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RestauranteRequestDTO{ativo=true, nome='Pizza Express 123', categoria='Italiana', endereco='Rua das  (truncated)...]
2025-08-03 13:10:07.297 [main] DEBUG [2d6b9d1aaf7c44ee] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.RestauranteController.cadastrarRestaurante(com.deliverytech.delivery.dto.request.RestauranteRequestDTO); target is of class [com.deliverytech.delivery.controller.RestauranteController]
2025-08-03 13:10:07.297 [main] DEBUG [2d6b9d1aaf7c44ee] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.RestauranteController.cadastrarRestaurante(com.deliverytech.delivery.dto.request.RestauranteRequestDTO); target is of class [com.deliverytech.delivery.controller.RestauranteController]
2025-08-03 13:10:07.299 [main] DEBUG [2d6b9d1aaf7c44ee] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.nome=?
2025-08-03 13:10:07.302 [main] DEBUG [2d6b9d1aaf7c44ee] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:07.303 [main] DEBUG [2d6b9d1aaf7c44ee] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 13:10:07.303 [main] DEBUG [2d6b9d1aaf7c44ee] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@15a1a91d]
2025-08-03 13:10:07.309 [main] INFO  [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.deliverytech.delivery.DeliveryApiApplicationTests]: DeliveryApiApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-03 13:10:07.314 [main] INFO  [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.deliverytech.delivery.DeliveryApiApplication for test class com.deliverytech.delivery.DeliveryApiApplicationTests
2025-08-03 13:10:07.318 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-03 13:10:07.328 [main] INFO  [] c.d.d.DeliveryApiApplicationTests - Starting DeliveryApiApplicationTests using Java 21.0.1 with PID 5712 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 13:10:07.328 [main] DEBUG [] c.d.d.DeliveryApiApplicationTests - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 13:10:07.329 [main] INFO  [] c.d.d.DeliveryApiApplicationTests - The following 1 profile is active: "development"
2025-08-03 13:10:07.330 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@209dfa9a
2025-08-03 13:10:07.522 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 13:10:07.535 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2025-08-03 13:10:07.602 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 13:10:07.603 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-17 - Starting...
2025-08-03 13:10:07.604 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-17 - Added connection conn160: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 13:10:07.604 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-17 - Start completed.
2025-08-03 13:10:07.604 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 13:10:07.648 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:10:07.648 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:10:07.648 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:10:07.649 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:10:07.649 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:10:07.649 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:10:07.649 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 13:10:07.650 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 13:10:07.651 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 13:10:07.651 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 13:10:07.651 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 13:10:07.652 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 13:10:07.652 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 13:10:07.653 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 13:10:07.654 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 13:10:07.654 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:10:07.654 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 13:10:07.655 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:10:07.765 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 13:10:07.837 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 13:10:07.869 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 13:10:07.929 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 13:10:07.963 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 13:10:07.970 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 13:10:08.022 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 13:10:08.040 [main] INFO  [] c.d.d.DeliveryApiApplicationTests - Started DeliveryApiApplicationTests in 0.722 seconds (process running for 42.643)
2025-08-03 13:10:08.042 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 13:10:08.043 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 13:10:08.044 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 13:10:08.045 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 13:10:08.401 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.401 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.402 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.402 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.402 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.402 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.403 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.403 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.404 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.404 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.404 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.404 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.405 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.406 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.407 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.407 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.408 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.408 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.409 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.410 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.411 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.411 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.411 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.412 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.412 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.413 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.413 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.413 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.414 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.414 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.414 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.414 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.415 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.415 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.415 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.415 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.416 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.416 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.416 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.416 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.416 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.417 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.418 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:08.419 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:08.419 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:08.420 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.420 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.421 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.421 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.422 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:08.423 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:08.423 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:08.424 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.424 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.425 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.425 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.426 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:08.427 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:08.427 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:08.428 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.428 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.429 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.429 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.430 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:08.431 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:08.431 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:08.431 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.432 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.432 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.432 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.433 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:08.433 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:08.434 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:08.434 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 13:10:08.434 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.435 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.435 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.436 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.436 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 13:10:08.438 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 13:10:08.439 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 13:10:08.441 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 13:10:08.443 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 13:10:08.444 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 13:10:08.446 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 13:10:08.447 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 13:10:08.449 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 13:10:08.449 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.451 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 13:10:08.451 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.453 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 13:10:08.453 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.453 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.453 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.454 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.454 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.455 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:08.457 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:08.457 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:08.458 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.458 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:08.458 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.459 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 13:10:08.459 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:08.460 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.460 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:08.460 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.460 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 13:10:08.461 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 13:10:08.462 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 13:10:09.731 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 13:10:09.753 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 13:10:10.012 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 13:10:10.018 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 13:10:10.051 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:10:10.052 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:10:10.053 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:10:10.055 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:10:10.056 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:10:10.057 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:10:10.058 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:10:10.060 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-03 13:10:10.062 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-03 13:10:10.079 [SpringApplicationShutdownHook] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@616171ef, started on Sun Aug 03 13:10:05 BRT 2025
2025-08-03 13:10:10.084 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:10:10.085 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:10:10.086 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:10:10.087 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:10:10.089 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:10:10.089 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:10:10.090 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:10:10.092 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-16 - Shutdown initiated...
2025-08-03 13:10:10.093 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-16 - Shutdown completed.
2025-08-03 13:10:10.094 [SpringApplicationShutdownHook] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@209dfa9a, started on Sun Aug 03 13:10:07 BRT 2025
2025-08-03 13:10:10.101 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 13:10:10.101 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 13:10:10.102 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 13:10:10.102 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 13:10:10.103 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 13:10:10.103 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 13:10:10.103 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 13:10:10.104 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-17 - Shutdown initiated...
2025-08-03 13:10:10.107 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-17 - Shutdown completed.
2025-08-03 16:26:53.728 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 27256 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 16:26:53.758 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 16:26:53.759 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 16:26:53.803 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 16:26:53.803 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 16:26:55.522 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 16:26:55.525 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 16:26:55.725 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 184 ms. Found 5 JPA repository interfaces.
2025-08-03 16:26:55.748 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 16:26:55.750 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-03 16:26:55.771 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 16:26:55.780 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 16:26:55.781 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 16:26:55.781 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 16:26:55.790 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 16:26:55.791 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28 ms. Found 0 Redis repository interfaces.
2025-08-03 16:26:56.781 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 16:26:56.797 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 16:26:56.800 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 16:26:56.800 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 16:26:56.875 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 16:26:56.875 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3072 ms
2025-08-03 16:26:58.238 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 16:26:58.287 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 16:26:58.473 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 16:26:58.475 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 16:26:58.500 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 16:26:59.618 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 16:26:59.621 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 16:26:59.622 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 16:26:59.622 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 16:26:59.622 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 16:26:59.622 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 16:26:59.627 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 16:26:59.636 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 16:26:59.638 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 16:26:59.640 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 16:26:59.641 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 16:26:59.643 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 16:26:59.646 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 16:26:59.657 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 16:26:59.658 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 16:26:59.659 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 16:26:59.660 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 16:26:59.664 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 16:27:00.149 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 16:27:00.150 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 16:27:00.256 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 16:27:01.546 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 16:27:02.020 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 16:27:02.133 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 16:27:02.334 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 16:27:02.503 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 16:27:02.625 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 16:27:02.686 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 16:27:03.422 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 16:27:03.470 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 16:27:03.526 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 16:27:03.551 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 16:27:03.568 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 10.678 seconds (process running for 12.149)
2025-08-03 16:27:03.766 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 16:27:03.804 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 16:27:03.807 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 16:27:03.809 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 16:27:04.216 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.228 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.229 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.229 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.230 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.230 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.240 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.241 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.242 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.243 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.243 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.244 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.265 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.267 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.268 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.269 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.270 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.271 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.280 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:27:04.289 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:27:04.291 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:27:04.292 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:27:04.293 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:27:04.294 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:27:04.296 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.297 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.297 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.298 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.299 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.300 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.300 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.301 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.301 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.302 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.303 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.304 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.304 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.305 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.306 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.306 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.307 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.308 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.311 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:27:04.314 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:27:04.316 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:27:04.317 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:27:04.318 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.320 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.321 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.327 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:27:04.329 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:27:04.330 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:27:04.332 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:27:04.333 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.333 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.334 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.335 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:27:04.336 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:27:04.337 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:27:04.338 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:27:04.339 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.340 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.341 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.342 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:27:04.343 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:27:04.345 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:27:04.346 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:27:04.347 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.348 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.349 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.350 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:27:04.351 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:27:04.352 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:27:04.353 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:27:04.354 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:27:04.355 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.356 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.356 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.357 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:27:04.395 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 16:27:04.399 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 16:27:04.406 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 16:27:04.412 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 16:27:04.416 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 16:27:04.421 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 16:27:04.426 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 16:27:04.430 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 16:27:04.432 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:27:04.438 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 16:27:04.439 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:27:04.442 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 16:27:04.442 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:27:04.443 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:27:04.444 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:27:04.444 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:27:04.445 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:27:04.448 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 16:27:04.452 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 16:27:04.453 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:27:04.454 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:27:04.455 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:27:04.455 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:27:04.462 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 16:27:04.463 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:27:04.464 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:27:04.465 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:27:04.478 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:27:04.479 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:27:04.479 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:27:04.484 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 16:27:56.000 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 16:27:56.158 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 16:27:56.239 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 16:27:56.244 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 16:27:56.252 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 16:27:56.253 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 16:27:56.253 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 16:27:56.254 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 16:27:56.255 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 16:27:56.303 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 16:27:56.304 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 16:27:56.310 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 16:35:18.703 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 3792 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 16:35:18.815 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 16:35:18.816 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 16:35:18.900 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 16:35:18.900 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 16:35:21.959 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 16:35:21.961 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 16:35:22.184 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 210 ms. Found 5 JPA repository interfaces.
2025-08-03 16:35:22.204 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 16:35:22.206 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-03 16:35:22.229 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 16:35:22.230 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 16:35:22.230 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 16:35:22.231 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 16:35:22.231 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 16:35:22.231 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2025-08-03 16:35:23.333 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 16:35:23.350 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 16:35:23.353 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 16:35:23.353 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 16:35:23.431 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 16:35:23.431 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4531 ms
2025-08-03 16:35:24.405 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 16:35:24.440 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 16:35:24.631 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 16:35:24.632 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 16:35:24.656 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 16:35:25.647 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 16:35:25.651 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 16:35:25.651 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 16:35:25.651 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 16:35:25.652 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 16:35:25.652 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 16:35:25.656 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 16:35:25.664 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 16:35:25.666 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 16:35:25.668 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 16:35:25.669 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 16:35:25.671 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 16:35:25.674 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 16:35:25.686 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 16:35:25.687 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 16:35:25.688 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 16:35:25.690 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 16:35:25.694 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 16:35:26.229 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 16:35:26.230 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 16:35:26.334 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 16:35:27.492 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 16:35:28.312 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 16:35:28.411 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 16:35:28.603 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 16:35:28.744 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 16:35:28.847 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 16:35:28.909 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 16:35:29.482 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 16:35:29.836 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 16:35:29.922 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 16:35:29.946 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 16:35:29.962 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 12.629 seconds (process running for 13.927)
2025-08-03 16:35:30.202 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 16:35:30.242 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 16:35:30.244 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 16:35:30.246 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 16:35:30.650 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.663 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.664 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.665 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.665 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.666 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.678 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.679 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.680 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.681 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.682 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.683 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.701 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.704 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.705 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.706 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.708 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.709 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.720 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:35:30.731 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:35:30.733 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:35:30.735 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:35:30.737 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:35:30.738 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:35:30.740 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.741 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.742 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.743 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.744 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.744 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.745 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.745 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.746 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.746 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.747 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.748 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.749 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.750 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.751 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.751 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.752 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.753 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.756 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:35:30.758 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:35:30.759 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:35:30.761 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:35:30.763 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.765 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.766 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.772 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:35:30.773 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:35:30.775 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:35:30.776 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:35:30.777 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.778 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.779 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.781 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:35:30.782 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:35:30.783 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:35:30.784 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:35:30.785 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.786 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.786 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.788 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:35:30.790 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:35:30.791 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:35:30.792 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:35:30.793 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.794 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.795 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.796 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:35:30.797 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:35:30.798 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:35:30.799 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:35:30.800 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:35:30.801 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.801 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.802 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.802 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:35:30.840 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 16:35:30.845 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 16:35:30.853 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 16:35:30.858 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 16:35:30.862 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 16:35:30.868 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 16:35:30.872 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 16:35:30.877 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 16:35:30.879 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:35:30.884 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 16:35:30.885 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:35:30.889 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 16:35:30.890 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:35:30.891 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:35:30.892 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:35:30.893 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:35:30.894 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:35:30.897 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 16:35:30.903 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 16:35:30.905 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:35:30.906 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:35:30.906 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:35:30.907 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:35:30.913 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 16:35:30.914 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:35:30.915 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:35:30.916 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:35:30.917 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:35:30.918 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:35:30.919 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:35:30.925 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 16:36:13.981 [http-nio-8080-exec-1] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 16:36:13.997 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 16:36:13.997 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 16:36:13.998 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 16:36:13.998 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 16:36:13.999 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@638a57b4
2025-08-03 16:36:14.000 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@55440d40
2025-08-03 16:36:14.000 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 16:36:14.000 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-03 16:36:14.030 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api-docs
2025-08-03 16:36:14.041 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 16:36:14.044 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 16:36:14.044 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id C8A69355BAD156C8971A91EE1C762B83
2025-08-03 16:36:14.068 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api-docs
2025-08-03 16:36:14.084 [http-nio-8080-exec-1] DEBUG [f95b5b3cb5774348] o.s.web.servlet.DispatcherServlet - GET "/api-docs", parameters={}
2025-08-03 16:36:14.086 [http-nio-8080-exec-1] DEBUG [f95b5b3cb5774348] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
2025-08-03 16:36:16.293 [http-nio-8080-exec-1] INFO  [f95b5b3cb5774348] o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 2184 ms
2025-08-03 16:36:16.368 [http-nio-8080-exec-1] DEBUG [f95b5b3cb5774348] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, */*] and supported [application/json]
2025-08-03 16:36:16.383 [http-nio-8080-exec-1] DEBUG [f95b5b3cb5774348] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 49, 46, 48, 34, 44, 34, 105, 110, 10 (truncated)...]
2025-08-03 16:36:16.394 [http-nio-8080-exec-1] DEBUG [f95b5b3cb5774348] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 16:36:25.392 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-03 16:36:25.394 [http-nio-8080-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 16:36:25.394 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 16:36:25.396 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-03 16:36:25.396 [http-nio-8080-exec-3] DEBUG [281ea4e5d29d475a] o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-08-03 16:36:25.400 [http-nio-8080-exec-3] DEBUG [281ea4e5d29d475a] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 16:36:25.446 [http-nio-8080-exec-3] DEBUG [281ea4e5d29d475a] o.s.web.client.RestTemplate - HTTP GET https://httpbin.org/status/200
2025-08-03 16:36:25.448 [http-nio-8080-exec-3] DEBUG [281ea4e5d29d475a] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 16:36:29.449 [http-nio-8080-exec-3] DEBUG [281ea4e5d29d475a] o.s.web.client.RestTemplate - Response 200 OK
2025-08-03 16:36:29.800 [boundedElastic-1] WARN  [] o.s.b.a.d.r.RedisReactiveHealthIndicator - Redis health check failed
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedReactiveConnection(LettuceConnectionFactory.java:1274)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:1149)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:120)
	at reactor.core.publisher.MonoSupplier.call(MonoSupplier.java:67)
	at reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription.run(FluxSubscribeOnCallable.java:228)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:354)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:220)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787)
	... 16 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-03 16:36:29.805 [http-nio-8080-exec-3] DEBUG [281ea4e5d29d475a] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 16:36:29.810 [http-nio-8080-exec-3] DEBUG [281ea4e5d29d475a] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@889707c]
2025-08-03 16:36:29.816 [http-nio-8080-exec-3] DEBUG [281ea4e5d29d475a] o.s.web.servlet.DispatcherServlet - Completed 503 SERVICE_UNAVAILABLE
2025-08-03 16:36:30.223 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 16:36:30.223 [http-nio-8080-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 16:36:30.223 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 16:36:30.231 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 16:36:30.239 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 16:36:30.241 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 16:36:30.241 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 16:37:26.414 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 16:37:26.498 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 16:37:26.568 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 16:37:26.579 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 16:37:26.598 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 16:37:26.599 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 16:37:26.600 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 16:37:26.600 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 16:37:26.601 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 16:37:26.631 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 16:37:26.632 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 16:37:26.635 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 16:39:57.962 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 25444 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 16:39:57.991 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 16:39:57.991 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 16:39:58.042 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 16:39:58.042 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 16:40:01.340 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 16:40:01.342 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 16:40:01.532 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 179 ms. Found 5 JPA repository interfaces.
2025-08-03 16:40:01.550 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 16:40:01.554 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-03 16:40:01.584 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 16:40:01.606 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 16:40:01.613 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 16:40:01.613 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 16:40:01.613 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 16:40:01.613 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 42 ms. Found 0 Redis repository interfaces.
2025-08-03 16:40:02.631 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 16:40:02.646 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 16:40:02.649 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 16:40:02.649 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 16:40:02.727 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 16:40:02.728 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4685 ms
2025-08-03 16:40:03.739 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 16:40:03.772 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 16:40:03.947 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 16:40:03.949 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 16:40:03.977 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 16:40:04.993 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 16:40:04.997 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 16:40:04.997 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 16:40:04.998 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 16:40:04.998 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 16:40:04.998 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 16:40:05.004 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 16:40:05.014 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 16:40:05.017 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 16:40:05.019 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 16:40:05.020 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 16:40:05.022 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 16:40:05.026 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 16:40:05.040 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 16:40:05.042 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 16:40:05.044 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 16:40:05.045 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 16:40:05.050 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 16:40:05.524 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 16:40:05.525 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 16:40:05.613 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 16:40:06.929 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 16:40:07.883 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 16:40:08.012 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 16:40:08.225 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 16:40:08.426 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 16:40:08.584 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 16:40:08.660 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 16:40:09.400 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 16:40:09.771 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 16:40:09.865 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 16:40:09.894 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 16:40:09.911 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 13.254 seconds (process running for 14.584)
2025-08-03 16:40:10.215 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 16:40:10.260 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 16:40:10.262 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 16:40:10.265 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 16:40:10.667 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.680 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.681 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.682 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.682 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.683 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.694 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.695 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.696 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.697 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.697 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.698 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.717 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.720 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.721 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.722 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.723 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.725 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.736 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:40:10.749 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:40:10.752 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:40:10.754 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:40:10.755 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:40:10.757 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:40:10.759 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.760 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.761 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.762 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.764 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.765 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.766 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.767 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.768 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.769 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.771 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.772 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.781 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.783 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.784 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.785 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.786 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.787 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.791 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:40:10.794 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:40:10.797 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:40:10.799 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:40:10.802 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.804 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.806 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.814 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:40:10.816 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:40:10.818 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:40:10.819 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:40:10.821 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.823 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.824 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.827 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:40:10.829 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:40:10.830 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:40:10.832 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:40:10.833 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.834 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.835 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.837 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:40:10.839 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:40:10.841 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:40:10.842 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:40:10.843 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.844 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.845 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.846 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:40:10.848 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:40:10.849 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:40:10.850 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 16:40:10.851 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:40:10.852 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.853 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.855 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.855 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 16:40:10.903 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 16:40:10.911 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 16:40:10.920 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 16:40:10.929 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 16:40:10.937 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 16:40:10.944 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 16:40:10.950 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 16:40:10.958 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 16:40:10.960 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:40:10.967 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 16:40:10.968 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:40:10.971 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 16:40:10.972 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:40:10.972 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:40:10.973 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:40:10.974 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:40:10.974 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:40:10.978 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 16:40:10.982 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 16:40:10.983 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:40:10.984 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:40:10.985 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:40:10.986 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:40:10.991 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 16:40:10.992 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:40:10.993 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:40:10.994 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:40:10.994 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:40:10.995 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 16:40:10.996 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 16:40:11.000 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 16:40:21.855 [http-nio-8080-exec-1] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 16:40:21.855 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 16:40:21.856 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 16:40:21.856 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 16:40:21.856 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 16:40:21.857 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@424b1424
2025-08-03 16:40:21.857 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@13f4370
2025-08-03 16:40:21.858 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 16:40:21.858 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-03 16:40:21.914 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-03 16:40:21.927 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 16:40:21.932 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 16:40:21.976 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-03 16:40:21.979 [http-nio-8080-exec-1] DEBUG [faa9dba81fff41e4] o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-08-03 16:40:22.032 [http-nio-8080-exec-1] DEBUG [faa9dba81fff41e4] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 16:40:22.111 [http-nio-8080-exec-1] DEBUG [faa9dba81fff41e4] o.s.web.client.RestTemplate - HTTP GET https://httpbin.org/status/200
2025-08-03 16:40:22.114 [http-nio-8080-exec-1] DEBUG [faa9dba81fff41e4] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 16:40:45.266 [http-nio-8080-exec-1] WARN  [faa9dba81fff41e4] o.s.b.a.health.HealthEndpointSupport - Health contributor com.deliverytech.delivery.health.ExternalServiceHealthIndicator (externalService) took 23224ms to respond
2025-08-03 16:40:45.713 [boundedElastic-1] WARN  [] o.s.b.a.d.r.RedisReactiveHealthIndicator - Redis health check failed
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedReactiveConnection(LettuceConnectionFactory.java:1274)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:1149)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:120)
	at reactor.core.publisher.MonoSupplier.call(MonoSupplier.java:67)
	at reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription.run(FluxSubscribeOnCallable.java:228)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:354)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:220)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787)
	... 16 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-03 16:40:45.723 [http-nio-8080-exec-1] DEBUG [faa9dba81fff41e4] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 16:40:45.766 [http-nio-8080-exec-1] DEBUG [faa9dba81fff41e4] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@5f87ae42]
2025-08-03 16:40:45.786 [http-nio-8080-exec-1] DEBUG [faa9dba81fff41e4] o.s.web.servlet.DispatcherServlet - Completed 503 SERVICE_UNAVAILABLE
2025-08-03 16:40:45.990 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 16:40:45.992 [http-nio-8080-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 16:40:45.993 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 16:40:46.002 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 16:40:46.015 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 16:40:46.017 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 16:40:46.018 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 17:22:01.757 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 17:22:01.959 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 17:22:02.452 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 17:22:02.500 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 17:22:02.586 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 17:22:02.588 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 17:22:02.590 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 17:22:02.590 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 17:22:02.591 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 17:22:02.843 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 17:22:02.844 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 17:22:02.871 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 17:24:31.824 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 19480 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 17:24:31.845 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 17:24:31.846 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 17:24:31.909 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 17:24:31.909 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 17:24:34.142 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 17:24:34.144 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 17:24:34.332 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 172 ms. Found 5 JPA repository interfaces.
2025-08-03 17:24:34.350 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 17:24:34.353 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-03 17:24:34.377 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 17:24:34.391 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 17:24:34.392 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 17:24:34.392 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 17:24:34.392 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 17:24:34.392 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 0 Redis repository interfaces.
2025-08-03 17:24:35.422 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 17:24:35.448 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 17:24:35.451 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 17:24:35.451 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 17:24:35.522 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 17:24:35.522 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3612 ms
2025-08-03 17:24:36.452 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 17:24:36.494 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 17:24:36.676 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 17:24:36.678 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 17:24:36.705 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 17:24:37.914 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 17:24:37.918 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 17:24:37.918 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 17:24:37.918 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 17:24:37.918 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 17:24:37.919 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 17:24:37.924 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 17:24:37.931 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 17:24:37.934 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 17:24:37.936 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 17:24:37.938 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 17:24:37.940 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 17:24:37.943 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 17:24:37.955 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 17:24:37.957 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 17:24:37.958 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 17:24:37.959 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 17:24:37.965 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 17:24:38.454 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 17:24:38.456 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 17:24:38.682 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 17:24:39.942 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 17:24:41.002 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 17:24:41.145 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 17:24:41.390 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 17:24:41.632 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 17:24:41.786 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 17:24:41.860 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 17:24:42.768 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 17:24:42.831 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 17:24:42.890 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 17:24:42.915 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 17:24:42.932 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 12.728 seconds (process running for 13.944)
2025-08-03 17:24:43.164 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 17:24:43.213 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 17:24:43.218 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 17:24:43.222 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 17:24:43.642 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.669 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.671 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.673 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.674 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.676 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.689 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.691 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.692 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.692 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.692 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.695 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.724 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.727 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.728 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.728 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.729 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.730 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.740 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:24:43.749 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:24:43.751 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:24:43.753 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:24:43.754 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:24:43.757 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:24:43.759 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.761 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.761 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.762 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.762 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.764 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.765 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.765 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.766 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.767 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.768 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.768 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.769 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.769 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.770 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.770 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.771 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.772 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.776 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 17:24:43.778 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 17:24:43.779 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 17:24:43.781 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:24:43.782 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.786 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.787 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.794 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 17:24:43.796 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 17:24:43.797 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 17:24:43.798 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:24:43.799 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.800 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.801 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.802 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 17:24:43.804 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 17:24:43.805 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 17:24:43.806 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:24:43.807 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.808 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.809 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.811 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 17:24:43.812 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 17:24:43.813 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 17:24:43.814 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:24:43.816 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.817 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.818 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.820 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 17:24:43.833 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 17:24:43.834 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 17:24:43.835 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 17:24:43.836 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:24:43.838 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.839 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.839 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.840 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 17:24:43.882 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 17:24:43.888 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 17:24:43.898 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 17:24:43.906 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 17:24:43.913 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 17:24:43.920 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 17:24:43.926 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 17:24:43.933 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 17:24:43.935 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:24:43.941 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 17:24:43.944 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:24:43.948 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 17:24:43.949 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:24:43.950 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:24:43.951 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:24:43.951 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:24:43.952 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:24:43.957 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 17:24:43.962 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 17:24:43.964 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 17:24:43.964 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:24:43.965 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 17:24:43.966 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:24:43.976 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 17:24:43.977 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 17:24:43.978 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:24:43.979 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 17:24:43.980 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:24:43.981 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 17:24:43.981 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:24:44.007 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 17:27:20.403 [http-nio-8080-exec-1] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 17:27:20.435 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 17:27:20.442 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 17:27:20.443 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 17:27:20.443 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 17:27:20.537 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@ae2898
2025-08-03 17:27:20.539 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@36274c2c
2025-08-03 17:27:20.544 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 17:27:20.544 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 108 ms
2025-08-03 17:27:20.796 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-03 17:27:20.853 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 17:27:20.865 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 17:27:20.866 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1F8073A45A8989BE567C6872572D31FC
2025-08-03 17:27:20.913 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-03 17:27:21.048 [http-nio-8080-exec-1] DEBUG [557bcba65c7248c0] o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-08-03 17:27:21.167 [http-nio-8080-exec-1] DEBUG [557bcba65c7248c0] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 17:27:21.435 [http-nio-8080-exec-1] DEBUG [557bcba65c7248c0] o.s.web.client.RestTemplate - HTTP GET https://httpbin.org/status/200
2025-08-03 17:27:21.459 [http-nio-8080-exec-1] DEBUG [557bcba65c7248c0] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 17:27:24.424 [http-nio-8080-exec-1] DEBUG [557bcba65c7248c0] o.s.web.client.RestTemplate - Response 200 OK
2025-08-03 17:27:25.013 [boundedElastic-1] WARN  [] o.s.b.a.d.r.RedisReactiveHealthIndicator - Redis health check failed
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedReactiveConnection(LettuceConnectionFactory.java:1274)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:1149)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:120)
	at reactor.core.publisher.MonoSupplier.call(MonoSupplier.java:67)
	at reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription.run(FluxSubscribeOnCallable.java:228)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:352)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:220)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787)
	... 16 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-03 17:27:25.034 [http-nio-8080-exec-1] DEBUG [557bcba65c7248c0] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 17:27:25.109 [http-nio-8080-exec-1] DEBUG [557bcba65c7248c0] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@7ff0b9cb]
2025-08-03 17:27:25.148 [http-nio-8080-exec-1] DEBUG [557bcba65c7248c0] o.s.web.servlet.DispatcherServlet - Completed 503 SERVICE_UNAVAILABLE
2025-08-03 17:27:25.515 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 17:27:25.517 [http-nio-8080-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 17:27:25.518 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 17:27:25.539 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 17:27:25.571 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 17:27:25.573 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 17:27:25.573 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 17:30:35.863 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 17:30:36.008 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 17:30:36.309 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 17:30:36.325 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 17:30:36.347 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 17:30:36.348 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 17:30:36.348 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 17:30:36.349 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 17:30:36.350 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 17:30:36.432 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 17:30:36.433 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 17:30:36.439 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 17:39:51.833 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 26784 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 17:39:51.874 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 17:39:51.875 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 17:39:51.928 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 17:39:51.928 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 17:39:56.377 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 17:39:56.380 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 17:39:56.621 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 223 ms. Found 5 JPA repository interfaces.
2025-08-03 17:39:56.635 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 17:39:56.646 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-03 17:39:56.665 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 17:39:56.671 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 17:39:56.671 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 17:39:56.671 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 17:39:56.672 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 17:39:56.672 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-08-03 17:39:57.721 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 17:39:57.737 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 17:39:57.740 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 17:39:57.740 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 17:39:57.822 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 17:39:57.823 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5894 ms
2025-08-03 17:39:58.795 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 17:39:58.825 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 17:39:58.999 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 17:39:59.002 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 17:39:59.031 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 17:40:00.205 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 17:40:00.209 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 17:40:00.210 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 17:40:00.210 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 17:40:00.210 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 17:40:00.211 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 17:40:00.216 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 17:40:00.228 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 17:40:00.230 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 17:40:00.232 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 17:40:00.234 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 17:40:00.235 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 17:40:00.239 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 17:40:00.252 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 17:40:00.254 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 17:40:00.255 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 17:40:00.257 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 17:40:00.261 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 17:40:00.791 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 17:40:00.793 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 17:40:00.888 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 17:40:02.266 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 17:40:03.254 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 17:40:03.382 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 17:40:03.565 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 17:40:03.759 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 17:40:03.903 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 17:40:03.973 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 17:40:04.706 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 17:40:05.186 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 17:40:05.262 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 17:40:05.277 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 17:40:05.292 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 14.765 seconds (process running for 16.338)
2025-08-03 17:40:05.524 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 17:40:05.569 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 17:40:05.571 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 17:40:05.573 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 17:40:05.980 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:05.994 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:05.995 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:05.996 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:05.996 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:05.997 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.007 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.008 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.009 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.010 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.010 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.011 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.027 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.028 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.029 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.030 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.030 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.031 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.044 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:40:06.054 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:40:06.055 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:40:06.056 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:40:06.057 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:40:06.058 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:40:06.060 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.061 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.061 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.062 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.063 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.063 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.064 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.065 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.065 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.066 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.067 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.067 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.068 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.068 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.069 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.070 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.070 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.071 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.074 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 17:40:06.076 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 17:40:06.078 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 17:40:06.079 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:40:06.081 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.083 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.084 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.089 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 17:40:06.090 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 17:40:06.091 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 17:40:06.092 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:40:06.093 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.094 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.095 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.096 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 17:40:06.097 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 17:40:06.098 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 17:40:06.099 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:40:06.100 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.101 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.102 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.103 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 17:40:06.104 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 17:40:06.105 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 17:40:06.106 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:40:06.107 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.108 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.108 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.110 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 17:40:06.111 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 17:40:06.112 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 17:40:06.113 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 17:40:06.114 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:40:06.115 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.116 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.117 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.117 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 17:40:06.155 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 17:40:06.160 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 17:40:06.167 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 17:40:06.172 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 17:40:06.175 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 17:40:06.187 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 17:40:06.191 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 17:40:06.195 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 17:40:06.198 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:40:06.204 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 17:40:06.205 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:40:06.208 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 17:40:06.209 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:40:06.210 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:40:06.211 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:40:06.211 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:40:06.212 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:40:06.217 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 17:40:06.222 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 17:40:06.224 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 17:40:06.225 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:40:06.226 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 17:40:06.227 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:40:06.233 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 17:40:06.235 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 17:40:06.236 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:40:06.237 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 17:40:06.237 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:40:06.238 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 17:40:06.239 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 17:40:06.244 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 17:54:59.795 [http-nio-8080-exec-1] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 17:54:59.868 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 17:54:59.874 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 17:54:59.876 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 17:54:59.928 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 17:55:00.044 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5ab9c197
2025-08-03 17:55:00.045 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@612b8997
2025-08-03 17:55:00.050 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 17:55:00.050 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 182 ms
2025-08-03 17:55:00.306 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-03 17:55:00.360 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 17:55:00.367 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 17:55:00.368 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 80A8C3305DA79380B1847199E13287DD
2025-08-03 17:55:00.413 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-03 17:55:00.518 [http-nio-8080-exec-1] DEBUG [6101ae44a0d045de] o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-08-03 17:55:00.620 [http-nio-8080-exec-1] DEBUG [6101ae44a0d045de] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 17:55:00.746 [http-nio-8080-exec-1] DEBUG [6101ae44a0d045de] o.s.web.client.RestTemplate - HTTP GET https://httpbin.org/status/200
2025-08-03 17:55:00.780 [http-nio-8080-exec-1] DEBUG [6101ae44a0d045de] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 17:55:05.310 [http-nio-8080-exec-1] DEBUG [6101ae44a0d045de] o.s.web.client.RestTemplate - Response 200 OK
2025-08-03 17:55:05.911 [boundedElastic-1] WARN  [] o.s.b.a.d.r.RedisReactiveHealthIndicator - Redis health check failed
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedReactiveConnection(LettuceConnectionFactory.java:1274)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:1149)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:120)
	at reactor.core.publisher.MonoSupplier.call(MonoSupplier.java:67)
	at reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription.run(FluxSubscribeOnCallable.java:228)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:352)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:220)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787)
	... 16 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-03 17:55:05.933 [http-nio-8080-exec-1] DEBUG [6101ae44a0d045de] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 17:55:06.018 [http-nio-8080-exec-1] DEBUG [6101ae44a0d045de] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@24787be1]
2025-08-03 17:55:06.054 [http-nio-8080-exec-1] DEBUG [6101ae44a0d045de] o.s.web.servlet.DispatcherServlet - Completed 503 SERVICE_UNAVAILABLE
2025-08-03 17:55:06.373 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 17:55:06.374 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 17:55:06.374 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 17:55:06.386 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 17:55:06.402 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 17:55:06.403 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 17:55:06.404 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 18:05:03.894 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 18:05:04.088 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 18:05:04.842 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 18:05:04.901 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 18:05:04.973 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 18:05:04.974 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 18:05:04.975 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 18:05:04.976 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 18:05:04.977 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 18:05:05.278 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 18:05:05.279 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 18:05:05.301 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 18:09:03.057 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 5856 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 18:09:03.114 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 18:09:03.115 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 18:09:03.192 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 18:09:03.192 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 18:09:08.602 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 18:09:08.604 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 18:09:08.805 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 190 ms. Found 5 JPA repository interfaces.
2025-08-03 18:09:08.824 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 18:09:08.827 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-03 18:09:08.864 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 18:09:08.864 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 18:09:08.867 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 18:09:08.868 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 18:09:08.868 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 18:09:08.869 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-08-03 18:09:09.957 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 18:09:09.975 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 18:09:09.979 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 18:09:09.980 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 18:09:10.076 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 18:09:10.077 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6884 ms
2025-08-03 18:09:11.099 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 18:09:11.144 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 18:09:11.417 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 18:09:11.421 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 18:09:11.468 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 18:09:12.652 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 18:09:12.657 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 18:09:12.658 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 18:09:12.658 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 18:09:12.658 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 18:09:12.658 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 18:09:12.665 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 18:09:12.676 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 18:09:12.678 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 18:09:12.680 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 18:09:12.682 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 18:09:12.684 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 18:09:12.688 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 18:09:12.702 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 18:09:12.705 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 18:09:12.707 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 18:09:12.708 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 18:09:12.714 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 18:09:13.442 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 18:09:13.444 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 18:09:13.589 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 18:09:15.039 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 18:09:16.145 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 18:09:16.267 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 18:09:16.477 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 18:09:16.657 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 18:09:16.846 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 18:09:16.925 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 18:09:17.844 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 18:09:18.308 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 18:09:18.432 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 18:09:18.448 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 18:09:18.474 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 17.683 seconds (process running for 18.768)
2025-08-03 18:09:18.770 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 18:09:18.827 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 18:09:18.830 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 18:09:18.833 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 18:09:19.280 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.309 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.311 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.312 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.314 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.316 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.331 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.333 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.334 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.336 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.337 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.338 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.355 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.357 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.358 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.359 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.361 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.364 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.375 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:09:19.385 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:09:19.387 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:09:19.389 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:09:19.392 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:09:19.393 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:09:19.396 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.398 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.398 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.399 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.400 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.401 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.402 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.403 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.404 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.406 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.407 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.408 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.409 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.410 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.411 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.412 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.413 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.414 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.419 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:09:19.423 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:09:19.425 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:09:19.427 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:09:19.430 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.433 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.434 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.442 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:09:19.445 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:09:19.447 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:09:19.449 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:09:19.451 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.452 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.453 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.456 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:09:19.457 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:09:19.459 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:09:19.461 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:09:19.462 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.463 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.464 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.466 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:09:19.468 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:09:19.471 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:09:19.472 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:09:19.473 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.475 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.475 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.477 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:09:19.478 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:09:19.479 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:09:19.480 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:09:19.481 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:09:19.483 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.485 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.486 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.487 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:09:19.545 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 18:09:19.557 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 18:09:19.570 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 18:09:19.579 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 18:09:19.586 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 18:09:19.616 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 18:09:19.623 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 18:09:19.631 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 18:09:19.633 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:09:19.646 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 18:09:19.648 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:09:19.656 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 18:09:19.658 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:09:19.661 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:09:19.663 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:09:19.665 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:09:19.667 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:09:19.674 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 18:09:19.680 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 18:09:19.682 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:09:19.683 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:09:19.684 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:09:19.703 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:09:19.709 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 18:09:19.711 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:09:19.711 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:09:19.713 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:09:19.714 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:09:19.714 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:09:19.715 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:09:19.720 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 18:09:51.470 [http-nio-8080-exec-2] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 18:09:51.470 [http-nio-8080-exec-2] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 18:09:51.470 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 18:09:51.470 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 18:09:51.470 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 18:09:51.473 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@51d334a0
2025-08-03 18:09:51.474 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@3ba24374
2025-08-03 18:09:51.474 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 18:09:51.474 [http-nio-8080-exec-2] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-08-03 18:09:51.511 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-03 18:09:51.523 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 18:09:51.526 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 18:09:51.540 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-03 18:09:51.555 [http-nio-8080-exec-2] DEBUG [9fbe091701a84b0f] o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-08-03 18:09:51.573 [http-nio-8080-exec-2] DEBUG [9fbe091701a84b0f] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 18:09:51.610 [http-nio-8080-exec-2] DEBUG [9fbe091701a84b0f] o.s.web.client.RestTemplate - HTTP GET https://httpbin.org/status/200
2025-08-03 18:09:51.614 [http-nio-8080-exec-2] DEBUG [9fbe091701a84b0f] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 18:09:55.527 [http-nio-8080-exec-2] DEBUG [9fbe091701a84b0f] o.s.web.client.RestTemplate - Response 200 OK
2025-08-03 18:09:55.930 [boundedElastic-1] WARN  [] o.s.b.a.d.r.RedisReactiveHealthIndicator - Redis health check failed
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedReactiveConnection(LettuceConnectionFactory.java:1274)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:1149)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:120)
	at reactor.core.publisher.MonoSupplier.call(MonoSupplier.java:67)
	at reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription.run(FluxSubscribeOnCallable.java:228)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:352)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:220)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787)
	... 16 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-03 18:09:55.942 [http-nio-8080-exec-2] DEBUG [9fbe091701a84b0f] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json', given [*/*] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 18:09:55.985 [http-nio-8080-exec-2] DEBUG [9fbe091701a84b0f] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@5a1bb2d5]
2025-08-03 18:09:56.013 [http-nio-8080-exec-2] DEBUG [9fbe091701a84b0f] o.s.web.servlet.DispatcherServlet - Completed 503 SERVICE_UNAVAILABLE
2025-08-03 18:14:25.798 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 18:14:25.921 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 18:14:26.251 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 18:14:26.280 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 18:14:26.317 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 18:14:26.319 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 18:14:26.319 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 18:14:26.320 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 18:14:26.321 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 18:14:26.451 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 18:14:26.452 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 18:14:26.462 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 18:20:06.349 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 24444 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 18:20:06.377 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 18:20:06.378 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 18:20:06.433 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 18:20:06.433 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 18:20:09.183 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 18:20:09.187 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 18:20:09.402 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 202 ms. Found 5 JPA repository interfaces.
2025-08-03 18:20:09.432 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 18:20:09.435 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-03 18:20:09.470 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 18:20:09.475 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 18:20:09.476 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 18:20:09.476 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 18:20:09.477 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 18:20:09.477 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
2025-08-03 18:20:10.710 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 18:20:10.738 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 18:20:10.744 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 18:20:10.744 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 18:20:10.839 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 18:20:10.840 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4406 ms
2025-08-03 18:20:11.907 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 18:20:11.942 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 18:20:12.119 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 18:20:12.121 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 18:20:12.148 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 18:20:13.257 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 18:20:13.260 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 18:20:13.260 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 18:20:13.260 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 18:20:13.268 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 18:20:13.268 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 18:20:13.272 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 18:20:13.282 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 18:20:13.284 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 18:20:13.286 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 18:20:13.287 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 18:20:13.290 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 18:20:13.293 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 18:20:13.305 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 18:20:13.306 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 18:20:13.307 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 18:20:13.309 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 18:20:13.313 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 18:20:13.842 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 18:20:13.843 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 18:20:13.945 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 18:20:15.349 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 18:20:16.381 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 18:20:16.538 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 18:20:16.738 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 18:20:16.919 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 18:20:17.066 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 18:20:17.135 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 18:20:17.874 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 18:20:18.249 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 18:20:18.431 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 18:20:18.473 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 18:20:18.492 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 13.508 seconds (process running for 14.582)
2025-08-03 18:20:19.232 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 18:20:19.297 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 18:20:19.299 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 18:20:19.300 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 18:20:19.709 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.723 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.724 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.725 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.726 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.728 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.739 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.742 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.744 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.746 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.748 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.749 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.775 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.778 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.780 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.783 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.785 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.787 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.803 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:20:19.818 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:20:19.821 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:20:19.825 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:20:19.828 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:20:19.833 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:20:19.836 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.840 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.842 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.843 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.844 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.845 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.846 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.847 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.848 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.849 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.849 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.850 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.851 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.853 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.857 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.858 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.859 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.860 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.864 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:20:19.867 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:20:19.869 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:20:19.871 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:20:19.874 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.876 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.876 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.884 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:20:19.887 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:20:19.888 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:20:19.890 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:20:19.891 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.892 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.893 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.894 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:20:19.895 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:20:19.896 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:20:19.897 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:20:19.900 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.902 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.902 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.904 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:20:19.905 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:20:19.917 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:20:19.918 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:20:19.919 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.920 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.921 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.923 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:20:19.925 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:20:19.926 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:20:19.927 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:20:19.928 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:20:19.930 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.932 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.933 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.933 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:20:19.979 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 18:20:19.985 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 18:20:19.994 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 18:20:20.000 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 18:20:20.004 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 18:20:20.087 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 18:20:20.091 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 18:20:20.095 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 18:20:20.096 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:20:20.102 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 18:20:20.103 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:20:20.107 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 18:20:20.108 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:20:20.108 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:20:20.109 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:20:20.109 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:20:20.110 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:20:20.113 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 18:20:20.117 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 18:20:20.118 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:20:20.119 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:20:20.120 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:20:20.120 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:20:20.127 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 18:20:20.128 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:20:20.128 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:20:20.129 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:20:20.130 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:20:20.131 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:20:20.132 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:20:20.137 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 18:24:24.195 [http-nio-8080-exec-1] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 18:24:24.195 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 18:24:24.195 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 18:24:24.195 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 18:24:24.196 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 18:24:24.198 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@10cd10bb
2025-08-03 18:24:24.199 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@5852fb34
2025-08-03 18:24:24.199 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 18:24:24.200 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-08-03 18:24:24.239 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-03 18:24:24.252 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 18:24:24.255 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 18:24:24.291 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-03 18:24:24.294 [http-nio-8080-exec-1] DEBUG [4fbcfe6c115b4f1f] o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-08-03 18:24:24.320 [http-nio-8080-exec-1] DEBUG [4fbcfe6c115b4f1f] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 18:24:24.384 [http-nio-8080-exec-1] DEBUG [4fbcfe6c115b4f1f] o.s.web.client.RestTemplate - HTTP GET https://httpbin.org/status/200
2025-08-03 18:24:24.389 [http-nio-8080-exec-1] DEBUG [4fbcfe6c115b4f1f] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 18:24:27.261 [http-nio-8080-exec-1] DEBUG [4fbcfe6c115b4f1f] o.s.web.client.RestTemplate - Response 200 OK
2025-08-03 18:24:29.723 [http-nio-8080-exec-1] WARN  [4fbcfe6c115b4f1f] o.s.b.a.d.redis.RedisHealthIndicator - Redis health check failed
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1249)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:1055)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:195)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:92)
	at org.springframework.boot.actuate.data.redis.RedisHealthIndicator.doHealthCheck(RedisHealthIndicator.java:49)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.getHealth(HealthEndpointWebExtension.java:94)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.getHealth(HealthEndpointWebExtension.java:47)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getLoggedHealth(HealthEndpointSupport.java:172)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:145)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateContribution(HealthEndpointSupport.java:156)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:141)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:110)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:81)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.health(HealthEndpointWebExtension.java:80)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.health(HealthEndpointWebExtension.java:69)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:74)
	at org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60)
	at org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$ServletWebOperationAdapter.handle(AbstractWebMvcEndpointHandlerMapping.java:327)
	at org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(AbstractWebMvcEndpointHandlerMapping.java:434)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.deliverytech.delivery.filter.CorrelationIdFilter.doFilter(CorrelationIdFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.deliverytech.delivery.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:67)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to redis/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:352)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:220)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787)
	... 174 common frames omitted
Caused by: java.net.UnknownHostException: Failed to resolve 'redis' [A(1), AAAA(28)] after 2 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:638)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
Caused by: io.netty.resolver.dns.DnsErrorCauseException: Query failed with NXDOMAIN
	at io.netty.resolver.dns.DnsResolveContext.onResponse(..)(Unknown Source)
2025-08-03 18:24:29.789 [http-nio-8080-exec-1] DEBUG [4fbcfe6c115b4f1f] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 18:24:29.841 [http-nio-8080-exec-1] DEBUG [4fbcfe6c115b4f1f] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@30a4f95f]
2025-08-03 18:24:29.867 [http-nio-8080-exec-1] DEBUG [4fbcfe6c115b4f1f] o.s.web.servlet.DispatcherServlet - Completed 503 SERVICE_UNAVAILABLE
2025-08-03 18:24:30.161 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 18:24:30.162 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 18:24:30.163 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 18:24:30.171 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 18:24:30.185 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 18:24:30.186 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 18:24:30.186 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 18:26:05.087 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 18:26:05.230 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 18:26:05.556 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 18:26:05.580 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 18:26:05.617 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 18:26:05.620 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 18:26:05.621 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 18:26:05.622 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 18:26:05.623 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 18:26:05.732 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 18:26:05.733 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 18:26:05.743 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 18:26:37.723 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 25080 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 18:26:37.789 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 18:26:37.790 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 18:26:37.848 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 18:26:37.848 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 18:26:41.809 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 18:26:41.812 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 18:26:42.035 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 206 ms. Found 5 JPA repository interfaces.
2025-08-03 18:26:42.053 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 18:26:42.054 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-03 18:26:42.075 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 18:26:42.076 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 18:26:42.076 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 18:26:42.077 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 18:26:42.077 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 18:26:42.077 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2025-08-03 18:26:43.267 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 18:26:43.285 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 18:26:43.288 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 18:26:43.288 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 18:26:43.363 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 18:26:43.363 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5514 ms
2025-08-03 18:26:44.522 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 18:26:44.561 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 18:26:44.756 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 18:26:44.757 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 18:26:44.784 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 18:26:45.900 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 18:26:45.905 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 18:26:45.905 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 18:26:45.906 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 18:26:45.906 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 18:26:45.906 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 18:26:45.922 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 18:26:45.935 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 18:26:45.938 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 18:26:45.940 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 18:26:45.942 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 18:26:45.944 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 18:26:45.949 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 18:26:45.966 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 18:26:45.968 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 18:26:45.969 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 18:26:45.971 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 18:26:45.976 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 18:26:46.778 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 18:26:46.779 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 18:26:46.938 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 18:26:48.675 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 18:26:50.279 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 18:26:50.453 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 18:26:50.772 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 18:26:51.112 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 18:26:51.323 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 18:26:51.426 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 18:26:52.394 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 18:26:52.952 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 18:26:53.041 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 18:26:53.053 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 18:26:53.070 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 16.574 seconds (process running for 17.756)
2025-08-03 18:26:53.366 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 18:26:53.428 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 18:26:53.432 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 18:26:53.435 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 18:26:53.862 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.888 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.889 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.890 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.892 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.893 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.910 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.912 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.913 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.915 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.916 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.917 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.932 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.934 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.935 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.936 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.938 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.939 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.953 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:26:53.964 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:26:53.966 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:26:53.968 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:26:53.971 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:26:53.973 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:26:53.976 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.978 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.979 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.980 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.981 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.982 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.982 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.983 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.985 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.986 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.986 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.987 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.988 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.989 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.990 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.991 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.993 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.994 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:53.997 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:26:54.000 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:26:54.005 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:26:54.008 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:26:54.011 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:54.014 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:26:54.015 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:26:54.024 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:26:54.026 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:26:54.027 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:26:54.028 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:26:54.030 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:54.031 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:26:54.031 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:26:54.033 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:26:54.034 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:26:54.035 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:26:54.037 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:26:54.038 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:54.040 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:26:54.041 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:26:54.043 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:26:54.044 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:26:54.046 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:26:54.047 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:26:54.048 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:54.049 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:26:54.050 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:26:54.052 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:26:54.053 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:26:54.054 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:26:54.055 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 18:26:54.056 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:26:54.057 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 18:26:54.058 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:26:54.058 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:26:54.059 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 18:26:54.113 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 18:26:54.126 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 18:26:54.149 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 18:26:54.163 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 18:26:54.171 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 18:26:54.181 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 18:26:54.189 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 18:26:54.202 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 18:26:54.205 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:26:54.215 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 18:26:54.217 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:26:54.221 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 18:26:54.222 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:26:54.223 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:26:54.224 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:26:54.225 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:26:54.226 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:26:54.232 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 18:26:54.238 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 18:26:54.240 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:26:54.242 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:26:54.245 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:26:54.247 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:26:54.257 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 18:26:54.260 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:26:54.261 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:26:54.262 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:26:54.262 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:26:54.264 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 18:26:54.265 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 18:26:54.274 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 18:28:03.195 [http-nio-8080-exec-1] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 18:28:03.221 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 18:28:03.223 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 18:28:03.223 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 18:28:03.224 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 18:28:03.249 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@68388c0
2025-08-03 18:28:03.249 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@9a19e42
2025-08-03 18:28:03.266 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 18:28:03.267 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 46 ms
2025-08-03 18:28:03.377 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-03 18:28:03.396 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 18:28:03.401 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 18:28:03.425 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-03 18:28:03.430 [http-nio-8080-exec-1] DEBUG [beedb8a0db57413f] o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-08-03 18:28:03.463 [http-nio-8080-exec-1] DEBUG [beedb8a0db57413f] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 18:28:03.515 [http-nio-8080-exec-1] DEBUG [beedb8a0db57413f] o.s.web.client.RestTemplate - HTTP GET https://httpbin.org/status/200
2025-08-03 18:28:03.532 [http-nio-8080-exec-1] DEBUG [beedb8a0db57413f] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 18:28:05.551 [http-nio-8080-exec-1] DEBUG [beedb8a0db57413f] o.s.web.client.RestTemplate - Response 200 OK
2025-08-03 18:28:05.573 [http-nio-8080-exec-1] DEBUG [beedb8a0db57413f] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 18:28:05.642 [http-nio-8080-exec-1] DEBUG [beedb8a0db57413f] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@6304bfce]
2025-08-03 18:28:05.675 [http-nio-8080-exec-1] DEBUG [beedb8a0db57413f] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 18:28:05.888 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 18:28:05.890 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 18:28:05.890 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 18:28:05.899 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 18:28:05.910 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 18:28:05.913 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 18:28:05.913 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 18:52:38.065 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /health
2025-08-03 18:52:38.175 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 18:52:38.182 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 18:52:38.189 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 84A97399FEA0C61522D5D73F7CF91199
2025-08-03 18:52:38.224 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /health
2025-08-03 18:52:38.479 [http-nio-8080-exec-5] WARN  [71390ac82fe247b7] o.a.c.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [186] milliseconds.
2025-08-03 18:52:38.594 [http-nio-8080-exec-5] DEBUG [71390ac82fe247b7] o.s.web.servlet.DispatcherServlet - GET "/health", parameters={}
2025-08-03 18:52:38.598 [http-nio-8080-exec-5] DEBUG [71390ac82fe247b7] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.HealthController#health()
2025-08-03 18:52:38.777 [http-nio-8080-exec-5] DEBUG [71390ac82fe247b7] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json;q=0.8', given [text/html, application/xhtml+xml, application/xml;q=0.9, */*;q=0.8] and supported [application/json, application/*+json, application/yaml]
2025-08-03 18:52:38.780 [http-nio-8080-exec-5] DEBUG [71390ac82fe247b7] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{environment=development, status=UP, service=Delivery API, timestamp=2025-08-03 18:52:38, javaVersio (truncated)...]
2025-08-03 18:52:38.798 [http-nio-8080-exec-5] DEBUG [71390ac82fe247b7] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 18:52:38.939 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 18:52:38.940 [http-nio-8080-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 18:52:38.941 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 18:52:38.974 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 18:52:38.981 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 18:52:39.000 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 18:52:39.001 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 18:53:03.475 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator
2025-08-03 18:53:03.476 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 18:53:03.477 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 18:53:03.483 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator
2025-08-03 18:53:03.485 [http-nio-8080-exec-7] DEBUG [b92436c9835d42ab] o.s.web.servlet.DispatcherServlet - GET "/actuator", parameters={}
2025-08-03 18:53:03.569 [http-nio-8080-exec-7] DEBUG [b92436c9835d42ab] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, application/xml;q=0.9, */*;q=0.8] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 18:53:03.644 [http-nio-8080-exec-7] DEBUG [b92436c9835d42ab] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{_links={self=[Link@2a35438a href = 'http://localhost:8080/actuator'], prometheus=[Link@1ea6df5 href (truncated)...]
2025-08-03 18:53:03.658 [http-nio-8080-exec-7] DEBUG [b92436c9835d42ab] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 18:53:07.111 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/prometheus
2025-08-03 18:53:07.112 [http-nio-8080-exec-8] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 18:53:07.112 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 18:53:07.114 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/prometheus
2025-08-03 18:53:07.114 [http-nio-8080-exec-8] DEBUG [fe9998ce35594c81] o.s.web.servlet.DispatcherServlet - GET "/actuator/prometheus", parameters={}
2025-08-03 18:53:07.121 [http-nio-8080-exec-8] DEBUG [fe9998ce35594c81] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 18:53:09.833 [http-nio-8080-exec-8] DEBUG [fe9998ce35594c81] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:text/plain;version=0.0.4;charset=utf-8' in response
2025-08-03 18:53:09.854 [http-nio-8080-exec-8] DEBUG [fe9998ce35594c81] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{35, 32, 72, 69, 76, 80, 32, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 95, 114, 101, 97, 1 (truncated)...]
2025-08-03 18:53:09.859 [http-nio-8080-exec-8] DEBUG [fe9998ce35594c81] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 18:53:09.918 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 18:53:09.919 [http-nio-8080-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 18:53:09.919 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 18:53:09.920 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 18:53:09.923 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 18:53:09.926 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 18:53:09.927 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 18:53:13.055 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-03 18:53:13.056 [http-nio-8080-exec-10] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 18:53:13.057 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 18:53:13.058 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-03 18:53:13.058 [http-nio-8080-exec-10] DEBUG [36a1b300c8414cf0] o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-08-03 18:53:13.059 [http-nio-8080-exec-10] DEBUG [36a1b300c8414cf0] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 18:53:13.082 [http-nio-8080-exec-10] DEBUG [36a1b300c8414cf0] o.s.web.client.RestTemplate - HTTP GET https://httpbin.org/status/200
2025-08-03 18:53:13.086 [http-nio-8080-exec-10] DEBUG [36a1b300c8414cf0] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 18:53:15.702 [http-nio-8080-exec-10] DEBUG [36a1b300c8414cf0] o.s.web.client.RestTemplate - Response 200 OK
2025-08-03 18:53:15.716 [http-nio-8080-exec-10] DEBUG [36a1b300c8414cf0] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, application/xml;q=0.9, */*;q=0.8] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 18:53:15.717 [http-nio-8080-exec-10] DEBUG [36a1b300c8414cf0] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@1163bfcf]
2025-08-03 18:53:15.719 [http-nio-8080-exec-10] DEBUG [36a1b300c8414cf0] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 19:07:57.282 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 19:07:57.562 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 19:07:58.278 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 19:07:58.312 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 19:07:58.377 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 19:07:58.382 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 19:07:58.382 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 19:07:58.383 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 19:07:58.384 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 19:07:58.786 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 19:07:58.788 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 19:07:58.812 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 19:11:37.182 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 19180 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 19:11:37.249 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 19:11:37.250 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 19:11:37.370 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 19:11:37.401 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 19:11:42.695 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 19:11:42.697 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 19:11:42.921 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 213 ms. Found 5 JPA repository interfaces.
2025-08-03 19:11:42.936 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 19:11:42.938 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-03 19:11:42.956 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:11:42.957 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:11:42.967 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:11:42.967 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:11:42.968 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:11:42.968 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 0 Redis repository interfaces.
2025-08-03 19:11:44.182 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 19:11:44.212 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 19:11:44.215 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 19:11:44.216 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 19:11:44.295 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 19:11:44.296 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6893 ms
2025-08-03 19:11:45.458 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 19:11:45.496 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 19:11:45.707 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 19:11:45.709 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 19:11:45.735 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 19:11:46.889 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 19:11:46.893 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 19:11:46.893 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 19:11:46.893 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 19:11:46.893 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 19:11:46.894 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 19:11:46.898 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 19:11:46.907 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 19:11:46.909 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 19:11:46.911 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 19:11:46.912 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 19:11:46.914 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 19:11:46.917 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 19:11:46.928 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 19:11:46.930 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 19:11:46.931 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 19:11:46.932 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 19:11:46.937 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 19:11:47.387 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 19:11:47.389 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 19:11:47.514 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 19:11:48.788 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 19:11:49.823 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 19:11:49.929 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 19:11:50.112 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 19:11:50.284 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 19:11:50.399 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 19:11:50.458 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 19:11:51.447 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 19:11:51.867 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 19:11:51.948 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 19:11:51.968 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 19:11:51.993 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 16.368 seconds (process running for 17.688)
2025-08-03 19:11:52.274 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 19:11:52.320 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 19:11:52.322 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 19:11:52.324 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 19:11:52.724 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.734 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.735 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.736 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.737 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.737 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.748 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.750 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.750 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.751 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.752 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.752 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.764 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.765 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.766 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.767 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.767 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.768 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.778 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:11:52.786 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:11:52.788 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:11:52.789 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:11:52.790 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:11:52.791 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:11:52.793 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.794 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.794 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.795 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.796 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.796 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.797 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.798 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.798 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.799 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.799 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.800 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.800 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.801 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.802 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.803 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.803 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.804 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.807 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:11:52.809 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:11:52.810 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:11:52.812 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:11:52.814 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.816 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.817 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.822 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:11:52.823 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:11:52.824 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:11:52.825 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:11:52.826 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.827 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.868 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.870 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:11:52.871 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:11:52.872 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:11:52.873 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:11:52.874 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.875 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.876 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.877 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:11:52.878 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:11:52.879 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:11:52.881 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:11:52.882 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.882 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.883 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.884 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:11:52.885 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:11:52.886 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:11:52.887 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:11:52.888 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:11:52.889 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.889 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.890 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.890 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:11:52.928 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 19:11:52.933 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 19:11:52.941 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 19:11:52.947 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 19:11:52.951 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 19:11:52.959 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 19:11:52.963 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 19:11:52.968 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 19:11:52.969 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:11:52.976 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 19:11:52.977 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:11:52.979 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 19:11:52.981 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:11:52.981 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:11:52.983 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:11:52.985 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:11:52.986 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:11:52.989 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 19:11:52.992 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 19:11:52.993 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:11:52.994 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:11:52.995 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:11:52.996 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:11:53.003 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 19:11:53.004 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:11:53.005 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:11:53.006 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:11:53.006 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:11:53.007 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:11:53.007 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:11:53.021 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 19:13:00.427 [http-nio-8080-exec-1] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 19:13:00.427 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 19:13:00.428 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 19:13:00.428 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 19:13:00.428 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 19:13:00.429 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@70fe1e37
2025-08-03 19:13:00.430 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@639d8ed7
2025-08-03 19:13:00.430 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 19:13:00.430 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-03 19:13:00.464 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api-docs
2025-08-03 19:13:00.476 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 19:13:00.480 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 19:13:00.480 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id E24122BAFF1F9DEFAE79FAF5076D94FF
2025-08-03 19:13:00.498 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api-docs
2025-08-03 19:13:00.510 [http-nio-8080-exec-1] DEBUG [60a54107bd2a4b14] o.s.web.servlet.DispatcherServlet - GET "/api-docs", parameters={}
2025-08-03 19:13:00.512 [http-nio-8080-exec-1] DEBUG [60a54107bd2a4b14] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
2025-08-03 19:13:02.558 [http-nio-8080-exec-1] INFO  [60a54107bd2a4b14] o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 2025 ms
2025-08-03 19:13:02.597 [http-nio-8080-exec-1] DEBUG [60a54107bd2a4b14] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, */*] and supported [application/json]
2025-08-03 19:13:02.607 [http-nio-8080-exec-1] DEBUG [60a54107bd2a4b14] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 49, 46, 48, 34, 44, 34, 105, 110, 10 (truncated)...]
2025-08-03 19:13:02.616 [http-nio-8080-exec-1] DEBUG [60a54107bd2a4b14] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 19:13:07.328 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-03 19:13:07.328 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 19:13:07.329 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 19:13:07.330 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-03 19:13:07.330 [http-nio-8080-exec-2] DEBUG [d1afababbab943fc] o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-08-03 19:13:07.333 [http-nio-8080-exec-2] DEBUG [d1afababbab943fc] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 19:13:07.378 [http-nio-8080-exec-2] DEBUG [d1afababbab943fc] o.s.web.client.RestTemplate - HTTP GET https://httpbin.org/status/200
2025-08-03 19:13:07.380 [http-nio-8080-exec-2] DEBUG [d1afababbab943fc] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 19:13:10.421 [http-nio-8080-exec-2] DEBUG [d1afababbab943fc] o.s.web.client.RestTemplate - Response 200 OK
2025-08-03 19:13:10.835 [http-nio-8080-exec-2] WARN  [d1afababbab943fc] o.s.b.a.d.redis.RedisHealthIndicator - Redis health check failed
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1249)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:1055)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:195)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:92)
	at org.springframework.boot.actuate.data.redis.RedisHealthIndicator.doHealthCheck(RedisHealthIndicator.java:49)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.getHealth(HealthEndpointWebExtension.java:94)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.getHealth(HealthEndpointWebExtension.java:47)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getLoggedHealth(HealthEndpointSupport.java:172)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:145)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateContribution(HealthEndpointSupport.java:156)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:141)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:110)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:81)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.health(HealthEndpointWebExtension.java:80)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.health(HealthEndpointWebExtension.java:69)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:74)
	at org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60)
	at org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$ServletWebOperationAdapter.handle(AbstractWebMvcEndpointHandlerMapping.java:327)
	at org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(AbstractWebMvcEndpointHandlerMapping.java:434)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.deliverytech.delivery.filter.CorrelationIdFilter.doFilter(CorrelationIdFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.deliverytech.delivery.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:67)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:352)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:220)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787)
	... 174 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-03 19:13:10.848 [http-nio-8080-exec-2] DEBUG [d1afababbab943fc] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 19:13:10.855 [http-nio-8080-exec-2] DEBUG [d1afababbab943fc] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@ee4de00]
2025-08-03 19:13:10.860 [http-nio-8080-exec-2] DEBUG [d1afababbab943fc] o.s.web.servlet.DispatcherServlet - Completed 503 SERVICE_UNAVAILABLE
2025-08-03 19:13:10.998 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 19:13:10.999 [http-nio-8080-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 19:13:10.999 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 19:13:11.003 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 19:13:11.019 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 19:13:11.020 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 19:13:11.021 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 19:25:13.649 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 19:25:13.755 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 19:25:13.762 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 19:25:13.807 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 19:25:13.834 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 19:25:13.844 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 19:25:13.845 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 19:25:54.294 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 19:25:54.391 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 19:25:54.855 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 19:25:54.897 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 19:25:54.953 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 19:25:54.954 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 19:25:54.955 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 19:25:54.955 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 19:25:54.957 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 19:25:55.158 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 19:25:55.159 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 19:25:55.180 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 19:27:34.813 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 17000 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 19:27:34.854 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 19:27:34.856 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 19:27:34.929 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 19:27:34.930 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 19:27:40.773 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 19:27:40.775 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 19:27:41.011 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 218 ms. Found 5 JPA repository interfaces.
2025-08-03 19:27:41.038 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 19:27:41.040 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-03 19:27:41.081 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:27:41.082 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:27:41.083 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:27:41.083 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:27:41.083 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:27:41.084 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-08-03 19:27:42.393 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 19:27:42.421 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 19:27:42.425 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 19:27:42.425 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 19:27:42.621 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 19:27:42.622 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 7619 ms
2025-08-03 19:27:44.005 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 19:27:44.064 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 19:27:44.474 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 19:27:44.476 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 19:27:44.529 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 19:27:45.711 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 19:27:45.718 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 19:27:45.719 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 19:27:45.719 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 19:27:45.719 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 19:27:45.720 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 19:27:45.745 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 19:27:45.760 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 19:27:45.763 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 19:27:45.766 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 19:27:45.768 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 19:27:45.772 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 19:27:45.776 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 19:27:45.794 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 19:27:45.796 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 19:27:45.799 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 19:27:45.801 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 19:27:45.807 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 19:27:46.389 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 19:27:46.390 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 19:27:46.509 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 19:27:48.845 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 19:27:50.560 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 19:27:50.731 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 19:27:51.013 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 19:27:51.228 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 19:27:51.406 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 19:27:51.515 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 19:27:52.390 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 19:27:52.768 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 19:27:52.860 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 19:27:52.884 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 19:27:52.902 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 19.65 seconds (process running for 20.835)
2025-08-03 19:27:53.169 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 19:27:53.236 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 19:27:53.240 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 19:27:53.245 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 19:27:53.684 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.702 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.703 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.704 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.705 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.705 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.718 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.720 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.720 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.730 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.731 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.732 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.744 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.747 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.748 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.749 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.750 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.751 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.762 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:27:53.775 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:27:53.777 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:27:53.778 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:27:53.779 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:27:53.781 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:27:53.783 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.785 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.786 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.787 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.787 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.788 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.788 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.789 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.789 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.790 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.791 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.791 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.792 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.792 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.793 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.794 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.794 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.795 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.799 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:27:53.802 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:27:53.804 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:27:53.806 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:27:53.810 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.814 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.815 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.822 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:27:53.824 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:27:53.826 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:27:53.827 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:27:53.828 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.829 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.830 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.833 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:27:53.835 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:27:53.836 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:27:53.838 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:27:53.839 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.840 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.841 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.842 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:27:53.844 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:27:53.845 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:27:53.846 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:27:53.849 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.851 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.853 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.855 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:27:53.856 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:27:53.857 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:27:53.858 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:27:53.859 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:27:53.861 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.862 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.864 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.865 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:27:53.925 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 19:27:53.934 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 19:27:53.955 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 19:27:53.966 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 19:27:53.975 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 19:27:53.986 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 19:27:53.994 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 19:27:54.005 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 19:27:54.008 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:27:54.025 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 19:27:54.026 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:27:54.031 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 19:27:54.033 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:27:54.034 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:27:54.035 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:27:54.036 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:27:54.037 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:27:54.040 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 19:27:54.044 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 19:27:54.045 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:27:54.049 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:27:54.050 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:27:54.051 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:27:54.056 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 19:27:54.057 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:27:54.058 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:27:54.059 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:27:54.059 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:27:54.060 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:27:54.060 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:27:54.067 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 19:28:28.659 [http-nio-8080-exec-1] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 19:28:28.659 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 19:28:28.660 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 19:28:28.660 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 19:28:28.660 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 19:28:28.663 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@289e2b7f
2025-08-03 19:28:28.664 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@4f761000
2025-08-03 19:28:28.665 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 19:28:28.665 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 6 ms
2025-08-03 19:28:28.714 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-03 19:28:28.728 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 19:28:28.733 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 19:28:28.749 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-03 19:28:28.752 [http-nio-8080-exec-1] DEBUG [8e55eb87218b4c80] o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-08-03 19:28:28.775 [http-nio-8080-exec-1] DEBUG [8e55eb87218b4c80] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 19:28:28.819 [http-nio-8080-exec-1] DEBUG [8e55eb87218b4c80] o.s.web.client.RestTemplate - HTTP GET https://httpbin.org/status/200
2025-08-03 19:28:28.830 [http-nio-8080-exec-1] DEBUG [8e55eb87218b4c80] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 19:28:38.767 [http-nio-8080-exec-1] DEBUG [8e55eb87218b4c80] o.s.web.client.RestTemplate - Response 200 OK
2025-08-03 19:28:39.143 [http-nio-8080-exec-1] WARN  [8e55eb87218b4c80] o.s.b.a.d.redis.RedisHealthIndicator - Redis health check failed
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1249)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:1055)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:195)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:92)
	at org.springframework.boot.actuate.data.redis.RedisHealthIndicator.doHealthCheck(RedisHealthIndicator.java:49)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.getHealth(HealthEndpointWebExtension.java:94)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.getHealth(HealthEndpointWebExtension.java:47)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getLoggedHealth(HealthEndpointSupport.java:172)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:145)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateContribution(HealthEndpointSupport.java:156)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:141)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:110)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:81)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.health(HealthEndpointWebExtension.java:80)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.health(HealthEndpointWebExtension.java:69)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:74)
	at org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60)
	at org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$ServletWebOperationAdapter.handle(AbstractWebMvcEndpointHandlerMapping.java:327)
	at org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(AbstractWebMvcEndpointHandlerMapping.java:434)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.deliverytech.delivery.filter.CorrelationIdFilter.doFilter(CorrelationIdFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.deliverytech.delivery.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:67)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:352)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:220)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787)
	... 174 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-03 19:28:39.167 [http-nio-8080-exec-1] DEBUG [8e55eb87218b4c80] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 19:28:39.242 [http-nio-8080-exec-1] DEBUG [8e55eb87218b4c80] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@43f13161]
2025-08-03 19:28:39.277 [http-nio-8080-exec-1] DEBUG [8e55eb87218b4c80] o.s.web.servlet.DispatcherServlet - Completed 503 SERVICE_UNAVAILABLE
2025-08-03 19:28:39.414 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 19:28:39.415 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 19:28:39.417 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 19:28:39.432 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 19:28:39.451 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 19:28:39.452 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 19:28:39.453 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 19:30:52.044 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 19:30:52.186 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 19:30:52.502 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 19:30:52.525 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 19:30:52.571 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 19:30:52.572 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 19:30:52.573 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 19:30:52.574 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 19:30:52.574 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 19:30:52.717 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 19:30:52.718 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 19:30:52.735 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 19:31:11.774 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 22132 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 19:31:11.823 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 19:31:11.825 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 19:31:11.895 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 19:31:11.895 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 19:31:15.026 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 19:31:15.029 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 19:31:15.258 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 213 ms. Found 5 JPA repository interfaces.
2025-08-03 19:31:15.277 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 19:31:15.280 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-03 19:31:15.301 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:31:15.301 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:31:15.301 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:31:15.303 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:31:15.303 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:31:15.303 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2025-08-03 19:31:16.590 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 19:31:16.641 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 19:31:16.647 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 19:31:16.647 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 19:31:16.788 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 19:31:16.790 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4893 ms
2025-08-03 19:31:18.376 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 19:31:18.421 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 19:31:18.613 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 19:31:18.615 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 19:31:18.645 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 19:31:19.801 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 19:31:19.804 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 19:31:19.804 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 19:31:19.805 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 19:31:19.805 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 19:31:19.805 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 19:31:19.814 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 19:31:19.822 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 19:31:19.825 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 19:31:19.827 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 19:31:19.828 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 19:31:19.829 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 19:31:19.832 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 19:31:19.843 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 19:31:19.844 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 19:31:19.845 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 19:31:19.846 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 19:31:19.852 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 19:31:20.363 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 19:31:20.365 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 19:31:20.504 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 19:31:22.114 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 19:31:23.295 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 19:31:23.450 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 19:31:23.650 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 19:31:23.833 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 19:31:23.990 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 19:31:24.079 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 19:31:24.902 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 19:31:25.209 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 19:31:25.290 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 19:31:25.303 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 19:31:25.319 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 14.848 seconds (process running for 16.872)
2025-08-03 19:31:25.666 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 19:31:25.770 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 19:31:25.775 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 19:31:25.778 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 19:31:26.256 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.300 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.301 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.303 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.304 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.305 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.337 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.338 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.339 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.340 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.340 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.342 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.359 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.361 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.362 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.362 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.364 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.364 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.397 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:31:26.423 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:31:26.425 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:31:26.427 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:31:26.429 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:31:26.430 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:31:26.432 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.433 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.434 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.434 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.435 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.436 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.436 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.437 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.437 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.438 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.438 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.439 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.440 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.440 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.441 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.442 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.443 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.443 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.446 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:31:26.450 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:31:26.451 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:31:26.453 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:31:26.455 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.458 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.460 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.481 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:31:26.483 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:31:26.485 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:31:26.488 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:31:26.489 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.490 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.491 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.493 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:31:26.496 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:31:26.499 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:31:26.502 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:31:26.506 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.507 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.510 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.514 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:31:26.517 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:31:26.520 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:31:26.521 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:31:26.524 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.528 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.531 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.534 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:31:26.536 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:31:26.537 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:31:26.538 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:31:26.539 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:31:26.544 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.547 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.549 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.549 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:31:26.614 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 19:31:26.631 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 19:31:26.653 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 19:31:26.666 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 19:31:26.669 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 19:31:26.675 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 19:31:26.683 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 19:31:26.690 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 19:31:26.691 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:31:26.698 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 19:31:26.699 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:31:26.702 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 19:31:26.703 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:31:26.703 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:31:26.704 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:31:26.705 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:31:26.705 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:31:26.710 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 19:31:26.715 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 19:31:26.716 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:31:26.717 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:31:26.717 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:31:26.718 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:31:26.724 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 19:31:26.726 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:31:26.727 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:31:26.728 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:31:26.728 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:31:26.729 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:31:26.730 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:31:26.736 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 19:32:55.331 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 19:32:55.546 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 19:32:55.817 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 19:32:55.834 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 19:32:55.864 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 19:32:55.865 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 19:32:55.866 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 19:32:55.866 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 19:32:55.867 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 19:32:55.981 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 19:32:55.983 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 19:32:55.995 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 19:33:21.847 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 10716 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 19:33:21.878 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 19:33:21.879 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 19:33:21.982 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 19:33:21.982 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 19:33:26.972 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 19:33:26.975 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 19:33:27.335 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 336 ms. Found 5 JPA repository interfaces.
2025-08-03 19:33:27.358 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 19:33:27.359 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-03 19:33:27.382 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:33:27.383 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:33:27.383 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:33:27.383 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:33:27.384 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:33:27.397 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28 ms. Found 0 Redis repository interfaces.
2025-08-03 19:33:28.803 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 19:33:28.822 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 19:33:28.829 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 19:33:28.829 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 19:33:28.917 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 19:33:28.918 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6934 ms
2025-08-03 19:33:29.989 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 19:33:30.029 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 19:33:30.228 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 19:33:30.229 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 19:33:30.255 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 19:33:31.344 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 19:33:31.347 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 19:33:31.348 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 19:33:31.348 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 19:33:31.348 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 19:33:31.348 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 19:33:31.354 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 19:33:31.363 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 19:33:31.365 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 19:33:31.366 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 19:33:31.367 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 19:33:31.369 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 19:33:31.371 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 19:33:31.382 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 19:33:31.384 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 19:33:31.386 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 19:33:31.387 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 19:33:31.392 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 19:33:31.891 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 19:33:31.892 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 19:33:32.026 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 19:33:33.588 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 19:33:34.697 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 19:33:34.826 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 19:33:35.032 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 19:33:35.218 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 19:33:35.386 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 19:33:35.478 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 19:33:36.207 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 19:33:36.265 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 19:33:36.334 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 19:33:36.365 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 19:33:36.381 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 16.298 seconds (process running for 17.435)
2025-08-03 19:33:36.633 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 19:33:36.668 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 19:33:36.670 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 19:33:36.672 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 19:33:37.078 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.093 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.094 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.095 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.095 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.096 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.105 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.106 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.107 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.107 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.108 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.108 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.122 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.125 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.125 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.126 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.127 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.128 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.139 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:33:37.152 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:33:37.153 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:33:37.154 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:33:37.156 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:33:37.157 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:33:37.159 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.159 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.160 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.161 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.162 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.163 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.163 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.164 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.165 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.165 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.166 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.166 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.167 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.167 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.168 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.169 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.169 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.170 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.174 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:33:37.178 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:33:37.179 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:33:37.180 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:33:37.183 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.185 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.186 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.193 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:33:37.194 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:33:37.195 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:33:37.196 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:33:37.197 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.198 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.199 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.200 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:33:37.201 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:33:37.202 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:33:37.202 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:33:37.203 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.205 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.206 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.208 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:33:37.211 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:33:37.212 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:33:37.213 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:33:37.214 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.215 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.215 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.216 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:33:37.218 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:33:37.218 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:33:37.220 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:33:37.221 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:33:37.222 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.223 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.224 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.224 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:33:37.268 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 19:33:37.273 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 19:33:37.281 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 19:33:37.289 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 19:33:37.293 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 19:33:37.298 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 19:33:37.302 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 19:33:37.307 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 19:33:37.310 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:33:37.315 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 19:33:37.317 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:33:37.322 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 19:33:37.324 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:33:37.325 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:33:37.325 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:33:37.326 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:33:37.327 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:33:37.330 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 19:33:37.336 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 19:33:37.337 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:33:37.337 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:33:37.339 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:33:37.340 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:33:37.349 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 19:33:37.351 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:33:37.353 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:33:37.354 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:33:37.355 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:33:37.356 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:33:37.356 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:33:37.361 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 19:34:10.321 [http-nio-8080-exec-1] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 19:34:10.321 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 19:34:10.322 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 19:34:10.322 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 19:34:10.322 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 19:34:10.323 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3331b5c8
2025-08-03 19:34:10.323 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@367adc6
2025-08-03 19:34:10.323 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 19:34:10.324 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-03 19:34:10.351 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-03 19:34:10.362 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 19:34:10.364 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 19:34:10.380 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-03 19:34:10.382 [http-nio-8080-exec-1] DEBUG [8d2205112e624650] o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-08-03 19:34:10.401 [http-nio-8080-exec-1] DEBUG [8d2205112e624650] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 19:34:10.446 [http-nio-8080-exec-1] DEBUG [8d2205112e624650] o.s.web.client.RestTemplate - HTTP GET https://httpbin.org/status/200
2025-08-03 19:34:10.449 [http-nio-8080-exec-1] DEBUG [8d2205112e624650] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 19:34:13.280 [http-nio-8080-exec-1] DEBUG [8d2205112e624650] o.s.web.client.RestTemplate - Response 200 OK
2025-08-03 19:34:13.694 [http-nio-8080-exec-1] WARN  [8d2205112e624650] o.s.b.a.d.redis.RedisHealthIndicator - Redis health check failed
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1249)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:1055)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:195)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:92)
	at org.springframework.boot.actuate.data.redis.RedisHealthIndicator.doHealthCheck(RedisHealthIndicator.java:49)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.getHealth(HealthEndpointWebExtension.java:94)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.getHealth(HealthEndpointWebExtension.java:47)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getLoggedHealth(HealthEndpointSupport.java:172)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:145)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateContribution(HealthEndpointSupport.java:156)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:141)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:110)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:81)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.health(HealthEndpointWebExtension.java:80)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.health(HealthEndpointWebExtension.java:69)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:74)
	at org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60)
	at org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$ServletWebOperationAdapter.handle(AbstractWebMvcEndpointHandlerMapping.java:327)
	at org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(AbstractWebMvcEndpointHandlerMapping.java:434)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.deliverytech.delivery.filter.CorrelationIdFilter.doFilter(CorrelationIdFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.deliverytech.delivery.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:67)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:352)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:220)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787)
	... 174 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-03 19:34:13.716 [http-nio-8080-exec-1] DEBUG [8d2205112e624650] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 19:34:13.763 [http-nio-8080-exec-1] DEBUG [8d2205112e624650] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@527b2950]
2025-08-03 19:34:13.787 [http-nio-8080-exec-1] DEBUG [8d2205112e624650] o.s.web.servlet.DispatcherServlet - Completed 503 SERVICE_UNAVAILABLE
2025-08-03 19:34:14.018 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 19:34:14.018 [http-nio-8080-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 19:34:14.019 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 19:34:14.025 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 19:34:14.057 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 19:34:14.060 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 19:34:14.060 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 19:39:08.970 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 19:39:09.120 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 19:39:09.548 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 19:39:09.586 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 19:39:09.621 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 19:39:09.623 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 19:39:09.624 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 19:39:09.625 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 19:39:09.626 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 19:39:09.744 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 19:39:09.746 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 19:39:09.757 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 19:40:08.938 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 23204 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 19:40:08.959 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 19:40:08.960 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 19:40:09.031 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 19:40:09.032 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 19:40:11.584 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 19:40:11.586 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 19:40:11.815 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 216 ms. Found 5 JPA repository interfaces.
2025-08-03 19:40:11.837 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 19:40:11.838 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-03 19:40:11.865 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:40:11.865 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:40:11.865 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:40:11.866 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:40:11.866 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:40:11.866 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2025-08-03 19:40:12.998 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 19:40:13.017 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 19:40:13.019 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 19:40:13.020 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 19:40:13.088 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 19:40:13.088 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4056 ms
2025-08-03 19:40:14.417 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 19:40:14.499 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 19:40:14.933 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 19:40:14.934 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 19:40:15.031 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 19:40:16.278 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 19:40:16.281 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 19:40:16.282 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 19:40:16.282 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 19:40:16.282 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 19:40:16.282 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 19:40:16.287 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 19:40:16.296 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 19:40:16.298 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 19:40:16.299 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 19:40:16.301 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 19:40:16.302 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 19:40:16.305 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 19:40:16.316 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 19:40:16.318 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 19:40:16.319 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 19:40:16.320 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 19:40:16.324 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 19:40:16.850 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 19:40:16.851 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 19:40:16.997 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 19:40:18.232 [restartedMain] WARN  [] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConfig': Injection of autowired dependencies failed
2025-08-03 19:40:18.234 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 19:40:18.236 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 19:40:18.241 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 19:40:18.243 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 19:40:18.244 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 19:40:18.247 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 19:40:18.249 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 19:40:18.258 [restartedMain] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 19:40:18.259 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 19:40:18.264 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 19:40:18.272 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-03 19:40:18.318 [restartedMain] INFO  [] o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-03 19:40:18.348 [restartedMain] ERROR [] o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConfig': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:515)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.deliverytech.delivery.DeliveryApiApplication.main(DeliveryApiApplication.java:12)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.util.PlaceholderResolutionException: Could not resolve placeholder 'spring.redis.host' in value "${spring.redis.host}"
	at org.springframework.util.PlaceholderResolutionException.withValue(PlaceholderResolutionException.java:81)
	at org.springframework.util.PlaceholderParser$ParsedValue.resolve(PlaceholderParser.java:423)
	at org.springframework.util.PlaceholderParser.replacePlaceholders(PlaceholderParser.java:128)
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:118)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:114)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:293)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:264)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:186)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:971)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1650)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	... 22 common frames omitted
2025-08-03 19:41:05.048 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 6748 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 19:41:05.074 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 19:41:05.074 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 19:41:05.128 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 19:41:05.128 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 19:41:08.579 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 19:41:08.581 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 19:41:08.834 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 233 ms. Found 5 JPA repository interfaces.
2025-08-03 19:41:08.860 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 19:41:08.864 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-03 19:41:08.904 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:41:08.905 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:41:08.906 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:41:08.906 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:41:08.906 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:41:08.906 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
2025-08-03 19:41:10.695 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 19:41:10.733 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 19:41:10.738 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 19:41:10.738 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 19:41:10.854 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 19:41:10.855 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5726 ms
2025-08-03 19:41:12.379 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 19:41:12.450 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 19:41:12.746 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 19:41:12.748 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 19:41:12.797 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 19:41:14.191 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 19:41:14.196 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 19:41:14.197 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 19:41:14.197 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 19:41:14.197 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 19:41:14.198 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 19:41:14.221 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 19:41:14.235 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 19:41:14.237 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 19:41:14.240 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 19:41:14.242 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 19:41:14.244 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 19:41:14.248 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 19:41:14.271 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 19:41:14.273 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 19:41:14.275 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 19:41:14.276 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 19:41:14.283 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 19:41:14.986 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 19:41:14.987 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 19:41:15.211 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 19:41:17.535 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 19:41:19.461 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 19:41:19.622 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 19:41:19.923 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 19:41:20.138 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 19:41:20.288 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 19:41:20.382 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 19:41:21.299 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 19:41:21.737 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 19:41:21.798 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 19:41:21.812 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 19:41:21.828 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 17.941 seconds (process running for 19.214)
2025-08-03 19:41:22.089 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 19:41:22.136 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 19:41:22.139 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 19:41:22.142 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 19:41:22.595 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.627 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.629 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.631 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.632 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.633 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.674 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.677 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.678 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.680 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.681 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.682 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.712 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.715 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.716 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.717 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.718 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.719 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.751 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:41:22.775 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:41:22.777 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:41:22.779 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:41:22.781 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:41:22.783 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:41:22.785 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.786 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.787 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.788 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.789 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.790 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.790 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.791 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.792 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.792 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.793 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.793 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.795 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.796 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.796 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.797 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.798 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.799 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.803 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:41:22.806 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:41:22.807 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:41:22.808 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:41:22.812 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.815 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.816 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.834 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:41:22.836 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:41:22.837 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:41:22.838 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:41:22.839 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.840 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.840 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.842 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:41:22.843 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:41:22.845 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:41:22.847 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:41:22.848 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.850 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.851 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.852 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:41:22.853 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:41:22.854 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:41:22.855 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:41:22.856 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.857 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.857 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.858 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:41:22.859 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:41:22.861 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:41:22.865 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:41:22.866 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:41:22.868 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.870 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.870 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.871 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:41:22.927 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 19:41:22.937 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 19:41:22.957 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 19:41:22.964 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 19:41:22.967 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 19:41:22.973 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 19:41:22.977 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 19:41:22.981 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 19:41:22.983 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:41:22.988 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 19:41:22.989 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:41:22.992 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 19:41:22.993 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:41:22.995 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:41:22.996 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:41:22.997 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:41:22.997 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:41:23.001 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 19:41:23.006 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 19:41:23.007 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:41:23.009 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:41:23.009 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:41:23.010 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:41:23.017 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 19:41:23.018 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:41:23.019 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:41:23.019 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:41:23.019 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:41:23.021 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:41:23.022 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:41:23.026 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 19:42:20.034 [http-nio-8080-exec-1] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 19:42:20.034 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 19:42:20.035 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 19:42:20.035 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 19:42:20.035 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 19:42:20.036 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3b4781d6
2025-08-03 19:42:20.036 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@50997c2e
2025-08-03 19:42:20.036 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 19:42:20.036 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-03 19:42:20.073 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-03 19:42:20.086 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 19:42:20.091 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 19:42:20.108 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-03 19:42:20.112 [http-nio-8080-exec-1] DEBUG [33eaf1d6dac94c31] o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-08-03 19:42:20.135 [http-nio-8080-exec-1] DEBUG [33eaf1d6dac94c31] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 19:42:20.177 [http-nio-8080-exec-1] DEBUG [33eaf1d6dac94c31] o.s.web.client.RestTemplate - HTTP GET https://httpbin.org/status/200
2025-08-03 19:42:20.182 [http-nio-8080-exec-1] DEBUG [33eaf1d6dac94c31] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 19:42:24.292 [http-nio-8080-exec-1] DEBUG [33eaf1d6dac94c31] o.s.web.client.RestTemplate - Response 200 OK
2025-08-03 19:42:24.694 [http-nio-8080-exec-1] WARN  [33eaf1d6dac94c31] o.s.b.a.d.redis.RedisHealthIndicator - Redis health check failed
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1249)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:1055)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:195)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:92)
	at org.springframework.boot.actuate.data.redis.RedisHealthIndicator.doHealthCheck(RedisHealthIndicator.java:49)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.getHealth(HealthEndpointWebExtension.java:94)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.getHealth(HealthEndpointWebExtension.java:47)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getLoggedHealth(HealthEndpointSupport.java:172)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:145)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateContribution(HealthEndpointSupport.java:156)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:141)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:110)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:81)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.health(HealthEndpointWebExtension.java:80)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.health(HealthEndpointWebExtension.java:69)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:74)
	at org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60)
	at org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$ServletWebOperationAdapter.handle(AbstractWebMvcEndpointHandlerMapping.java:327)
	at org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(AbstractWebMvcEndpointHandlerMapping.java:434)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.deliverytech.delivery.filter.CorrelationIdFilter.doFilter(CorrelationIdFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.deliverytech.delivery.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:67)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:352)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:220)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787)
	... 174 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-03 19:42:24.724 [http-nio-8080-exec-1] DEBUG [33eaf1d6dac94c31] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 19:42:24.776 [http-nio-8080-exec-1] DEBUG [33eaf1d6dac94c31] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@7ffb5ab5]
2025-08-03 19:42:24.810 [http-nio-8080-exec-1] DEBUG [33eaf1d6dac94c31] o.s.web.servlet.DispatcherServlet - Completed 503 SERVICE_UNAVAILABLE
2025-08-03 19:42:24.969 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 19:42:24.970 [http-nio-8080-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 19:42:24.971 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 19:42:24.981 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 19:42:25.001 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 19:42:25.003 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 19:42:25.004 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 19:44:44.567 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 19:44:44.577 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 19:44:44.638 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 19:44:44.646 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 19:44:44.653 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 19:44:44.654 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 19:44:44.654 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 19:44:44.655 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 19:44:44.655 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 19:44:44.683 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 19:44:44.684 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 19:44:44.686 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 19:49:57.119 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 5564 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 19:49:57.134 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 19:49:57.136 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 19:49:57.209 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 19:49:57.209 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 19:50:00.071 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 19:50:00.073 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 19:50:00.324 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 236 ms. Found 5 JPA repository interfaces.
2025-08-03 19:50:00.344 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 19:50:00.346 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-03 19:50:00.377 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:50:00.378 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:50:00.378 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:50:00.378 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:50:00.379 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:50:00.379 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-08-03 19:50:01.554 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 19:50:01.579 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 19:50:01.582 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 19:50:01.583 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 19:50:01.653 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 19:50:01.653 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4442 ms
2025-08-03 19:50:02.789 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 19:50:02.835 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 19:50:03.102 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 19:50:03.104 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 19:50:03.137 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 19:50:04.390 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 19:50:04.393 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 19:50:04.393 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 19:50:04.393 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 19:50:04.394 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 19:50:04.394 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 19:50:04.399 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 19:50:04.410 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 19:50:04.412 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 19:50:04.414 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 19:50:04.416 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 19:50:04.418 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 19:50:04.421 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 19:50:04.432 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 19:50:04.434 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 19:50:04.436 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 19:50:04.437 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 19:50:04.442 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 19:50:05.005 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 19:50:05.008 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 19:50:05.111 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 19:50:06.493 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 19:50:07.625 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 19:50:07.752 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 19:50:07.936 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 19:50:08.140 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 19:50:08.311 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 19:50:08.408 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 19:50:09.238 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 19:50:09.448 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 19:50:09.551 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 19:50:09.584 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 19:50:09.606 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 13.883 seconds (process running for 15.023)
2025-08-03 19:50:09.839 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 19:50:09.877 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 19:50:09.879 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 19:50:09.882 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 19:50:10.295 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.311 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.313 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.314 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.315 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.317 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.327 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.329 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.329 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.330 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.331 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.334 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.352 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.354 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.355 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.355 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.356 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.357 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.369 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:50:10.379 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:50:10.382 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:50:10.386 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:50:10.388 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:50:10.389 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:50:10.391 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.392 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.393 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.394 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.395 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.395 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.396 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.397 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.397 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.398 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.400 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.401 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.402 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.402 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.403 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.403 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.404 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.405 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.408 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:50:10.412 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:50:10.416 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:50:10.419 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:50:10.421 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.423 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.424 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.432 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:50:10.435 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:50:10.436 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:50:10.437 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:50:10.438 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.439 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.439 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.440 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:50:10.441 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:50:10.442 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:50:10.444 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:50:10.446 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.447 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.447 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.450 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:50:10.452 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:50:10.453 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:50:10.454 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:50:10.455 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.456 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.457 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.458 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:50:10.461 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:50:10.463 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:50:10.464 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:50:10.466 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:50:10.468 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.470 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.470 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.471 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:50:10.518 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 19:50:10.524 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 19:50:10.532 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 19:50:10.543 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 19:50:10.547 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 19:50:10.554 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 19:50:10.562 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 19:50:10.568 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 19:50:10.571 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:50:10.580 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 19:50:10.581 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:50:10.587 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 19:50:10.589 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:50:10.590 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:50:10.591 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:50:10.592 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:50:10.592 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:50:10.595 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 19:50:10.604 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 19:50:10.605 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:50:10.606 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:50:10.607 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:50:10.607 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:50:10.612 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 19:50:10.614 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:50:10.617 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:50:10.619 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:50:10.621 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:50:10.622 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:50:10.623 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:50:10.628 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 19:51:18.978 [http-nio-8080-exec-1] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 19:51:18.990 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 19:51:18.991 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 19:51:18.992 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 19:51:18.992 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 19:51:19.007 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@c04b6da
2025-08-03 19:51:19.007 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@4494bdc5
2025-08-03 19:51:19.052 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 19:51:19.053 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 62 ms
2025-08-03 19:51:19.132 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-03 19:51:19.152 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 19:51:19.158 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 19:51:19.192 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-03 19:51:19.202 [http-nio-8080-exec-1] DEBUG [b068f57cdbfb4033] o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-08-03 19:51:19.253 [http-nio-8080-exec-1] DEBUG [b068f57cdbfb4033] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 19:51:19.315 [http-nio-8080-exec-1] DEBUG [b068f57cdbfb4033] o.s.web.client.RestTemplate - HTTP GET https://httpbin.org/status/200
2025-08-03 19:51:19.325 [http-nio-8080-exec-1] DEBUG [b068f57cdbfb4033] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 19:51:23.518 [http-nio-8080-exec-1] DEBUG [b068f57cdbfb4033] o.s.web.client.RestTemplate - Response 200 OK
2025-08-03 19:51:26.153 [http-nio-8080-exec-1] WARN  [b068f57cdbfb4033] o.s.b.a.d.redis.RedisHealthIndicator - Redis health check failed
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1249)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:1055)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:195)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:92)
	at org.springframework.boot.actuate.data.redis.RedisHealthIndicator.doHealthCheck(RedisHealthIndicator.java:49)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.getHealth(HealthEndpointWebExtension.java:94)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.getHealth(HealthEndpointWebExtension.java:47)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getLoggedHealth(HealthEndpointSupport.java:172)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:145)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateContribution(HealthEndpointSupport.java:156)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:141)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:110)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:81)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.health(HealthEndpointWebExtension.java:80)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.health(HealthEndpointWebExtension.java:69)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:74)
	at org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60)
	at org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$ServletWebOperationAdapter.handle(AbstractWebMvcEndpointHandlerMapping.java:327)
	at org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(AbstractWebMvcEndpointHandlerMapping.java:434)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.deliverytech.delivery.filter.CorrelationIdFilter.doFilter(CorrelationIdFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.deliverytech.delivery.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:67)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to redis/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:352)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:220)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787)
	... 174 common frames omitted
Caused by: java.net.UnknownHostException: Failed to resolve 'redis' [A(1), AAAA(28)] after 2 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:638)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
Caused by: io.netty.resolver.dns.DnsErrorCauseException: Query failed with NXDOMAIN
	at io.netty.resolver.dns.DnsResolveContext.onResponse(..)(Unknown Source)
2025-08-03 19:51:26.221 [http-nio-8080-exec-1] DEBUG [b068f57cdbfb4033] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 19:51:26.287 [http-nio-8080-exec-1] DEBUG [b068f57cdbfb4033] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@2ed1813a]
2025-08-03 19:51:26.318 [http-nio-8080-exec-1] DEBUG [b068f57cdbfb4033] o.s.web.servlet.DispatcherServlet - Completed 503 SERVICE_UNAVAILABLE
2025-08-03 19:51:26.546 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 19:51:26.549 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 19:51:26.550 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 19:51:26.562 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 19:51:26.593 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 19:51:26.594 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 19:51:26.595 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 19:55:30.580 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 19:55:30.709 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 19:55:31.076 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 19:55:31.114 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 19:55:31.174 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 19:55:31.178 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 19:55:31.178 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 19:55:31.180 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 19:55:31.181 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 19:55:31.371 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 19:55:31.391 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 19:55:31.410 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 19:56:06.511 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 25720 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 19:56:06.526 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 19:56:06.527 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 19:56:06.576 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 19:56:06.576 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 19:56:09.280 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 19:56:09.282 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 19:56:09.501 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 205 ms. Found 5 JPA repository interfaces.
2025-08-03 19:56:09.529 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 19:56:09.532 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-03 19:56:09.561 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:56:09.561 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:56:09.562 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:56:09.562 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:56:09.562 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 19:56:09.562 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-08-03 19:56:10.713 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 19:56:10.734 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 19:56:10.738 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 19:56:10.738 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 19:56:10.835 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 19:56:10.836 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4259 ms
2025-08-03 19:56:12.034 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 19:56:12.074 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 19:56:12.268 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 19:56:12.270 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 19:56:12.303 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 19:56:13.669 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 19:56:13.672 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 19:56:13.673 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 19:56:13.673 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 19:56:13.673 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 19:56:13.673 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 19:56:13.679 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 19:56:13.700 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 19:56:13.701 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 19:56:13.703 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 19:56:13.704 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 19:56:13.706 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 19:56:13.709 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 19:56:13.719 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 19:56:13.720 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 19:56:13.721 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 19:56:13.723 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 19:56:13.727 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 19:56:14.330 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 19:56:14.333 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 19:56:14.450 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 19:56:15.812 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 19:56:17.081 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 19:56:17.210 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 19:56:17.416 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 19:56:17.650 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 19:56:17.853 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 19:56:17.966 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 19:56:18.794 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 19:56:18.846 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 19:56:18.925 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 19:56:18.943 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 19:56:18.964 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 13.377 seconds (process running for 14.455)
2025-08-03 19:56:19.183 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 19:56:19.222 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 19:56:19.226 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 19:56:19.229 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 19:56:19.636 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.649 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.650 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.650 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.651 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.652 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.663 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.664 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.665 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.665 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.666 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.667 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.679 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.681 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.682 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.683 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.683 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.684 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.696 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:56:19.704 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:56:19.705 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:56:19.707 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:56:19.709 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:56:19.711 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:56:19.712 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.713 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.714 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.714 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.715 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.715 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.716 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.716 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.717 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.718 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.719 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.720 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.721 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.721 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.722 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.723 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.724 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.724 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.727 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:56:19.729 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:56:19.730 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:56:19.732 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:56:19.734 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.736 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.737 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.745 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:56:19.746 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:56:19.747 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:56:19.747 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:56:19.748 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.750 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.751 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.753 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:56:19.754 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:56:19.755 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:56:19.756 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:56:19.758 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.760 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.760 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.762 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:56:19.763 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:56:19.764 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:56:19.765 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:56:19.767 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.768 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.768 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.769 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:56:19.770 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:56:19.771 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:56:19.772 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 19:56:19.774 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:56:19.776 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.776 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.777 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.777 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 19:56:19.817 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 19:56:19.822 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 19:56:19.830 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 19:56:19.836 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 19:56:19.841 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 19:56:19.848 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 19:56:19.853 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 19:56:19.861 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 19:56:19.864 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:56:19.874 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 19:56:19.877 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:56:19.882 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 19:56:19.883 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:56:19.884 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:56:19.885 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:56:19.885 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:56:19.886 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:56:19.891 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 19:56:19.897 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 19:56:19.898 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:56:19.898 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:56:19.899 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:56:19.900 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:56:19.911 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 19:56:19.912 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:56:19.913 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:56:19.914 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:56:19.915 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:56:19.915 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 19:56:19.916 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 19:56:19.922 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 19:56:35.929 [http-nio-8080-exec-1] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 19:56:35.929 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 19:56:35.930 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 19:56:35.930 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 19:56:35.930 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 19:56:35.931 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@33096c8d
2025-08-03 19:56:35.931 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@3ad8ea51
2025-08-03 19:56:35.931 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 19:56:35.931 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-03 19:56:35.959 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-03 19:56:35.970 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 19:56:35.973 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 19:56:35.990 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-03 19:56:35.993 [http-nio-8080-exec-1] DEBUG [4f2154d9b4d1462c] o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-08-03 19:56:36.011 [http-nio-8080-exec-1] DEBUG [4f2154d9b4d1462c] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 19:56:36.054 [http-nio-8080-exec-1] DEBUG [4f2154d9b4d1462c] o.s.web.client.RestTemplate - HTTP GET https://httpbin.org/status/200
2025-08-03 19:56:36.059 [http-nio-8080-exec-1] DEBUG [4f2154d9b4d1462c] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 19:56:39.283 [http-nio-8080-exec-1] DEBUG [4f2154d9b4d1462c] o.s.web.client.RestTemplate - Response 200 OK
2025-08-03 19:56:39.638 [http-nio-8080-exec-1] WARN  [4f2154d9b4d1462c] o.s.b.a.d.redis.RedisHealthIndicator - Redis health check failed
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1249)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:1055)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:195)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:92)
	at org.springframework.boot.actuate.data.redis.RedisHealthIndicator.doHealthCheck(RedisHealthIndicator.java:49)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.getHealth(HealthEndpointWebExtension.java:94)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.getHealth(HealthEndpointWebExtension.java:47)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getLoggedHealth(HealthEndpointSupport.java:172)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:145)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateContribution(HealthEndpointSupport.java:156)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:141)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:110)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:81)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.health(HealthEndpointWebExtension.java:80)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.health(HealthEndpointWebExtension.java:69)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:74)
	at org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60)
	at org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$ServletWebOperationAdapter.handle(AbstractWebMvcEndpointHandlerMapping.java:327)
	at org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(AbstractWebMvcEndpointHandlerMapping.java:434)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.deliverytech.delivery.filter.CorrelationIdFilter.doFilter(CorrelationIdFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.deliverytech.delivery.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:67)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:352)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:220)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787)
	... 174 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-03 19:56:39.654 [http-nio-8080-exec-1] DEBUG [4f2154d9b4d1462c] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 19:56:39.690 [http-nio-8080-exec-1] DEBUG [4f2154d9b4d1462c] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@1afeb923]
2025-08-03 19:56:39.712 [http-nio-8080-exec-1] DEBUG [4f2154d9b4d1462c] o.s.web.servlet.DispatcherServlet - Completed 503 SERVICE_UNAVAILABLE
2025-08-03 19:56:39.884 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 19:56:39.885 [http-nio-8080-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 19:56:39.885 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 19:56:39.894 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 19:56:39.913 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 19:56:39.917 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 19:56:39.919 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 20:03:31.399 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 20:03:31.568 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 20:03:31.969 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 20:03:32.003 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 20:03:32.049 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 20:03:32.050 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 20:03:32.052 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 20:03:32.054 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 20:03:32.055 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 20:03:32.226 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 20:03:32.228 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 20:03:32.243 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 20:03:45.913 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 4040 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 20:03:45.915 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 20:03:45.916 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 20:03:45.967 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 20:03:45.967 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 20:03:48.938 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 20:03:48.940 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 20:03:49.189 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 234 ms. Found 5 JPA repository interfaces.
2025-08-03 20:03:49.224 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 20:03:49.226 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-03 20:03:49.253 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 20:03:49.254 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 20:03:49.254 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 20:03:49.255 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 20:03:49.255 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 20:03:49.255 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-08-03 20:03:50.422 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 20:03:50.444 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 20:03:50.446 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 20:03:50.447 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 20:03:50.520 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 20:03:50.521 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4554 ms
2025-08-03 20:03:51.570 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 20:03:51.604 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 20:03:51.776 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 20:03:51.778 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 20:03:51.818 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 20:03:52.926 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 20:03:52.932 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 20:03:52.932 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 20:03:52.933 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 20:03:52.933 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 20:03:52.933 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 20:03:52.941 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 20:03:52.949 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 20:03:52.951 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 20:03:52.952 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 20:03:52.953 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 20:03:52.955 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 20:03:52.959 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 20:03:52.971 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 20:03:52.972 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 20:03:52.973 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 20:03:52.974 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 20:03:52.979 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 20:03:53.587 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 20:03:53.587 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 20:03:53.694 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 20:03:54.968 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 20:03:55.971 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 20:03:56.109 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 20:03:56.310 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 20:03:56.486 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 20:03:56.613 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 20:03:56.684 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 20:03:57.475 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 20:03:57.531 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 20:03:57.601 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 20:03:57.636 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 20:03:57.656 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 12.635 seconds (process running for 13.551)
2025-08-03 20:03:57.858 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 20:03:57.893 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 20:03:57.894 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 20:03:57.896 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 20:03:58.303 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.315 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.317 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.317 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.318 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.319 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.330 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.332 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.333 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.333 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.334 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.335 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.348 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.350 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.351 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.353 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.354 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.356 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.366 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:03:58.375 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:03:58.378 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:03:58.379 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:03:58.381 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:03:58.384 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:03:58.387 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.388 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.389 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.390 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.390 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.391 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.391 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.392 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.393 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.393 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.394 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.395 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.396 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.396 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.397 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.398 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.399 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.400 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.403 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:03:58.406 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:03:58.408 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:03:58.410 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:03:58.412 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.415 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.417 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.424 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:03:58.426 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:03:58.428 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:03:58.430 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:03:58.431 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.432 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.433 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.434 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:03:58.435 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:03:58.436 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:03:58.437 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:03:58.438 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.438 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.440 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.441 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:03:58.442 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:03:58.443 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:03:58.444 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:03:58.446 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.447 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.447 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.449 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:03:58.450 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:03:58.451 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:03:58.452 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:03:58.452 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:03:58.454 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.454 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.455 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.456 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:03:58.498 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 20:03:58.502 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 20:03:58.510 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 20:03:58.515 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 20:03:58.519 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 20:03:58.524 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 20:03:58.531 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 20:03:58.537 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 20:03:58.540 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:03:58.549 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 20:03:58.550 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:03:58.554 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 20:03:58.555 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:03:58.556 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:03:58.558 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:03:58.559 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:03:58.560 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:03:58.564 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 20:03:58.568 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 20:03:58.570 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:03:58.571 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:03:58.572 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:03:58.573 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:03:58.579 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 20:03:58.581 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:03:58.582 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:03:58.583 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:03:58.583 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:03:58.584 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:03:58.584 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:03:58.590 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 20:04:04.278 [http-nio-8080-exec-1] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 20:04:04.278 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 20:04:04.278 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 20:04:04.278 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 20:04:04.278 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 20:04:04.280 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@763922bb
2025-08-03 20:04:04.280 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@163fd524
2025-08-03 20:04:04.280 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 20:04:04.280 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-03 20:04:04.308 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-03 20:04:04.318 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 20:04:04.321 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 20:04:04.322 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 12783178A0B201FB1C8417E0E16593D3
2025-08-03 20:04:04.329 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-03 20:04:04.343 [http-nio-8080-exec-1] DEBUG [331317041fce4740] o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-08-03 20:04:04.367 [http-nio-8080-exec-1] DEBUG [331317041fce4740] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 20:04:04.413 [http-nio-8080-exec-1] DEBUG [331317041fce4740] o.s.web.client.RestTemplate - HTTP GET https://httpbin.org/status/200
2025-08-03 20:04:04.416 [http-nio-8080-exec-1] DEBUG [331317041fce4740] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 20:04:07.223 [http-nio-8080-exec-1] DEBUG [331317041fce4740] o.s.web.client.RestTemplate - Response 200 OK
2025-08-03 20:04:07.250 [http-nio-8080-exec-1] DEBUG [331317041fce4740] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, application/xml;q=0.9, */*;q=0.8] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 20:04:07.303 [http-nio-8080-exec-1] DEBUG [331317041fce4740] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@32699709]
2025-08-03 20:04:07.323 [http-nio-8080-exec-1] DEBUG [331317041fce4740] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 20:04:07.403 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 20:04:07.405 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 20:04:07.406 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 20:04:07.412 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 20:04:07.421 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 20:04:07.422 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 20:04:07.423 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 20:10:58.395 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-03 20:10:58.411 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 20:10:58.412 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 20:10:58.415 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-03 20:10:58.417 [http-nio-8080-exec-7] DEBUG [168e72123c0c4c05] o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-08-03 20:10:58.419 [http-nio-8080-exec-7] DEBUG [168e72123c0c4c05] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 20:10:58.424 [http-nio-8080-exec-7] DEBUG [168e72123c0c4c05] o.s.web.client.RestTemplate - HTTP GET https://httpbin.org/status/200
2025-08-03 20:10:58.425 [http-nio-8080-exec-7] DEBUG [168e72123c0c4c05] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 20:11:21.669 [http-nio-8080-exec-7] WARN  [168e72123c0c4c05] o.s.b.a.health.HealthEndpointSupport - Health contributor com.deliverytech.delivery.health.ExternalServiceHealthIndicator (externalService) took 23222ms to respond
2025-08-03 20:11:21.697 [http-nio-8080-exec-7] DEBUG [168e72123c0c4c05] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 20:11:21.702 [http-nio-8080-exec-7] DEBUG [168e72123c0c4c05] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@7c186d7b]
2025-08-03 20:11:21.723 [http-nio-8080-exec-7] DEBUG [168e72123c0c4c05] o.s.web.servlet.DispatcherServlet - Completed 503 SERVICE_UNAVAILABLE
2025-08-03 20:11:21.919 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 20:11:21.923 [http-nio-8080-exec-8] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 20:11:21.924 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 20:11:22.010 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 20:11:22.016 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 20:11:22.021 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 20:11:22.022 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 20:12:13.946 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-03 20:12:13.948 [http-nio-8080-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 20:12:13.948 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 20:12:13.953 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-03 20:12:13.954 [http-nio-8080-exec-3] DEBUG [f9e440065cf24335] o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-08-03 20:12:13.958 [http-nio-8080-exec-3] DEBUG [f9e440065cf24335] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 20:12:13.960 [http-nio-8080-exec-3] DEBUG [f9e440065cf24335] o.s.web.client.RestTemplate - HTTP GET https://httpbin.org/status/200
2025-08-03 20:12:13.960 [http-nio-8080-exec-3] DEBUG [f9e440065cf24335] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 20:12:23.648 [http-nio-8080-exec-3] DEBUG [f9e440065cf24335] o.s.web.client.RestTemplate - Response 200 OK
2025-08-03 20:12:23.655 [http-nio-8080-exec-3] DEBUG [f9e440065cf24335] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 20:12:23.655 [http-nio-8080-exec-3] DEBUG [f9e440065cf24335] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@30b09897]
2025-08-03 20:12:23.656 [http-nio-8080-exec-3] DEBUG [f9e440065cf24335] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 20:12:23.716 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 20:12:23.722 [http-nio-8080-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 20:12:23.723 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 20:12:23.725 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 20:12:23.729 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 20:12:23.731 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 20:12:23.732 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 20:16:36.439 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 20:16:36.601 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 20:16:36.689 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 20:16:36.697 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 20:16:36.706 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 20:16:36.707 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 20:16:36.707 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 20:16:36.708 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 20:16:36.708 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 20:16:36.727 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 20:16:36.728 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 20:16:36.732 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 20:18:07.593 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 4944 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 20:18:07.613 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 20:18:07.615 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 20:18:07.709 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 20:18:07.709 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 20:18:10.597 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 20:18:10.599 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 20:18:10.831 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 217 ms. Found 5 JPA repository interfaces.
2025-08-03 20:18:10.849 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 20:18:10.850 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-03 20:18:10.876 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 20:18:10.879 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 20:18:10.880 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 20:18:10.880 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 20:18:10.881 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 20:18:10.881 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
2025-08-03 20:18:12.132 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 20:18:12.156 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 20:18:12.160 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 20:18:12.160 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 20:18:12.272 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 20:18:12.273 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4563 ms
2025-08-03 20:18:13.397 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 20:18:13.431 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 20:18:13.607 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 20:18:13.629 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 20:18:13.656 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 20:18:14.768 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 20:18:14.771 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 20:18:14.772 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 20:18:14.772 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 20:18:14.772 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 20:18:14.772 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 20:18:14.777 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 20:18:14.786 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 20:18:14.787 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 20:18:14.789 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 20:18:14.790 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 20:18:14.791 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 20:18:14.794 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 20:18:14.806 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 20:18:14.807 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 20:18:14.808 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 20:18:14.809 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 20:18:14.815 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 20:18:15.441 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 20:18:15.443 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 20:18:15.553 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 20:18:16.781 [restartedMain] WARN  [] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConfig': Injection of autowired dependencies failed
2025-08-03 20:18:16.783 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 20:18:16.786 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 20:18:16.788 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 20:18:16.788 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 20:18:16.790 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 20:18:16.790 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 20:18:16.791 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 20:18:16.803 [restartedMain] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 20:18:16.804 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 20:18:16.805 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 20:18:16.811 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-03 20:18:16.863 [restartedMain] INFO  [] o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-03 20:18:16.889 [restartedMain] ERROR [] o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConfig': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:515)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.deliverytech.delivery.DeliveryApiApplication.main(DeliveryApiApplication.java:12)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.util.PlaceholderResolutionException: Could not resolve placeholder 'spring.redis.host' in value "${spring.redis.host}"
	at org.springframework.util.PlaceholderResolutionException.withValue(PlaceholderResolutionException.java:81)
	at org.springframework.util.PlaceholderParser$ParsedValue.resolve(PlaceholderParser.java:423)
	at org.springframework.util.PlaceholderParser.replacePlaceholders(PlaceholderParser.java:128)
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:118)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:114)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:293)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:264)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:186)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:971)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1650)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	... 22 common frames omitted
2025-08-03 20:19:21.489 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 15416 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 20:19:21.511 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 20:19:21.513 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 20:19:21.589 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 20:19:21.589 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 20:19:24.137 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 20:19:24.140 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 20:19:24.410 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 247 ms. Found 5 JPA repository interfaces.
2025-08-03 20:19:24.433 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 20:19:24.435 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-03 20:19:24.465 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 20:19:24.466 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 20:19:24.467 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 20:19:24.468 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 20:19:24.468 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 20:19:24.468 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-08-03 20:19:25.611 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 20:19:25.631 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 20:19:25.635 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 20:19:25.637 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 20:19:25.730 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 20:19:25.731 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4141 ms
2025-08-03 20:19:26.836 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 20:19:26.893 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 20:19:27.124 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 20:19:27.127 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 20:19:27.158 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 20:19:28.293 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 20:19:28.296 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 20:19:28.296 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 20:19:28.297 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 20:19:28.297 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 20:19:28.297 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 20:19:28.302 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 20:19:28.311 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 20:19:28.313 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 20:19:28.314 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 20:19:28.315 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 20:19:28.318 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 20:19:28.320 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 20:19:28.333 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 20:19:28.335 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 20:19:28.335 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 20:19:28.337 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 20:19:28.341 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 20:19:28.883 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 20:19:28.884 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 20:19:29.012 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 20:19:30.436 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 20:19:31.658 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 20:19:31.821 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 20:19:32.089 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 20:19:32.271 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 20:19:32.385 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 20:19:32.446 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 20:19:33.132 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 20:19:33.552 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 20:19:33.626 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 20:19:33.644 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 20:19:33.663 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 13.034 seconds (process running for 13.78)
2025-08-03 20:19:33.912 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 20:19:33.965 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 20:19:33.967 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 20:19:33.969 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 20:19:34.381 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.397 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.398 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.398 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.399 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.400 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.410 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.413 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.414 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.414 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.415 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.416 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.440 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.445 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.446 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.447 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.448 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.448 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.457 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:19:34.466 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:19:34.468 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:19:34.469 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:19:34.470 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:19:34.472 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:19:34.474 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.477 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.478 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.479 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.479 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.480 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.481 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.481 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.482 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.482 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.483 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.483 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.484 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.484 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.486 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.487 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.489 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.489 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.492 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:19:34.495 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:19:34.496 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:19:34.497 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:19:34.500 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.502 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.504 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.510 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:19:34.512 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:19:34.513 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:19:34.514 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:19:34.515 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.517 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.517 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.519 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:19:34.520 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:19:34.521 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:19:34.522 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:19:34.524 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.525 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.527 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.529 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:19:34.530 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:19:34.531 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:19:34.532 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:19:34.547 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.548 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.548 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.550 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:19:34.553 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:19:34.555 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:19:34.556 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:19:34.559 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:19:34.561 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.562 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.563 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.563 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:19:34.607 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 20:19:34.614 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 20:19:34.624 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 20:19:34.633 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 20:19:34.638 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 20:19:34.647 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 20:19:34.654 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 20:19:34.661 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 20:19:34.663 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:19:34.670 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 20:19:34.671 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:19:34.680 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 20:19:34.682 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:19:34.683 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:19:34.684 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:19:34.685 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:19:34.686 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:19:34.690 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 20:19:34.694 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 20:19:34.697 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:19:34.699 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:19:34.700 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:19:34.700 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:19:34.707 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 20:19:34.709 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:19:34.710 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:19:34.711 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:19:34.712 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:19:34.712 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:19:34.713 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:19:34.716 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 20:19:55.264 [http-nio-8080-exec-1] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 20:19:55.265 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 20:19:55.266 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 20:19:55.266 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 20:19:55.266 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 20:19:55.267 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@29eeedbb
2025-08-03 20:19:55.268 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@6c2b91d2
2025-08-03 20:19:55.268 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 20:19:55.268 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-03 20:19:55.296 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-03 20:19:55.307 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 20:19:55.311 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 20:19:55.320 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-03 20:19:55.323 [http-nio-8080-exec-1] DEBUG [2a2d91d8e5ae4158] o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-08-03 20:19:55.356 [http-nio-8080-exec-1] DEBUG [2a2d91d8e5ae4158] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 20:19:55.410 [http-nio-8080-exec-1] DEBUG [2a2d91d8e5ae4158] o.s.web.client.RestTemplate - HTTP GET https://httpbin.org/status/200
2025-08-03 20:19:55.413 [http-nio-8080-exec-1] DEBUG [2a2d91d8e5ae4158] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 20:20:13.341 [http-nio-8080-exec-1] DEBUG [2a2d91d8e5ae4158] o.s.web.client.RestTemplate - Response 200 OK
2025-08-03 20:20:13.343 [http-nio-8080-exec-1] WARN  [2a2d91d8e5ae4158] o.s.b.a.health.HealthEndpointSupport - Health contributor com.deliverytech.delivery.health.ExternalServiceHealthIndicator (externalService) took 17977ms to respond
2025-08-03 20:20:13.702 [http-nio-8080-exec-1] WARN  [2a2d91d8e5ae4158] o.s.b.a.d.redis.RedisHealthIndicator - Redis health check failed
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1249)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:1055)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:195)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:92)
	at org.springframework.boot.actuate.data.redis.RedisHealthIndicator.doHealthCheck(RedisHealthIndicator.java:49)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.getHealth(HealthEndpointWebExtension.java:94)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.getHealth(HealthEndpointWebExtension.java:47)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getLoggedHealth(HealthEndpointSupport.java:172)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:145)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateContribution(HealthEndpointSupport.java:156)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:141)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:110)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:81)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.health(HealthEndpointWebExtension.java:80)
	at org.springframework.boot.actuate.health.HealthEndpointWebExtension.health(HealthEndpointWebExtension.java:69)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:74)
	at org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60)
	at org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$ServletWebOperationAdapter.handle(AbstractWebMvcEndpointHandlerMapping.java:327)
	at org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(AbstractWebMvcEndpointHandlerMapping.java:434)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.deliverytech.delivery.filter.CorrelationIdFilter.doFilter(CorrelationIdFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.deliverytech.delivery.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:67)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:352)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:220)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787)
	... 174 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-03 20:20:13.717 [http-nio-8080-exec-1] DEBUG [2a2d91d8e5ae4158] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 20:20:13.754 [http-nio-8080-exec-1] DEBUG [2a2d91d8e5ae4158] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@42ffaba2]
2025-08-03 20:20:13.776 [http-nio-8080-exec-1] DEBUG [2a2d91d8e5ae4158] o.s.web.servlet.DispatcherServlet - Completed 503 SERVICE_UNAVAILABLE
2025-08-03 20:20:13.869 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 20:20:13.870 [http-nio-8080-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 20:20:13.871 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 20:20:13.877 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 20:20:13.885 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 20:20:13.887 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 20:20:13.888 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 20:25:05.267 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 20:25:05.335 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 20:25:05.564 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 20:25:05.596 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 20:25:05.626 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 20:25:05.627 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 20:25:05.627 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 20:25:05.628 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 20:25:05.629 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 20:25:05.727 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 20:25:05.729 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 20:25:05.742 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 20:25:20.251 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 22932 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 20:25:20.253 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 20:25:20.254 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 20:25:20.343 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 20:25:20.343 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 20:25:22.968 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 20:25:22.972 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 20:25:23.194 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 210 ms. Found 5 JPA repository interfaces.
2025-08-03 20:25:23.217 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 20:25:23.219 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-03 20:25:23.248 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 20:25:23.249 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 20:25:23.250 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 20:25:23.251 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 20:25:23.251 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 20:25:23.252 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
2025-08-03 20:25:24.484 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 20:25:24.507 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 20:25:24.510 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 20:25:24.510 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 20:25:24.593 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 20:25:24.593 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4249 ms
2025-08-03 20:25:26.249 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 20:25:26.294 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 20:25:26.521 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 20:25:26.523 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 20:25:26.561 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 20:25:27.853 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 20:25:27.856 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 20:25:27.856 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 20:25:27.856 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 20:25:27.856 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 20:25:27.857 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 20:25:27.861 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 20:25:27.871 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 20:25:27.873 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 20:25:27.874 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 20:25:27.875 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 20:25:27.877 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 20:25:27.879 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 20:25:27.892 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 20:25:27.894 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 20:25:27.895 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 20:25:27.896 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 20:25:27.904 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 20:25:28.554 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 20:25:28.555 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 20:25:28.685 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 20:25:30.172 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 20:25:30.696 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 20:25:30.812 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 20:25:31.016 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 20:25:31.204 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 20:25:31.355 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 20:25:31.423 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 20:25:32.172 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 20:25:32.225 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 20:25:32.295 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 20:25:32.313 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 20:25:32.329 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 13.066 seconds (process running for 14.132)
2025-08-03 20:25:32.559 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 20:25:32.597 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 20:25:32.600 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 20:25:32.603 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 20:25:33.013 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.028 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.029 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.030 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.031 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.031 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.041 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.042 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.043 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.043 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.044 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.044 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.056 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.059 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.060 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.061 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.062 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.063 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.073 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:25:33.083 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:25:33.086 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:25:33.088 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:25:33.090 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:25:33.092 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:25:33.093 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.095 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.095 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.096 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.096 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.098 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.099 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.101 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.103 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.104 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.105 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.106 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.106 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.107 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.108 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.108 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.109 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.110 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.114 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:25:33.120 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:25:33.122 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:25:33.125 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:25:33.130 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.135 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.137 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.145 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:25:33.147 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:25:33.149 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:25:33.152 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:25:33.153 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.154 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.154 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.156 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:25:33.156 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:25:33.158 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:25:33.159 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:25:33.160 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.161 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.162 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.165 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:25:33.169 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:25:33.171 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:25:33.172 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:25:33.173 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.174 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.175 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.176 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:25:33.178 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:25:33.179 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:25:33.180 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:25:33.181 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:25:33.182 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.184 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.185 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.186 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:25:33.238 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 20:25:33.245 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 20:25:33.253 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 20:25:33.260 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 20:25:33.265 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 20:25:33.274 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 20:25:33.279 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 20:25:33.285 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 20:25:33.287 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:25:33.293 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 20:25:33.294 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:25:33.296 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 20:25:33.298 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:25:33.298 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:25:33.300 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:25:33.301 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:25:33.303 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:25:33.306 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 20:25:33.309 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 20:25:33.310 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:25:33.311 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:25:33.312 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:25:33.312 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:25:33.319 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 20:25:33.321 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:25:33.321 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:25:33.322 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:25:33.323 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:25:33.324 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:25:33.324 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:25:33.329 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 20:25:57.904 [http-nio-8080-exec-1] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 20:25:57.904 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 20:25:57.904 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 20:25:57.904 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 20:25:57.904 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 20:25:57.906 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@11ed5c80
2025-08-03 20:25:57.906 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@843d51f
2025-08-03 20:25:57.906 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 20:25:57.906 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-03 20:25:57.939 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-03 20:25:57.952 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 20:25:57.954 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 20:25:57.970 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-03 20:25:57.973 [http-nio-8080-exec-1] DEBUG [9ad144e0c7034c54] o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-08-03 20:25:57.991 [http-nio-8080-exec-1] DEBUG [9ad144e0c7034c54] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 20:25:58.059 [http-nio-8080-exec-1] DEBUG [9ad144e0c7034c54] o.s.web.client.RestTemplate - HTTP GET https://httpbin.org/status/200
2025-08-03 20:25:58.063 [http-nio-8080-exec-1] DEBUG [9ad144e0c7034c54] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 20:26:00.973 [http-nio-8080-exec-1] DEBUG [9ad144e0c7034c54] o.s.web.client.RestTemplate - Response 200 OK
2025-08-03 20:26:01.377 [boundedElastic-1] WARN  [] o.s.b.a.d.r.RedisReactiveHealthIndicator - Redis health check failed
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedReactiveConnection(LettuceConnectionFactory.java:1274)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:1149)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:120)
	at reactor.core.publisher.MonoSupplier.call(MonoSupplier.java:67)
	at reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription.run(FluxSubscribeOnCallable.java:228)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:352)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:220)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787)
	... 16 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-03 20:26:01.387 [http-nio-8080-exec-1] DEBUG [9ad144e0c7034c54] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 20:26:01.428 [http-nio-8080-exec-1] DEBUG [9ad144e0c7034c54] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@39748cde]
2025-08-03 20:26:01.453 [http-nio-8080-exec-1] DEBUG [9ad144e0c7034c54] o.s.web.servlet.DispatcherServlet - Completed 503 SERVICE_UNAVAILABLE
2025-08-03 20:26:01.544 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 20:26:01.546 [http-nio-8080-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 20:26:01.546 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 20:26:01.555 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 20:26:01.581 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 20:26:01.583 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 20:26:01.584 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 20:28:39.481 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 20:28:39.667 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 20:28:40.362 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 20:28:40.387 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 20:28:40.428 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 20:28:40.430 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 20:28:40.431 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 20:28:40.432 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 20:28:40.432 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 20:28:40.577 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 20:28:40.577 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 20:28:40.587 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 20:35:05.781 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 7628 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 20:35:05.800 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 20:35:05.801 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 20:35:05.846 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 20:35:05.846 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 20:35:09.846 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 20:35:09.867 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 20:35:10.100 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 212 ms. Found 5 JPA repository interfaces.
2025-08-03 20:35:10.119 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 20:35:10.120 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-03 20:35:10.147 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 20:35:10.148 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 20:35:10.148 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 20:35:10.148 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 20:35:10.148 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 20:35:10.149 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-08-03 20:35:11.294 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 20:35:11.321 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 20:35:11.324 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 20:35:11.324 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 20:35:11.400 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 20:35:11.401 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5554 ms
2025-08-03 20:35:12.881 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 20:35:12.932 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 20:35:13.132 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 20:35:13.135 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 20:35:13.161 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 20:35:14.202 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 20:35:14.206 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 20:35:14.206 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 20:35:14.207 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 20:35:14.207 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 20:35:14.207 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 20:35:14.211 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 20:35:14.219 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 20:35:14.221 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 20:35:14.222 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 20:35:14.223 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 20:35:14.225 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 20:35:14.228 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 20:35:14.244 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 20:35:14.246 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 20:35:14.247 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 20:35:14.248 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 20:35:14.252 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 20:35:14.793 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 20:35:14.795 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 20:35:14.919 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 20:35:16.217 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 20:35:16.680 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 20:35:16.795 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 20:35:17.026 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 20:35:17.211 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 20:35:17.354 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 20:35:17.413 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 20:35:18.193 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 20:35:18.614 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 20:35:18.693 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 20:35:18.735 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 20:35:18.762 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 14.022 seconds (process running for 14.856)
2025-08-03 20:35:18.997 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 20:35:19.033 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 20:35:19.035 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 20:35:19.036 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 20:35:19.449 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.463 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.463 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.464 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.465 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.466 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.477 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.478 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.479 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.479 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.480 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.480 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.503 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.505 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.506 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.507 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.508 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.509 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.518 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:35:19.526 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:35:19.528 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:35:19.529 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:35:19.530 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:35:19.531 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:35:19.532 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.534 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.535 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.535 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.536 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.537 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.537 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.538 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.538 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.539 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.539 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.540 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.541 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.541 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.541 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.543 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.543 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.543 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.546 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:35:19.550 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:35:19.551 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:35:19.552 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:35:19.554 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.557 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.557 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.562 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:35:19.563 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:35:19.565 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:35:19.567 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:35:19.568 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.569 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.570 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.571 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:35:19.572 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:35:19.573 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:35:19.575 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:35:19.576 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.577 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.577 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.579 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:35:19.580 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:35:19.582 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:35:19.583 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:35:19.584 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.586 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.588 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.590 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:35:19.592 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:35:19.594 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:35:19.594 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 20:35:19.596 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:35:19.599 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.600 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.601 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.601 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 20:35:19.640 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 20:35:19.644 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 20:35:19.652 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 20:35:19.658 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 20:35:19.661 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 20:35:19.668 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 20:35:19.672 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 20:35:19.678 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 20:35:19.680 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:35:19.689 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 20:35:19.691 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:35:19.697 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 20:35:19.699 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:35:19.700 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:35:19.701 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:35:19.702 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:35:19.704 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:35:19.709 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 20:35:19.713 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 20:35:19.714 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:35:19.716 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:35:19.717 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:35:19.718 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:35:19.728 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 20:35:19.729 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:35:19.729 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:35:19.730 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:35:19.731 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:35:19.732 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 20:35:19.733 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 20:35:19.738 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 20:35:40.399 [http-nio-8080-exec-1] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 20:35:40.400 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 20:35:40.400 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 20:35:40.400 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 20:35:40.400 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 20:35:40.401 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6037b386
2025-08-03 20:35:40.402 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@5ca2d7de
2025-08-03 20:35:40.402 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 20:35:40.402 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-03 20:35:40.427 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-03 20:35:40.438 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 20:35:40.441 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 20:35:40.453 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-03 20:35:40.455 [http-nio-8080-exec-1] DEBUG [dd4095744a654874] o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-08-03 20:35:40.472 [http-nio-8080-exec-1] DEBUG [dd4095744a654874] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 20:35:40.515 [http-nio-8080-exec-1] DEBUG [dd4095744a654874] o.s.web.client.RestTemplate - HTTP GET https://httpbin.org/status/200
2025-08-03 20:35:40.518 [http-nio-8080-exec-1] DEBUG [dd4095744a654874] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 20:35:43.387 [http-nio-8080-exec-1] DEBUG [dd4095744a654874] o.s.web.client.RestTemplate - Response 200 OK
2025-08-03 20:35:43.817 [boundedElastic-1] WARN  [] o.s.b.a.d.r.RedisReactiveHealthIndicator - Redis health check failed
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedReactiveConnection(LettuceConnectionFactory.java:1274)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:1149)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:120)
	at reactor.core.publisher.MonoSupplier.call(MonoSupplier.java:67)
	at reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription.run(FluxSubscribeOnCallable.java:228)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:352)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:220)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787)
	... 16 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-03 20:35:43.827 [http-nio-8080-exec-1] DEBUG [dd4095744a654874] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 20:35:43.868 [http-nio-8080-exec-1] DEBUG [dd4095744a654874] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@409f5062]
2025-08-03 20:35:43.889 [http-nio-8080-exec-1] DEBUG [dd4095744a654874] o.s.web.servlet.DispatcherServlet - Completed 503 SERVICE_UNAVAILABLE
2025-08-03 20:35:44.060 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 20:35:44.061 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 20:35:44.062 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 20:35:44.071 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 20:35:44.088 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 20:35:44.090 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 20:35:44.091 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 20:37:25.969 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 20:37:26.071 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 20:37:26.366 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 20:37:26.403 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 20:37:26.454 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 20:37:26.456 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 20:37:26.457 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 20:37:26.458 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 20:37:26.458 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 20:37:26.647 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 20:37:26.649 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 20:37:26.669 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 21:13:07.248 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 25632 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 21:13:07.265 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 21:13:07.268 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 21:13:07.343 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 21:13:07.344 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 21:13:09.675 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 21:13:09.693 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 21:13:09.946 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 226 ms. Found 5 JPA repository interfaces.
2025-08-03 21:13:09.968 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 21:13:09.970 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-03 21:13:09.995 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 21:13:09.996 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 21:13:09.996 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 21:13:09.996 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 21:13:09.996 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 21:13:09.996 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-08-03 21:13:11.317 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 21:13:11.361 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 21:13:11.368 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 21:13:11.369 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 21:13:11.508 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 21:13:11.509 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4163 ms
2025-08-03 21:13:13.289 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 21:13:13.333 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 21:13:13.570 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 21:13:13.573 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 21:13:13.636 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 21:13:15.120 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 21:13:15.124 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 21:13:15.124 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 21:13:15.125 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 21:13:15.125 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 21:13:15.125 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 21:13:15.130 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 21:13:15.139 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 21:13:15.141 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 21:13:15.143 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 21:13:15.144 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 21:13:15.146 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 21:13:15.148 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 21:13:15.160 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 21:13:15.161 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 21:13:15.162 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 21:13:15.163 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 21:13:15.168 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 21:13:16.086 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 21:13:16.089 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 21:13:16.322 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 21:13:18.447 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 21:13:19.525 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 21:13:19.876 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 21:13:20.358 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 21:13:20.698 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 21:13:20.821 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 21:13:20.921 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 21:13:21.832 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 21:13:21.886 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 21:13:21.986 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 21:13:22.007 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 21:13:22.032 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 15.744 seconds (process running for 16.791)
2025-08-03 21:13:22.295 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 21:13:22.334 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 21:13:22.336 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 21:13:22.339 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 21:13:22.743 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.755 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.756 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.756 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.757 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.758 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.765 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.766 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.767 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.768 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.769 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.769 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.780 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.782 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.783 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.785 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.786 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.788 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.798 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:13:22.807 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:13:22.809 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:13:22.810 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:13:22.812 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:13:22.813 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:13:22.815 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.816 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.816 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.817 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.818 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.818 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.819 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.820 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.820 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.820 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.821 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.821 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.822 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.823 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.824 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.825 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.825 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.826 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.829 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:13:22.831 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:13:22.833 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:13:22.834 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:13:22.836 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.838 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.839 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.844 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:13:22.846 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:13:22.848 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:13:22.849 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:13:22.850 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.850 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.851 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.852 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:13:22.853 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:13:22.855 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:13:22.855 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:13:22.858 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.859 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.859 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.860 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:13:22.861 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:13:22.862 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:13:22.863 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:13:22.864 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.865 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.866 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.867 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:13:22.868 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:13:22.869 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:13:22.869 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:13:22.871 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:13:22.873 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.874 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.874 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.875 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:13:22.915 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 21:13:22.920 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 21:13:22.928 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 21:13:22.934 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 21:13:22.937 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 21:13:22.943 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 21:13:22.947 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 21:13:22.952 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 21:13:22.954 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:13:22.959 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 21:13:22.960 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:13:22.963 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 21:13:22.964 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:13:22.965 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:13:22.966 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:13:22.966 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:13:22.967 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:13:22.969 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 21:13:22.974 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 21:13:22.975 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:13:22.976 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:13:22.976 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:13:22.976 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:13:22.984 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 21:13:22.986 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:13:22.987 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:13:22.989 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:13:22.990 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:13:22.991 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:13:22.992 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:13:22.998 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 21:14:17.084 [http-nio-8080-exec-1] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 21:14:17.084 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 21:14:17.085 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 21:14:17.085 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 21:14:17.085 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 21:14:17.087 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@250c6636
2025-08-03 21:14:17.087 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@76da059c
2025-08-03 21:14:17.088 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 21:14:17.088 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-08-03 21:14:17.132 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-03 21:14:17.153 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 21:14:17.157 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 21:14:17.157 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id DEF9FF4D7565F4C0A92E3D45057514CE
2025-08-03 21:14:17.175 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-03 21:14:17.197 [http-nio-8080-exec-1] DEBUG [6052036ee49e4753] o.s.web.servlet.DispatcherServlet - GET "/actuator/health", parameters={}
2025-08-03 21:14:17.221 [http-nio-8080-exec-1] DEBUG [6052036ee49e4753] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/octet-stream" to []
2025-08-03 21:14:17.279 [http-nio-8080-exec-1] DEBUG [6052036ee49e4753] o.s.web.client.RestTemplate - HTTP GET https://httpbin.org/status/200
2025-08-03 21:14:17.284 [http-nio-8080-exec-1] DEBUG [6052036ee49e4753] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-03 21:14:40.383 [http-nio-8080-exec-1] WARN  [6052036ee49e4753] o.s.b.a.health.HealthEndpointSupport - Health contributor com.deliverytech.delivery.health.ExternalServiceHealthIndicator (externalService) took 23153ms to respond
2025-08-03 21:14:40.836 [boundedElastic-1] WARN  [] o.s.b.a.d.r.RedisReactiveHealthIndicator - Redis health check failed
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedReactiveConnection(LettuceConnectionFactory.java:1274)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:1149)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:120)
	at reactor.core.publisher.MonoSupplier.call(MonoSupplier.java:67)
	at reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription.run(FluxSubscribeOnCallable.java:228)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:354)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:220)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787)
	... 16 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-03 21:14:40.847 [http-nio-8080-exec-1] DEBUG [6052036ee49e4753] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/vnd.spring-boot.actuator.v3+json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-08-03 21:14:40.898 [http-nio-8080-exec-1] DEBUG [6052036ee49e4753] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [org.springframework.boot.actuate.health.SystemHealth@6d06c9ef]
2025-08-03 21:14:40.921 [http-nio-8080-exec-1] DEBUG [6052036ee49e4753] o.s.web.servlet.DispatcherServlet - Completed 503 SERVICE_UNAVAILABLE
2025-08-03 21:14:41.147 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-03 21:14:41.150 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 21:14:41.151 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 21:14:41.157 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 21:14:41.193 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-03 21:14:41.194 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 21:14:41.195 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 21:15:11.206 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 21:15:11.212 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 21:15:11.242 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 21:15:11.244 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 21:15:11.249 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 21:15:11.250 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 21:15:11.250 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 21:15:11.251 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 21:15:11.251 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 21:15:11.265 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 21:15:11.266 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 21:15:11.269 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 21:53:29.369 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 6760 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 21:53:29.404 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 21:53:29.418 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 21:53:29.520 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 21:53:29.537 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 21:53:33.518 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 21:53:33.521 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 21:53:33.852 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 309 ms. Found 5 JPA repository interfaces.
2025-08-03 21:53:33.870 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 21:53:33.871 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-03 21:53:33.893 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 21:53:33.895 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 21:53:33.895 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 21:53:33.896 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 21:53:33.896 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 21:53:33.896 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2025-08-03 21:53:35.208 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 21:53:35.233 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 21:53:35.238 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 21:53:35.239 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 21:53:35.332 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 21:53:35.332 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5794 ms
2025-08-03 21:53:37.182 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 21:53:37.220 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 21:53:37.453 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 21:53:37.454 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 21:53:37.487 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 21:53:38.674 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 21:53:38.676 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 21:53:38.677 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 21:53:38.677 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 21:53:38.677 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 21:53:38.677 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 21:53:38.682 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 21:53:38.691 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 21:53:38.693 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 21:53:38.694 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 21:53:38.696 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 21:53:38.697 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 21:53:38.699 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 21:53:38.712 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 21:53:38.714 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 21:53:38.715 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 21:53:38.716 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 21:53:38.720 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 21:53:39.388 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 21:53:39.390 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 21:53:39.523 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 21:53:41.261 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 21:53:41.792 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 21:53:41.939 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 21:53:42.223 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 21:53:42.434 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 21:53:42.564 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 21:53:42.692 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 21:53:43.465 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 21:53:44.236 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 21:53:44.335 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 21:53:44.357 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 21:53:44.377 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 16.117 seconds (process running for 17.239)
2025-08-03 21:53:44.695 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 21:53:44.733 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 21:53:44.735 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 21:53:44.738 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 21:53:45.157 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.171 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.172 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.173 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.173 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.174 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.184 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.185 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.186 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.186 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.186 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.187 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.202 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.204 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.205 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.208 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.210 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.211 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.222 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:53:45.232 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:53:45.234 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:53:45.235 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:53:45.236 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:53:45.238 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:53:45.240 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.241 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.241 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.242 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.242 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.243 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.244 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.244 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.245 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.246 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.247 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.248 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.248 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.249 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.250 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.251 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.251 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.252 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.255 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:53:45.260 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:53:45.262 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:53:45.266 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:53:45.269 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.271 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.273 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.280 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:53:45.282 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:53:45.294 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:53:45.296 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:53:45.298 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.299 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.300 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.302 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:53:45.303 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:53:45.304 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:53:45.305 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:53:45.306 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.307 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.308 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.309 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:53:45.310 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:53:45.312 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:53:45.314 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:53:45.315 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.316 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.317 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.318 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:53:45.319 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:53:45.320 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:53:45.321 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:53:45.322 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:53:45.323 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.324 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.325 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.325 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:53:45.374 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 21:53:45.381 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 21:53:45.392 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 21:53:45.401 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 21:53:45.408 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 21:53:45.418 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 21:53:45.436 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 21:53:45.449 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 21:53:45.452 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:53:45.464 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 21:53:45.466 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:53:45.472 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 21:53:45.476 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:53:45.480 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:53:45.483 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:53:45.485 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:53:45.486 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:53:45.491 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 21:53:45.498 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 21:53:45.500 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:53:45.501 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:53:45.502 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:53:45.503 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:53:45.511 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 21:53:45.514 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:53:45.515 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:53:45.517 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:53:45.519 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:53:45.520 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:53:45.521 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:53:45.527 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 21:53:54.905 [http-nio-8080-exec-1] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 21:53:54.905 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 21:53:54.906 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 21:53:54.906 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 21:53:54.906 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 21:53:54.907 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@9b95154
2025-08-03 21:53:54.908 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@10e2fc16
2025-08-03 21:53:54.908 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 21:53:54.908 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-03 21:53:54.956 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-08-03 21:53:54.981 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 21:53:54.985 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 21:53:54.985 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 1EE672FBD5CEA3F20CAFCA25A43409BD
2025-08-03 21:53:55.008 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-08-03 21:53:55.028 [http-nio-8080-exec-1] DEBUG [875eeb4bb13e488e] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/index.html", parameters={}
2025-08-03 21:53:55.037 [http-nio-8080-exec-1] DEBUG [875eeb4bb13e488e] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-08-03 21:53:55.066 [http-nio-8080-exec-1] DEBUG [875eeb4bb13e488e] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 21:53:55.262 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui.css
2025-08-03 21:53:55.268 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 21:53:55.269 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 21:53:55.269 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.css
2025-08-03 21:53:55.271 [http-nio-8080-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 21:53:55.271 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui.css
2025-08-03 21:53:55.271 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 21:53:55.272 [http-nio-8080-exec-2] DEBUG [6979168ad926453a] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/swagger-ui.css", parameters={}
2025-08-03 21:53:55.273 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.css
2025-08-03 21:53:55.274 [http-nio-8080-exec-3] DEBUG [70a2220816724d0c] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/index.css", parameters={}
2025-08-03 21:53:55.282 [http-nio-8080-exec-2] DEBUG [6979168ad926453a] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-08-03 21:53:55.282 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-initializer.js
2025-08-03 21:53:55.282 [http-nio-8080-exec-3] DEBUG [70a2220816724d0c] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-08-03 21:53:55.283 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-08-03 21:53:55.284 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-bundle.js
2025-08-03 21:53:55.284 [http-nio-8080-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 21:53:55.285 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 21:53:55.285 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 21:53:55.285 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 21:53:55.286 [http-nio-8080-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 21:53:55.288 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-initializer.js
2025-08-03 21:53:55.288 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 21:53:55.289 [http-nio-8080-exec-3] DEBUG [70a2220816724d0c] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 21:53:55.289 [http-nio-8080-exec-6] DEBUG [6cd6dff3cde8450f] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/swagger-initializer.js", parameters={}
2025-08-03 21:53:55.290 [http-nio-8080-exec-2] DEBUG [6979168ad926453a] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 21:53:55.290 [http-nio-8080-exec-6] DEBUG [6cd6dff3cde8450f] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-08-03 21:53:55.291 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-bundle.js
2025-08-03 21:53:55.291 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-08-03 21:53:55.291 [http-nio-8080-exec-4] DEBUG [20e9b75290fd4630] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/swagger-ui-bundle.js", parameters={}
2025-08-03 21:53:55.292 [http-nio-8080-exec-5] DEBUG [83c2d801982c4aef] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/swagger-ui-standalone-preset.js", parameters={}
2025-08-03 21:53:55.293 [http-nio-8080-exec-4] DEBUG [20e9b75290fd4630] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-08-03 21:53:55.299 [http-nio-8080-exec-5] DEBUG [83c2d801982c4aef] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-08-03 21:53:55.314 [http-nio-8080-exec-5] DEBUG [83c2d801982c4aef] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 21:53:55.332 [http-nio-8080-exec-4] DEBUG [20e9b75290fd4630] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 21:53:55.536 [http-nio-8080-exec-6] DEBUG [6cd6dff3cde8450f] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 21:53:55.610 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api-docs/swagger-config
2025-08-03 21:53:55.612 [http-nio-8080-exec-8] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 21:53:55.613 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 21:53:55.617 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api-docs/swagger-config
2025-08-03 21:53:55.619 [http-nio-8080-exec-8] DEBUG [4c4c210b96764380] o.s.web.servlet.DispatcherServlet - GET "/api-docs/swagger-config", parameters={}
2025-08-03 21:53:55.620 [http-nio-8080-exec-8] DEBUG [4c4c210b96764380] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
2025-08-03 21:53:55.650 [http-nio-8080-exec-8] DEBUG [4c4c210b96764380] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json]
2025-08-03 21:53:55.689 [http-nio-8080-exec-8] DEBUG [4c4c210b96764380] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{configUrl=/api-docs/swagger-config, filter=true, oauth2RedirectUrl=http://localhost:8080/swagger-ui (truncated)...]
2025-08-03 21:53:55.694 [http-nio-8080-exec-8] DEBUG [4c4c210b96764380] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 21:53:55.721 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api-docs
2025-08-03 21:53:55.723 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 21:53:55.724 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 21:53:55.727 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api-docs
2025-08-03 21:53:55.728 [http-nio-8080-exec-7] DEBUG [1f210996253c420e] o.s.web.servlet.DispatcherServlet - GET "/api-docs", parameters={}
2025-08-03 21:53:55.731 [http-nio-8080-exec-7] DEBUG [1f210996253c420e] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
2025-08-03 21:53:59.027 [http-nio-8080-exec-7] INFO  [1f210996253c420e] o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 3263 ms
2025-08-03 21:53:59.060 [http-nio-8080-exec-7] DEBUG [1f210996253c420e] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, */*] and supported [application/json]
2025-08-03 21:53:59.072 [http-nio-8080-exec-7] DEBUG [1f210996253c420e] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 49, 46, 48, 34, 44, 34, 105, 110, 10 (truncated)...]
2025-08-03 21:53:59.074 [http-nio-8080-exec-7] DEBUG [1f210996253c420e] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 21:54:16.038 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes?page=1&size=1&sort=%5B%22string%22%5D
2025-08-03 21:54:16.039 [http-nio-8080-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 21:54:16.040 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 21:54:16.042 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes?page=1&size=1&sort=%5B%22string%22%5D
2025-08-03 21:54:16.047 [http-nio-8080-exec-9] DEBUG [abdc3e42d7104fa7] o.s.web.servlet.DispatcherServlet - GET "/api/restaurantes?page=1&size=1&sort=%5B%22string%22%5D", parameters={masked}
2025-08-03 21:54:16.055 [http-nio-8080-exec-9] DEBUG [abdc3e42d7104fa7] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#listarRestaurantesComFiltro(String, Boolean, Pageable)
2025-08-03 21:54:16.103 [http-nio-8080-exec-9] DEBUG [abdc3e42d7104fa7] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleGenericException(Exception, WebRequest)
2025-08-03 21:54:16.108 [http-nio-8080-exec-9] DEBUG [abdc3e42d7104fa7] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-03 21:54:16.109 [http-nio-8080-exec-9] DEBUG [abdc3e42d7104fa7] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@3d9df18f]
2025-08-03 21:54:16.111 [http-nio-8080-exec-9] WARN  [abdc3e42d7104fa7] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.dao.InvalidDataAccessApiUsageException: Sort expression '["string"]: ASC' must only contain property references or aliases used in the select clause; If you really want to use something other than that for sorting, please use JpaSort.unsafe(…)]
2025-08-03 21:54:16.112 [http-nio-8080-exec-9] DEBUG [abdc3e42d7104fa7] o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-08-03 21:54:30.730 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 21:54:30.741 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 21:54:30.764 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 21:54:30.765 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 21:54:30.770 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 21:54:30.771 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 21:54:30.771 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 21:54:30.772 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 21:54:30.772 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 21:54:30.789 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 21:54:30.791 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 21:54:30.793 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-03 21:55:09.529 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 23816 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-03 21:55:09.530 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-03 21:55:09.531 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-03 21:55:09.584 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-03 21:55:09.584 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-03 21:55:12.950 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 21:55:12.954 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-03 21:55:13.251 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 280 ms. Found 5 JPA repository interfaces.
2025-08-03 21:55:13.271 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-03 21:55:13.274 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-03 21:55:13.306 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 21:55:13.307 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 21:55:13.307 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 21:55:13.308 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 21:55:13.308 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-03 21:55:13.308 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-08-03 21:55:14.914 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-03 21:55:14.933 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-03 21:55:14.959 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-03 21:55:14.960 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-03 21:55:15.055 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-03 21:55:15.056 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5472 ms
2025-08-03 21:55:16.736 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-03 21:55:16.775 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-03 21:55:16.998 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-03 21:55:17.000 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-03 21:55:17.037 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-03 21:55:18.229 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 21:55:18.232 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 21:55:18.233 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 21:55:18.233 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 21:55:18.233 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 21:55:18.233 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 21:55:18.238 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-03 21:55:18.247 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-03 21:55:18.249 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-03 21:55:18.250 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-03 21:55:18.251 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-03 21:55:18.252 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-03 21:55:18.254 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-03 21:55:18.266 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-03 21:55:18.268 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-03 21:55:18.269 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 21:55:18.270 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-03 21:55:18.273 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 21:55:18.934 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-03 21:55:18.937 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-03 21:55:19.053 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-03 21:55:20.406 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-03 21:55:21.063 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-03 21:55:21.283 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-03 21:55:21.529 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-03 21:55:21.795 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-03 21:55:21.963 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-03 21:55:22.077 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-03 21:55:23.234 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-03 21:55:23.308 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-03 21:55:23.406 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-03 21:55:23.424 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-03 21:55:23.444 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 15.123 seconds (process running for 15.879)
2025-08-03 21:55:23.795 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-03 21:55:23.843 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-03 21:55:23.847 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-03 21:55:23.849 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-03 21:55:24.265 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.281 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.282 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.282 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.283 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.284 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.297 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.301 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.303 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.304 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.305 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.306 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.324 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.327 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.329 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.330 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.330 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.331 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.342 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:55:24.351 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:55:24.352 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:55:24.354 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:55:24.356 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:55:24.357 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:55:24.359 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.360 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.361 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.362 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.362 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.363 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.363 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.365 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.365 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.366 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.367 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.367 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.368 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.369 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.370 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.370 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.371 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.371 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.376 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:55:24.381 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:55:24.383 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:55:24.385 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:55:24.390 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.395 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.397 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.406 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:55:24.408 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:55:24.410 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:55:24.412 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:55:24.413 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.414 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.414 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.416 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:55:24.417 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:55:24.419 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:55:24.419 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:55:24.421 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.422 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.422 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.424 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:55:24.425 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:55:24.427 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:55:24.429 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:55:24.430 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.430 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.431 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.433 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:55:24.435 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:55:24.436 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:55:24.437 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-03 21:55:24.438 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:55:24.439 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.440 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.441 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.441 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-03 21:55:24.490 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-03 21:55:24.497 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-03 21:55:24.510 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-03 21:55:24.519 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-03 21:55:24.530 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-03 21:55:24.541 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-03 21:55:24.554 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-03 21:55:24.566 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-03 21:55:24.569 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:55:24.580 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-03 21:55:24.583 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:55:24.589 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-03 21:55:24.590 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:55:24.591 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:55:24.591 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:55:24.592 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:55:24.593 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:55:24.597 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-03 21:55:24.601 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-03 21:55:24.603 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:55:24.604 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:55:24.607 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:55:24.609 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:55:24.620 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-03 21:55:24.622 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:55:24.623 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:55:24.625 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:55:24.627 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:55:24.630 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-03 21:55:24.633 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-03 21:55:24.652 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-03 21:56:35.908 [http-nio-8080-exec-1] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-03 21:56:35.911 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-03 21:56:35.912 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-03 21:56:35.912 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-03 21:56:35.912 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-03 21:56:35.922 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@f844ea4
2025-08-03 21:56:35.923 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@75347d1f
2025-08-03 21:56:35.923 [http-nio-8080-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-03 21:56:35.923 [http-nio-8080-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2025-08-03 21:56:35.991 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-08-03 21:56:36.008 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 21:56:36.014 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 21:56:36.028 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-08-03 21:56:36.032 [http-nio-8080-exec-1] DEBUG [ed0f093c7e534a1d] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/index.html", parameters={}
2025-08-03 21:56:36.037 [http-nio-8080-exec-1] DEBUG [ed0f093c7e534a1d] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-08-03 21:56:36.082 [http-nio-8080-exec-1] DEBUG [ed0f093c7e534a1d] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 21:56:36.229 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui.css
2025-08-03 21:56:36.230 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 21:56:36.231 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 21:56:36.233 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui.css
2025-08-03 21:56:36.233 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.css
2025-08-03 21:56:36.233 [http-nio-8080-exec-2] DEBUG [f5fe412148f64bf3] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/swagger-ui.css", parameters={}
2025-08-03 21:56:36.234 [http-nio-8080-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 21:56:36.236 [http-nio-8080-exec-2] DEBUG [f5fe412148f64bf3] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-08-03 21:56:36.236 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 21:56:36.239 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.css
2025-08-03 21:56:36.240 [http-nio-8080-exec-3] DEBUG [6d9c7bff259b4034] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/index.css", parameters={}
2025-08-03 21:56:36.241 [http-nio-8080-exec-3] DEBUG [6d9c7bff259b4034] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-08-03 21:56:36.241 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-bundle.js
2025-08-03 21:56:36.243 [http-nio-8080-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 21:56:36.244 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 21:56:36.246 [http-nio-8080-exec-3] DEBUG [6d9c7bff259b4034] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 21:56:36.246 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-08-03 21:56:36.246 [http-nio-8080-exec-2] DEBUG [f5fe412148f64bf3] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 21:56:36.246 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-initializer.js
2025-08-03 21:56:36.247 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-bundle.js
2025-08-03 21:56:36.247 [http-nio-8080-exec-4] DEBUG [970c38153e524bf9] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/swagger-ui-bundle.js", parameters={}
2025-08-03 21:56:36.247 [http-nio-8080-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 21:56:36.248 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 21:56:36.248 [http-nio-8080-exec-4] DEBUG [970c38153e524bf9] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-08-03 21:56:36.249 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 21:56:36.249 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 21:56:36.250 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-initializer.js
2025-08-03 21:56:36.251 [http-nio-8080-exec-6] DEBUG [db1dc2464a724d13] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/swagger-initializer.js", parameters={}
2025-08-03 21:56:36.251 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-08-03 21:56:36.253 [http-nio-8080-exec-5] DEBUG [d638dd638c044fed] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/swagger-ui-standalone-preset.js", parameters={}
2025-08-03 21:56:36.253 [http-nio-8080-exec-6] DEBUG [db1dc2464a724d13] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-08-03 21:56:36.254 [http-nio-8080-exec-5] DEBUG [d638dd638c044fed] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-08-03 21:56:36.266 [http-nio-8080-exec-5] DEBUG [d638dd638c044fed] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 21:56:36.283 [http-nio-8080-exec-4] DEBUG [970c38153e524bf9] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 21:56:36.350 [http-nio-8080-exec-6] DEBUG [db1dc2464a724d13] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 21:56:36.482 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api-docs/swagger-config
2025-08-03 21:56:36.482 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 21:56:36.483 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 21:56:36.484 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api-docs/swagger-config
2025-08-03 21:56:36.484 [http-nio-8080-exec-7] DEBUG [96d033559d554c10] o.s.web.servlet.DispatcherServlet - GET "/api-docs/swagger-config", parameters={}
2025-08-03 21:56:36.485 [http-nio-8080-exec-7] DEBUG [96d033559d554c10] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
2025-08-03 21:56:36.513 [http-nio-8080-exec-7] DEBUG [96d033559d554c10] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json]
2025-08-03 21:56:36.535 [http-nio-8080-exec-7] DEBUG [96d033559d554c10] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{configUrl=/api-docs/swagger-config, filter=true, oauth2RedirectUrl=http://localhost:8080/swagger-ui (truncated)...]
2025-08-03 21:56:36.539 [http-nio-8080-exec-7] DEBUG [96d033559d554c10] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 21:56:36.549 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api-docs
2025-08-03 21:56:36.550 [http-nio-8080-exec-8] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 21:56:36.551 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 21:56:36.554 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api-docs
2025-08-03 21:56:36.555 [http-nio-8080-exec-8] DEBUG [98c07b0cc0724f80] o.s.web.servlet.DispatcherServlet - GET "/api-docs", parameters={}
2025-08-03 21:56:36.555 [http-nio-8080-exec-8] DEBUG [98c07b0cc0724f80] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
2025-08-03 21:56:39.580 [http-nio-8080-exec-8] INFO  [98c07b0cc0724f80] o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 3008 ms
2025-08-03 21:56:39.622 [http-nio-8080-exec-8] DEBUG [98c07b0cc0724f80] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, */*] and supported [application/json]
2025-08-03 21:56:39.631 [http-nio-8080-exec-8] DEBUG [98c07b0cc0724f80] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 49, 46, 48, 34, 44, 34, 105, 110, 10 (truncated)...]
2025-08-03 21:56:39.633 [http-nio-8080-exec-8] DEBUG [98c07b0cc0724f80] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-03 21:56:53.379 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes?page=1&size=1&sort=%5B%22string%22%5D
2025-08-03 21:56:53.380 [http-nio-8080-exec-10] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-03 21:56:53.381 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 21:56:53.381 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes?page=1&size=1&sort=%5B%22string%22%5D
2025-08-03 21:56:53.382 [http-nio-8080-exec-10] DEBUG [db2ec823454a4d87] o.s.web.servlet.DispatcherServlet - GET "/api/restaurantes?page=1&size=1&sort=%5B%22string%22%5D", parameters={masked}
2025-08-03 21:56:53.384 [http-nio-8080-exec-10] DEBUG [db2ec823454a4d87] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#listarRestaurantesComFiltro(String, Boolean, Pageable)
2025-08-03 21:56:53.452 [http-nio-8080-exec-10] DEBUG [db2ec823454a4d87] o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.dao.InvalidDataAccessApiUsageException: Sort expression '["string"]: ASC' must only contain property references or aliases used in the select clause; If you really want to use something other than that for sorting, please use JpaSort.unsafe(…)
2025-08-03 21:56:53.456 [http-nio-8080-exec-10] ERROR [] o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: Sort expression '["string"]: ASC' must only contain property references or aliases used in the select clause; If you really want to use something other than that for sorting, please use JpaSort.unsafe(…)] with root cause
org.springframework.dao.InvalidDataAccessApiUsageException: Sort expression '["string"]: ASC' must only contain property references or aliases used in the select clause; If you really want to use something other than that for sorting, please use JpaSort.unsafe(…)
	at org.springframework.data.jpa.repository.query.JpaQueryTransformerSupport.checkSortExpression(JpaQueryTransformerSupport.java:109)
	at org.springframework.data.jpa.repository.query.JpaQueryTransformerSupport.lambda$0(JpaQueryTransformerSupport.java:63)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.data.jpa.repository.query.JpaQueryTransformerSupport.orderBy(JpaQueryTransformerSupport.java:61)
	at org.springframework.data.jpa.repository.query.HqlSortedQueryTransformer.visitOrderedQuery(HqlSortedQueryTransformer.java:175)
	at org.springframework.data.jpa.repository.query.HqlSortedQueryTransformer.visitOrderedQuery(HqlSortedQueryTransformer.java:86)
	at org.springframework.data.jpa.repository.query.HqlSortedQueryTransformer.visitOrderedQuery(HqlSortedQueryTransformer.java:1)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitOrderedQuery(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$OrderedQueryContext.accept(HqlParser.java:1152)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitQueryExpression(HqlQueryRenderer.java:96)
	at org.springframework.data.jpa.repository.query.HqlSortedQueryTransformer.visitQueryExpression(HqlSortedQueryTransformer.java:59)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitQueryExpression(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$QueryExpressionContext.accept(HqlParser.java:517)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitSelectStatement(HqlQueryRenderer.java:84)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitSelectStatement(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$SelectStatementContext.accept(HqlParser.java:460)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitQl_statement(HqlQueryRenderer.java:70)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitQl_statement(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$Ql_statementContext.accept(HqlParser.java:383)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitStart(HqlQueryRenderer.java:63)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitStart(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$StartContext.accept(HqlParser.java:327)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.JpaQueryEnhancer.rewrite(JpaQueryEnhancer.java:259)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery.applySorting(AbstractStringBasedJpaQuery.java:258)
	at org.springframework.util.ConcurrentLruCache.get(ConcurrentLruCache.java:103)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery$CachingQuerySortRewriter.getSorted(AbstractStringBasedJpaQuery.java:324)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery.getSortedQueryString(AbstractStringBasedJpaQuery.java:172)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery.doCreateQuery(AbstractStringBasedJpaQuery.java:128)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.createQuery(AbstractJpaQuery.java:251)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$PagedExecution.doExecute(JpaQueryExecution.java:203)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:160)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:148)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy184.findByFilters(Unknown Source)
	at com.deliverytech.delivery.service.impl.RestauranteServiceImpl.buscarRestaurantesComPaginacao(RestauranteServiceImpl.java:198)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.deliverytech.delivery.service.impl.RestauranteServiceImpl$$SpringCGLIB$$0.buscarRestaurantesComPaginacao(<generated>)
	at com.deliverytech.delivery.controller.RestauranteController.listarRestaurantesComFiltro(RestauranteController.java:93)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.deliverytech.delivery.controller.RestauranteController$$SpringCGLIB$$0.listarRestaurantesComFiltro(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.deliverytech.delivery.filter.CorrelationIdFilter.doFilter(CorrelationIdFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.deliverytech.delivery.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:67)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-03 21:56:53.495 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error?page=1&size=1&sort=%5B%22string%22%5D
2025-08-03 21:56:53.496 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-03 21:56:53.509 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-03 22:00:58.180 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-03 22:00:58.252 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-03 22:00:58.373 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-03 22:00:58.384 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-03 22:00:58.398 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-03 22:00:58.400 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-03 22:00:58.400 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-03 22:00:58.401 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-03 22:00:58.402 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-03 22:00:58.436 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-03 22:00:58.437 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-03 22:00:58.441 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
