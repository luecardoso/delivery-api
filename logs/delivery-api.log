2025-08-04 08:50:11.855 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Starting DeliveryApiApplication using Java 21.0.1 with PID 16172 (E:\Documentos\Eclipse projetos\delivery-api\target\classes started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 08:50:11.861 [restartedMain] DEBUG [] c.d.delivery.DeliveryApiApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 08:50:11.864 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - The following 1 profile is active: "development"
2025-08-04 08:50:11.928 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-04 08:50:11.929 [restartedMain] INFO  [] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-04 08:50:15.234 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 08:50:15.237 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:50:15.459 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 204 ms. Found 5 JPA repository interfaces.
2025-08-04 08:50:15.484 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 08:50:15.486 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 08:50:15.513 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 08:50:15.514 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 08:50:15.514 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 08:50:15.514 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 08:50:15.515 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 08:50:15.515 [restartedMain] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2025-08-04 08:50:16.534 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-04 08:50:16.549 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-04 08:50:16.552 [restartedMain] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-04 08:50:16.553 [restartedMain] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-04 08:50:16.628 [restartedMain] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-04 08:50:16.628 [restartedMain] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4698 ms
2025-08-04 08:50:18.015 [restartedMain] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:50:18.056 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-04 08:50:18.230 [restartedMain] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA
2025-08-04 08:50:18.232 [restartedMain] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-04 08:50:18.260 [restartedMain] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:50:19.336 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 08:50:19.339 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 08:50:19.339 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 08:50:19.340 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 08:50:19.340 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 08:50:19.340 [restartedMain] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 08:50:19.344 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 08:50:19.353 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 08:50:19.355 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 08:50:19.357 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 08:50:19.358 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 08:50:19.360 [restartedMain] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 08:50:19.362 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 08:50:19.374 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 08:50:19.375 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 08:50:19.377 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 08:50:19.378 [restartedMain] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 08:50:19.383 [restartedMain] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:50:20.412 [restartedMain] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 08:50:20.416 [restartedMain] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 08:50:20.744 [restartedMain] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-04 08:50:22.050 [restartedMain] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 08:50:22.571 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 08:50:22.676 [restartedMain] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 08:50:22.859 [restartedMain] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 08:50:23.021 [restartedMain] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 08:50:23.147 [restartedMain] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 08:50:23.198 [restartedMain] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 08:50:23.992 [restartedMain] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-04 08:50:24.494 [restartedMain] INFO  [] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-04 08:50:24.581 [restartedMain] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-04 08:50:24.614 [restartedMain] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-04 08:50:24.630 [restartedMain] INFO  [] c.d.delivery.DeliveryApiApplication - Started DeliveryApiApplication in 13.666 seconds (process running for 16.365)
2025-08-04 08:50:24.933 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 08:50:24.971 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 08:50:24.974 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 08:50:24.976 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 08:50:25.378 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.389 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.390 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.391 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.392 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.392 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.401 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.402 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.404 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.404 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.405 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.406 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.422 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.424 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.425 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.426 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.426 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.427 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.436 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 08:50:25.446 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 08:50:25.447 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 08:50:25.449 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 08:50:25.450 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 08:50:25.451 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 08:50:25.454 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.455 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.456 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.456 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.457 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.457 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.458 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.459 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.459 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.460 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.460 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.460 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.461 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.462 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.462 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.464 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.464 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.465 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.468 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 08:50:25.470 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 08:50:25.471 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 08:50:25.472 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 08:50:25.475 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.477 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.477 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.484 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 08:50:25.485 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 08:50:25.486 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 08:50:25.487 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 08:50:25.488 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.489 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.490 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.491 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 08:50:25.492 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 08:50:25.494 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 08:50:25.494 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 08:50:25.495 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.496 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.497 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.498 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 08:50:25.500 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 08:50:25.501 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 08:50:25.501 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 08:50:25.502 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.504 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.504 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.506 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 08:50:25.507 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 08:50:25.508 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 08:50:25.509 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 08:50:25.510 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 08:50:25.511 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.512 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.514 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.515 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 08:50:25.562 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 08:50:25.569 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 08:50:25.579 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 08:50:25.592 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 08:50:25.601 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 08:50:25.610 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 08:50:25.620 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 08:50:25.628 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 08:50:25.631 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 08:50:25.641 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 08:50:25.644 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 08:50:25.650 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 08:50:25.651 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 08:50:25.652 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 08:50:25.655 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 08:50:25.656 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 08:50:25.658 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 08:50:25.666 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 08:50:25.671 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 08:50:25.672 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 08:50:25.675 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 08:50:25.678 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 08:50:25.680 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 08:50:25.688 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 08:50:25.690 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 08:50:25.690 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 08:50:25.692 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 08:50:25.695 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 08:50:25.696 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 08:50:25.697 [restartedMain] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 08:50:25.701 [restartedMain] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 08:52:15.412 [http-nio-8080-exec-2] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-04 08:52:15.412 [http-nio-8080-exec-2] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-04 08:52:15.414 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-04 08:52:15.414 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-04 08:52:15.414 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-04 08:52:15.415 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6ece48bd
2025-08-04 08:52:15.415 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@2776a615
2025-08-04 08:52:15.416 [http-nio-8080-exec-2] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-04 08:52:15.416 [http-nio-8080-exec-2] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-08-04 08:52:15.446 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes
2025-08-04 08:52:15.457 [http-nio-8080-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 08:52:15.459 [http-nio-8080-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 08:52:15.476 [http-nio-8080-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes
2025-08-04 08:52:15.492 [http-nio-8080-exec-2] DEBUG [e57f4d8dae764419] o.s.web.servlet.DispatcherServlet - GET "/api/restaurantes", parameters={}
2025-08-04 08:52:15.496 [http-nio-8080-exec-2] DEBUG [e57f4d8dae764419] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#listarRestaurantesComFiltro(String, Boolean, Pageable)
2025-08-04 08:52:15.571 [http-nio-8080-exec-2] DEBUG [e57f4d8dae764419] org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Restaurante r 
    WHERE
        (
            :categoria IS NULL 
            OR r.categoria = :categoria
        ) 
        AND (
            :ativo IS NULL 
            OR r.ativo = :ativo
        ) */ select
            r1_0.id,
            r1_0.ativo,
            r1_0.avaliacao,
            r1_0.categoria,
            r1_0.data_criacao,
            r1_0.endereco,
            r1_0.horario_funcionamento,
            r1_0.nome,
            r1_0.taxa_entrega,
            r1_0.telefone,
            r1_0.tempo_entrega_minutos 
        from
            restaurantes r1_0 
        where
            (
                ? is null 
                or r1_0.categoria=?
            ) 
            and (
                ? is null 
                or r1_0.ativo=?
            ) 
        fetch
            first ? rows only
2025-08-04 08:52:15.668 [http-nio-8080-exec-2] DEBUG [e57f4d8dae764419] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 08:52:15.670 [http-nio-8080-exec-2] DEBUG [e57f4d8dae764419] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.PagedResponseWrapper@7192d011]
2025-08-04 08:52:15.702 [http-nio-8080-exec-2] DEBUG [e57f4d8dae764419] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-04 08:52:30.852 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui.html
2025-08-04 08:52:30.854 [http-nio-8080-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 08:52:30.854 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 08:52:30.856 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui.html
2025-08-04 08:52:30.857 [http-nio-8080-exec-6] DEBUG [7ad37dea57fa4b80] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui.html", parameters={}
2025-08-04 08:52:30.858 [http-nio-8080-exec-6] DEBUG [7ad37dea57fa4b80] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.ui.SwaggerWelcomeWebMvc#redirectToUi(HttpServletRequest)
2025-08-04 08:52:30.888 [http-nio-8080-exec-6] DEBUG [7ad37dea57fa4b80] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7] and supported [application/json, application/*+json, application/yaml]
2025-08-04 08:52:30.888 [http-nio-8080-exec-6] DEBUG [7ad37dea57fa4b80] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Nothing to write: null body
2025-08-04 08:52:30.888 [http-nio-8080-exec-6] DEBUG [7ad37dea57fa4b80] o.s.web.servlet.DispatcherServlet - Completed 302 FOUND
2025-08-04 08:52:30.899 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-08-04 08:52:30.900 [http-nio-8080-exec-9] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 08:52:30.900 [http-nio-8080-exec-9] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 08:52:30.901 [http-nio-8080-exec-9] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-08-04 08:52:30.901 [http-nio-8080-exec-9] DEBUG [19e5b5589f6f48da] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/index.html", parameters={}
2025-08-04 08:52:30.902 [http-nio-8080-exec-9] DEBUG [19e5b5589f6f48da] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-08-04 08:52:30.910 [http-nio-8080-exec-9] DEBUG [19e5b5589f6f48da] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-04 08:52:30.923 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui.css
2025-08-04 08:52:30.923 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 08:52:30.923 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 08:52:30.923 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.css
2025-08-04 08:52:30.924 [http-nio-8080-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 08:52:30.924 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui.css
2025-08-04 08:52:30.924 [http-nio-8080-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 08:52:30.924 [http-nio-8080-exec-5] DEBUG [9b216d6b31394d17] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/swagger-ui.css", parameters={}
2025-08-04 08:52:30.925 [http-nio-8080-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.css
2025-08-04 08:52:30.925 [http-nio-8080-exec-3] DEBUG [ecc9264ea1e0432a] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/index.css", parameters={}
2025-08-04 08:52:30.934 [http-nio-8080-exec-3] DEBUG [ecc9264ea1e0432a] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-08-04 08:52:30.934 [http-nio-8080-exec-5] DEBUG [9b216d6b31394d17] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-08-04 08:52:30.934 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-bundle.js
2025-08-04 08:52:30.935 [http-nio-8080-exec-7] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 08:52:30.935 [http-nio-8080-exec-7] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 08:52:30.936 [http-nio-8080-exec-7] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-bundle.js
2025-08-04 08:52:30.937 [http-nio-8080-exec-3] DEBUG [ecc9264ea1e0432a] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-04 08:52:30.937 [http-nio-8080-exec-7] DEBUG [849b5b6e37ad4a51] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/swagger-ui-bundle.js", parameters={}
2025-08-04 08:52:30.938 [http-nio-8080-exec-7] DEBUG [849b5b6e37ad4a51] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-08-04 08:52:30.939 [http-nio-8080-exec-5] DEBUG [9b216d6b31394d17] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-04 08:52:30.957 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-08-04 08:52:30.957 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-initializer.js
2025-08-04 08:52:30.958 [http-nio-8080-exec-7] DEBUG [849b5b6e37ad4a51] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-04 08:52:30.958 [http-nio-8080-exec-8] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 08:52:30.959 [http-nio-8080-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 08:52:30.959 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 08:52:30.959 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 08:52:30.961 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-initializer.js
2025-08-04 08:52:30.961 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-08-04 08:52:30.962 [http-nio-8080-exec-8] DEBUG [6b76b4096a8e4fad] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/swagger-ui-standalone-preset.js", parameters={}
2025-08-04 08:52:30.962 [http-nio-8080-exec-4] DEBUG [c3b2d65302dc44d5] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/swagger-initializer.js", parameters={}
2025-08-04 08:52:30.966 [http-nio-8080-exec-8] DEBUG [6b76b4096a8e4fad] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-08-04 08:52:30.966 [http-nio-8080-exec-4] DEBUG [c3b2d65302dc44d5] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-08-04 08:52:30.974 [http-nio-8080-exec-8] DEBUG [6b76b4096a8e4fad] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-04 08:52:30.989 [http-nio-8080-exec-4] DEBUG [c3b2d65302dc44d5] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-04 08:52:31.117 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api-docs/swagger-config
2025-08-04 08:52:31.119 [http-nio-8080-exec-10] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 08:52:31.119 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 08:52:31.120 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api-docs/swagger-config
2025-08-04 08:52:31.120 [http-nio-8080-exec-10] DEBUG [7c028df1ebe443af] o.s.web.servlet.DispatcherServlet - GET "/api-docs/swagger-config", parameters={}
2025-08-04 08:52:31.120 [http-nio-8080-exec-10] DEBUG [7c028df1ebe443af] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
2025-08-04 08:52:31.122 [http-nio-8080-exec-10] DEBUG [7c028df1ebe443af] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json]
2025-08-04 08:52:31.124 [http-nio-8080-exec-10] DEBUG [7c028df1ebe443af] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{configUrl=/api-docs/swagger-config, filter=true, oauth2RedirectUrl=http://localhost:8080/swagger-ui (truncated)...]
2025-08-04 08:52:31.125 [http-nio-8080-exec-10] DEBUG [7c028df1ebe443af] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-04 08:52:31.138 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api-docs
2025-08-04 08:52:31.138 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 08:52:31.138 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 08:52:31.140 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api-docs
2025-08-04 08:52:31.141 [http-nio-8080-exec-1] DEBUG [43f37bad42484ffc] o.s.web.servlet.DispatcherServlet - GET "/api-docs", parameters={}
2025-08-04 08:52:31.142 [http-nio-8080-exec-1] DEBUG [43f37bad42484ffc] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
2025-08-04 08:52:33.747 [http-nio-8080-exec-1] INFO  [43f37bad42484ffc] o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 2594 ms
2025-08-04 08:52:33.779 [http-nio-8080-exec-1] DEBUG [43f37bad42484ffc] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, */*] and supported [application/json]
2025-08-04 08:52:33.788 [http-nio-8080-exec-1] DEBUG [43f37bad42484ffc] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 49, 46, 48, 34, 44, 34, 105, 110, 10 (truncated)...]
2025-08-04 08:52:33.790 [http-nio-8080-exec-1] DEBUG [43f37bad42484ffc] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-04 08:54:11.769 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes?page=0&size=1&sort=%5B%22string%22%5D
2025-08-04 08:54:11.770 [http-nio-8080-exec-5] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 08:54:11.770 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 08:54:11.771 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes?page=0&size=1&sort=%5B%22string%22%5D
2025-08-04 08:54:11.773 [http-nio-8080-exec-5] DEBUG [a632b30202314b39] o.s.web.servlet.DispatcherServlet - GET "/api/restaurantes?page=0&size=1&sort=%5B%22string%22%5D", parameters={masked}
2025-08-04 08:54:11.774 [http-nio-8080-exec-5] DEBUG [a632b30202314b39] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#listarRestaurantesComFiltro(String, Boolean, Pageable)
2025-08-04 08:54:11.798 [http-nio-8080-exec-5] DEBUG [a632b30202314b39] o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.dao.InvalidDataAccessApiUsageException: Sort expression '["string"]: ASC' must only contain property references or aliases used in the select clause; If you really want to use something other than that for sorting, please use JpaSort.unsafe(…)
2025-08-04 08:54:11.801 [http-nio-8080-exec-5] ERROR [] o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: Sort expression '["string"]: ASC' must only contain property references or aliases used in the select clause; If you really want to use something other than that for sorting, please use JpaSort.unsafe(…)] with root cause
org.springframework.dao.InvalidDataAccessApiUsageException: Sort expression '["string"]: ASC' must only contain property references or aliases used in the select clause; If you really want to use something other than that for sorting, please use JpaSort.unsafe(…)
	at org.springframework.data.jpa.repository.query.JpaQueryTransformerSupport.checkSortExpression(JpaQueryTransformerSupport.java:109)
	at org.springframework.data.jpa.repository.query.JpaQueryTransformerSupport.lambda$0(JpaQueryTransformerSupport.java:63)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.data.jpa.repository.query.JpaQueryTransformerSupport.orderBy(JpaQueryTransformerSupport.java:61)
	at org.springframework.data.jpa.repository.query.HqlSortedQueryTransformer.visitOrderedQuery(HqlSortedQueryTransformer.java:175)
	at org.springframework.data.jpa.repository.query.HqlSortedQueryTransformer.visitOrderedQuery(HqlSortedQueryTransformer.java:86)
	at org.springframework.data.jpa.repository.query.HqlSortedQueryTransformer.visitOrderedQuery(HqlSortedQueryTransformer.java:1)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitOrderedQuery(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$OrderedQueryContext.accept(HqlParser.java:1152)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitQueryExpression(HqlQueryRenderer.java:96)
	at org.springframework.data.jpa.repository.query.HqlSortedQueryTransformer.visitQueryExpression(HqlSortedQueryTransformer.java:59)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitQueryExpression(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$QueryExpressionContext.accept(HqlParser.java:517)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitSelectStatement(HqlQueryRenderer.java:84)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitSelectStatement(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$SelectStatementContext.accept(HqlParser.java:460)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitQl_statement(HqlQueryRenderer.java:70)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitQl_statement(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$Ql_statementContext.accept(HqlParser.java:383)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitStart(HqlQueryRenderer.java:63)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitStart(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$StartContext.accept(HqlParser.java:327)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.JpaQueryEnhancer.rewrite(JpaQueryEnhancer.java:259)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery.applySorting(AbstractStringBasedJpaQuery.java:258)
	at org.springframework.util.ConcurrentLruCache.get(ConcurrentLruCache.java:103)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery$CachingQuerySortRewriter.getSorted(AbstractStringBasedJpaQuery.java:324)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery.getSortedQueryString(AbstractStringBasedJpaQuery.java:172)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery.doCreateQuery(AbstractStringBasedJpaQuery.java:128)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.createQuery(AbstractJpaQuery.java:251)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$PagedExecution.doExecute(JpaQueryExecution.java:203)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:160)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:148)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy184.findByFilters(Unknown Source)
	at com.deliverytech.delivery.service.impl.RestauranteServiceImpl.buscarRestaurantesComPaginacao(RestauranteServiceImpl.java:198)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.deliverytech.delivery.service.impl.RestauranteServiceImpl$$SpringCGLIB$$0.buscarRestaurantesComPaginacao(<generated>)
	at com.deliverytech.delivery.controller.RestauranteController.listarRestaurantesComFiltro(RestauranteController.java:93)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.deliverytech.delivery.controller.RestauranteController$$SpringCGLIB$$0.listarRestaurantesComFiltro(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.deliverytech.delivery.filter.CorrelationIdFilter.doFilter(CorrelationIdFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.deliverytech.delivery.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:67)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-04 08:54:11.836 [http-nio-8080-exec-5] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error?page=0&size=1&sort=%5B%22string%22%5D
2025-08-04 08:54:11.837 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 08:54:11.842 [http-nio-8080-exec-5] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-04 08:58:06.660 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes?ativo=true&page=0&size=1&sort=%5B%22string%22%5D
2025-08-04 08:58:06.660 [http-nio-8080-exec-8] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 08:58:06.660 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 08:58:06.661 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes?ativo=true&page=0&size=1&sort=%5B%22string%22%5D
2025-08-04 08:58:06.662 [http-nio-8080-exec-8] DEBUG [448c2b4cb4144dbf] o.s.web.servlet.DispatcherServlet - GET "/api/restaurantes?ativo=true&page=0&size=1&sort=%5B%22string%22%5D", parameters={masked}
2025-08-04 08:58:06.662 [http-nio-8080-exec-8] DEBUG [448c2b4cb4144dbf] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#listarRestaurantesComFiltro(String, Boolean, Pageable)
2025-08-04 08:58:06.667 [http-nio-8080-exec-8] DEBUG [448c2b4cb4144dbf] o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.dao.InvalidDataAccessApiUsageException: Sort expression '["string"]: ASC' must only contain property references or aliases used in the select clause; If you really want to use something other than that for sorting, please use JpaSort.unsafe(…)
2025-08-04 08:58:06.668 [http-nio-8080-exec-8] ERROR [] o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: Sort expression '["string"]: ASC' must only contain property references or aliases used in the select clause; If you really want to use something other than that for sorting, please use JpaSort.unsafe(…)] with root cause
org.springframework.dao.InvalidDataAccessApiUsageException: Sort expression '["string"]: ASC' must only contain property references or aliases used in the select clause; If you really want to use something other than that for sorting, please use JpaSort.unsafe(…)
	at org.springframework.data.jpa.repository.query.JpaQueryTransformerSupport.checkSortExpression(JpaQueryTransformerSupport.java:109)
	at org.springframework.data.jpa.repository.query.JpaQueryTransformerSupport.lambda$0(JpaQueryTransformerSupport.java:63)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.data.jpa.repository.query.JpaQueryTransformerSupport.orderBy(JpaQueryTransformerSupport.java:61)
	at org.springframework.data.jpa.repository.query.HqlSortedQueryTransformer.visitOrderedQuery(HqlSortedQueryTransformer.java:175)
	at org.springframework.data.jpa.repository.query.HqlSortedQueryTransformer.visitOrderedQuery(HqlSortedQueryTransformer.java:86)
	at org.springframework.data.jpa.repository.query.HqlSortedQueryTransformer.visitOrderedQuery(HqlSortedQueryTransformer.java:1)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitOrderedQuery(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$OrderedQueryContext.accept(HqlParser.java:1152)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitQueryExpression(HqlQueryRenderer.java:96)
	at org.springframework.data.jpa.repository.query.HqlSortedQueryTransformer.visitQueryExpression(HqlSortedQueryTransformer.java:59)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitQueryExpression(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$QueryExpressionContext.accept(HqlParser.java:517)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitSelectStatement(HqlQueryRenderer.java:84)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitSelectStatement(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$SelectStatementContext.accept(HqlParser.java:460)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitQl_statement(HqlQueryRenderer.java:70)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitQl_statement(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$Ql_statementContext.accept(HqlParser.java:383)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitStart(HqlQueryRenderer.java:63)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitStart(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$StartContext.accept(HqlParser.java:327)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.JpaQueryEnhancer.rewrite(JpaQueryEnhancer.java:259)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery.applySorting(AbstractStringBasedJpaQuery.java:258)
	at org.springframework.util.ConcurrentLruCache.get(ConcurrentLruCache.java:103)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery$CachingQuerySortRewriter.getSorted(AbstractStringBasedJpaQuery.java:324)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery.getSortedQueryString(AbstractStringBasedJpaQuery.java:172)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery.doCreateQuery(AbstractStringBasedJpaQuery.java:128)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.createQuery(AbstractJpaQuery.java:251)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$PagedExecution.doExecute(JpaQueryExecution.java:203)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:160)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:148)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy184.findByFilters(Unknown Source)
	at com.deliverytech.delivery.service.impl.RestauranteServiceImpl.buscarRestaurantesComPaginacao(RestauranteServiceImpl.java:198)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.deliverytech.delivery.service.impl.RestauranteServiceImpl$$SpringCGLIB$$0.buscarRestaurantesComPaginacao(<generated>)
	at com.deliverytech.delivery.controller.RestauranteController.listarRestaurantesComFiltro(RestauranteController.java:93)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.deliverytech.delivery.controller.RestauranteController$$SpringCGLIB$$0.listarRestaurantesComFiltro(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.deliverytech.delivery.filter.CorrelationIdFilter.doFilter(CorrelationIdFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.deliverytech.delivery.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:67)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-04 08:58:06.674 [http-nio-8080-exec-8] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error?ativo=true&page=0&size=1&sort=%5B%22string%22%5D
2025-08-04 08:58:06.675 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 08:58:06.676 [http-nio-8080-exec-8] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-04 08:58:47.090 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes?ativo=true&page=0&size=1&sort=%5B%22%22%5D
2025-08-04 08:58:47.091 [http-nio-8080-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 08:58:47.091 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 08:58:47.091 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes?ativo=true&page=0&size=1&sort=%5B%22%22%5D
2025-08-04 08:58:47.092 [http-nio-8080-exec-4] DEBUG [1306f5154ede4068] o.s.web.servlet.DispatcherServlet - GET "/api/restaurantes?ativo=true&page=0&size=1&sort=%5B%22%22%5D", parameters={masked}
2025-08-04 08:58:47.092 [http-nio-8080-exec-4] DEBUG [1306f5154ede4068] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#listarRestaurantesComFiltro(String, Boolean, Pageable)
2025-08-04 08:58:47.096 [http-nio-8080-exec-4] DEBUG [1306f5154ede4068] o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.dao.InvalidDataAccessApiUsageException: Sort expression '[""]: ASC' must only contain property references or aliases used in the select clause; If you really want to use something other than that for sorting, please use JpaSort.unsafe(…)
2025-08-04 08:58:47.096 [http-nio-8080-exec-4] ERROR [] o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: Sort expression '[""]: ASC' must only contain property references or aliases used in the select clause; If you really want to use something other than that for sorting, please use JpaSort.unsafe(…)] with root cause
org.springframework.dao.InvalidDataAccessApiUsageException: Sort expression '[""]: ASC' must only contain property references or aliases used in the select clause; If you really want to use something other than that for sorting, please use JpaSort.unsafe(…)
	at org.springframework.data.jpa.repository.query.JpaQueryTransformerSupport.checkSortExpression(JpaQueryTransformerSupport.java:109)
	at org.springframework.data.jpa.repository.query.JpaQueryTransformerSupport.lambda$0(JpaQueryTransformerSupport.java:63)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.data.jpa.repository.query.JpaQueryTransformerSupport.orderBy(JpaQueryTransformerSupport.java:61)
	at org.springframework.data.jpa.repository.query.HqlSortedQueryTransformer.visitOrderedQuery(HqlSortedQueryTransformer.java:175)
	at org.springframework.data.jpa.repository.query.HqlSortedQueryTransformer.visitOrderedQuery(HqlSortedQueryTransformer.java:86)
	at org.springframework.data.jpa.repository.query.HqlSortedQueryTransformer.visitOrderedQuery(HqlSortedQueryTransformer.java:1)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitOrderedQuery(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$OrderedQueryContext.accept(HqlParser.java:1152)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitQueryExpression(HqlQueryRenderer.java:96)
	at org.springframework.data.jpa.repository.query.HqlSortedQueryTransformer.visitQueryExpression(HqlSortedQueryTransformer.java:59)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitQueryExpression(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$QueryExpressionContext.accept(HqlParser.java:517)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitSelectStatement(HqlQueryRenderer.java:84)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitSelectStatement(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$SelectStatementContext.accept(HqlParser.java:460)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitQl_statement(HqlQueryRenderer.java:70)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitQl_statement(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$Ql_statementContext.accept(HqlParser.java:383)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitStart(HqlQueryRenderer.java:63)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitStart(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$StartContext.accept(HqlParser.java:327)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.JpaQueryEnhancer.rewrite(JpaQueryEnhancer.java:259)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery.applySorting(AbstractStringBasedJpaQuery.java:258)
	at org.springframework.util.ConcurrentLruCache.get(ConcurrentLruCache.java:103)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery$CachingQuerySortRewriter.getSorted(AbstractStringBasedJpaQuery.java:324)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery.getSortedQueryString(AbstractStringBasedJpaQuery.java:172)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery.doCreateQuery(AbstractStringBasedJpaQuery.java:128)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.createQuery(AbstractJpaQuery.java:251)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$PagedExecution.doExecute(JpaQueryExecution.java:203)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:160)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:148)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy184.findByFilters(Unknown Source)
	at com.deliverytech.delivery.service.impl.RestauranteServiceImpl.buscarRestaurantesComPaginacao(RestauranteServiceImpl.java:198)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.deliverytech.delivery.service.impl.RestauranteServiceImpl$$SpringCGLIB$$0.buscarRestaurantesComPaginacao(<generated>)
	at com.deliverytech.delivery.controller.RestauranteController.listarRestaurantesComFiltro(RestauranteController.java:93)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.deliverytech.delivery.controller.RestauranteController$$SpringCGLIB$$0.listarRestaurantesComFiltro(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.deliverytech.delivery.filter.CorrelationIdFilter.doFilter(CorrelationIdFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.deliverytech.delivery.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:67)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-04 08:58:47.099 [http-nio-8080-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error?ativo=true&page=0&size=1&sort=%5B%22%22%5D
2025-08-04 08:58:47.100 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 08:58:47.101 [http-nio-8080-exec-4] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-04 08:59:02.609 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes?ativo=true&page=0&size=1&sort=%5B%22J%22%5D
2025-08-04 08:59:02.610 [http-nio-8080-exec-10] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 08:59:02.610 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 08:59:02.611 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes?ativo=true&page=0&size=1&sort=%5B%22J%22%5D
2025-08-04 08:59:02.611 [http-nio-8080-exec-10] DEBUG [01a749918c2940de] o.s.web.servlet.DispatcherServlet - GET "/api/restaurantes?ativo=true&page=0&size=1&sort=%5B%22J%22%5D", parameters={masked}
2025-08-04 08:59:02.611 [http-nio-8080-exec-10] DEBUG [01a749918c2940de] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#listarRestaurantesComFiltro(String, Boolean, Pageable)
2025-08-04 08:59:02.615 [http-nio-8080-exec-10] DEBUG [01a749918c2940de] o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.dao.InvalidDataAccessApiUsageException: Sort expression '["J"]: ASC' must only contain property references or aliases used in the select clause; If you really want to use something other than that for sorting, please use JpaSort.unsafe(…)
2025-08-04 08:59:02.617 [http-nio-8080-exec-10] ERROR [] o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: Sort expression '["J"]: ASC' must only contain property references or aliases used in the select clause; If you really want to use something other than that for sorting, please use JpaSort.unsafe(…)] with root cause
org.springframework.dao.InvalidDataAccessApiUsageException: Sort expression '["J"]: ASC' must only contain property references or aliases used in the select clause; If you really want to use something other than that for sorting, please use JpaSort.unsafe(…)
	at org.springframework.data.jpa.repository.query.JpaQueryTransformerSupport.checkSortExpression(JpaQueryTransformerSupport.java:109)
	at org.springframework.data.jpa.repository.query.JpaQueryTransformerSupport.lambda$0(JpaQueryTransformerSupport.java:63)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.data.jpa.repository.query.JpaQueryTransformerSupport.orderBy(JpaQueryTransformerSupport.java:61)
	at org.springframework.data.jpa.repository.query.HqlSortedQueryTransformer.visitOrderedQuery(HqlSortedQueryTransformer.java:175)
	at org.springframework.data.jpa.repository.query.HqlSortedQueryTransformer.visitOrderedQuery(HqlSortedQueryTransformer.java:86)
	at org.springframework.data.jpa.repository.query.HqlSortedQueryTransformer.visitOrderedQuery(HqlSortedQueryTransformer.java:1)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitOrderedQuery(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$OrderedQueryContext.accept(HqlParser.java:1152)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitQueryExpression(HqlQueryRenderer.java:96)
	at org.springframework.data.jpa.repository.query.HqlSortedQueryTransformer.visitQueryExpression(HqlSortedQueryTransformer.java:59)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitQueryExpression(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$QueryExpressionContext.accept(HqlParser.java:517)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitSelectStatement(HqlQueryRenderer.java:84)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitSelectStatement(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$SelectStatementContext.accept(HqlParser.java:460)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitQl_statement(HqlQueryRenderer.java:70)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitQl_statement(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$Ql_statementContext.accept(HqlParser.java:383)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitStart(HqlQueryRenderer.java:63)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitStart(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$StartContext.accept(HqlParser.java:327)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.JpaQueryEnhancer.rewrite(JpaQueryEnhancer.java:259)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery.applySorting(AbstractStringBasedJpaQuery.java:258)
	at org.springframework.util.ConcurrentLruCache.get(ConcurrentLruCache.java:103)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery$CachingQuerySortRewriter.getSorted(AbstractStringBasedJpaQuery.java:324)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery.getSortedQueryString(AbstractStringBasedJpaQuery.java:172)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery.doCreateQuery(AbstractStringBasedJpaQuery.java:128)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.createQuery(AbstractJpaQuery.java:251)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$PagedExecution.doExecute(JpaQueryExecution.java:203)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:160)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:148)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy184.findByFilters(Unknown Source)
	at com.deliverytech.delivery.service.impl.RestauranteServiceImpl.buscarRestaurantesComPaginacao(RestauranteServiceImpl.java:198)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.deliverytech.delivery.service.impl.RestauranteServiceImpl$$SpringCGLIB$$0.buscarRestaurantesComPaginacao(<generated>)
	at com.deliverytech.delivery.controller.RestauranteController.listarRestaurantesComFiltro(RestauranteController.java:93)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.deliverytech.delivery.controller.RestauranteController$$SpringCGLIB$$0.listarRestaurantesComFiltro(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.deliverytech.delivery.filter.CorrelationIdFilter.doFilter(CorrelationIdFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.deliverytech.delivery.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:67)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-04 08:59:02.621 [http-nio-8080-exec-10] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error?ativo=true&page=0&size=1&sort=%5B%22J%22%5D
2025-08-04 08:59:02.624 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 08:59:02.625 [http-nio-8080-exec-10] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-04 08:59:16.538 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes?ativo=true&page=0&size=1&sort=%5B%5D
2025-08-04 08:59:16.538 [http-nio-8080-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 08:59:16.540 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 08:59:16.540 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes?ativo=true&page=0&size=1&sort=%5B%5D
2025-08-04 08:59:16.541 [http-nio-8080-exec-1] DEBUG [f1e04d6507ec4ea5] o.s.web.servlet.DispatcherServlet - GET "/api/restaurantes?ativo=true&page=0&size=1&sort=%5B%5D", parameters={masked}
2025-08-04 08:59:16.541 [http-nio-8080-exec-1] DEBUG [f1e04d6507ec4ea5] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#listarRestaurantesComFiltro(String, Boolean, Pageable)
2025-08-04 08:59:16.544 [http-nio-8080-exec-1] DEBUG [f1e04d6507ec4ea5] o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.dao.InvalidDataAccessApiUsageException: Sort expression '[]: ASC' must only contain property references or aliases used in the select clause; If you really want to use something other than that for sorting, please use JpaSort.unsafe(…)
2025-08-04 08:59:16.547 [http-nio-8080-exec-1] ERROR [] o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: Sort expression '[]: ASC' must only contain property references or aliases used in the select clause; If you really want to use something other than that for sorting, please use JpaSort.unsafe(…)] with root cause
org.springframework.dao.InvalidDataAccessApiUsageException: Sort expression '[]: ASC' must only contain property references or aliases used in the select clause; If you really want to use something other than that for sorting, please use JpaSort.unsafe(…)
	at org.springframework.data.jpa.repository.query.JpaQueryTransformerSupport.checkSortExpression(JpaQueryTransformerSupport.java:109)
	at org.springframework.data.jpa.repository.query.JpaQueryTransformerSupport.lambda$0(JpaQueryTransformerSupport.java:63)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.data.jpa.repository.query.JpaQueryTransformerSupport.orderBy(JpaQueryTransformerSupport.java:61)
	at org.springframework.data.jpa.repository.query.HqlSortedQueryTransformer.visitOrderedQuery(HqlSortedQueryTransformer.java:175)
	at org.springframework.data.jpa.repository.query.HqlSortedQueryTransformer.visitOrderedQuery(HqlSortedQueryTransformer.java:86)
	at org.springframework.data.jpa.repository.query.HqlSortedQueryTransformer.visitOrderedQuery(HqlSortedQueryTransformer.java:1)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitOrderedQuery(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$OrderedQueryContext.accept(HqlParser.java:1152)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitQueryExpression(HqlQueryRenderer.java:96)
	at org.springframework.data.jpa.repository.query.HqlSortedQueryTransformer.visitQueryExpression(HqlSortedQueryTransformer.java:59)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitQueryExpression(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$QueryExpressionContext.accept(HqlParser.java:517)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitSelectStatement(HqlQueryRenderer.java:84)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitSelectStatement(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$SelectStatementContext.accept(HqlParser.java:460)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitQl_statement(HqlQueryRenderer.java:70)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitQl_statement(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$Ql_statementContext.accept(HqlParser.java:383)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitStart(HqlQueryRenderer.java:63)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitStart(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$StartContext.accept(HqlParser.java:327)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.JpaQueryEnhancer.rewrite(JpaQueryEnhancer.java:259)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery.applySorting(AbstractStringBasedJpaQuery.java:258)
	at org.springframework.util.ConcurrentLruCache.get(ConcurrentLruCache.java:103)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery$CachingQuerySortRewriter.getSorted(AbstractStringBasedJpaQuery.java:324)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery.getSortedQueryString(AbstractStringBasedJpaQuery.java:172)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery.doCreateQuery(AbstractStringBasedJpaQuery.java:128)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.createQuery(AbstractJpaQuery.java:251)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$PagedExecution.doExecute(JpaQueryExecution.java:203)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:160)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:148)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy184.findByFilters(Unknown Source)
	at com.deliverytech.delivery.service.impl.RestauranteServiceImpl.buscarRestaurantesComPaginacao(RestauranteServiceImpl.java:198)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.deliverytech.delivery.service.impl.RestauranteServiceImpl$$SpringCGLIB$$0.buscarRestaurantesComPaginacao(<generated>)
	at com.deliverytech.delivery.controller.RestauranteController.listarRestaurantesComFiltro(RestauranteController.java:93)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.deliverytech.delivery.controller.RestauranteController$$SpringCGLIB$$0.listarRestaurantesComFiltro(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.deliverytech.delivery.filter.CorrelationIdFilter.doFilter(CorrelationIdFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.deliverytech.delivery.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:67)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-04 08:59:16.552 [http-nio-8080-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error?ativo=true&page=0&size=1&sort=%5B%5D
2025-08-04 08:59:16.554 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 08:59:16.555 [http-nio-8080-exec-1] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-04 09:04:24.912 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes?ativo=true&page=0&size=1&sort=%5B%5D
2025-08-04 09:04:24.912 [http-nio-8080-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 09:04:24.914 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 09:04:24.915 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes?ativo=true&page=0&size=1&sort=%5B%5D
2025-08-04 09:04:24.915 [http-nio-8080-exec-6] DEBUG [9b52f56c7a174af9] o.s.web.servlet.DispatcherServlet - GET "/api/restaurantes?ativo=true&page=0&size=1&sort=%5B%5D", parameters={masked}
2025-08-04 09:04:24.916 [http-nio-8080-exec-6] DEBUG [9b52f56c7a174af9] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#listarRestaurantesComFiltro(String, Boolean, Pageable)
2025-08-04 09:04:24.922 [http-nio-8080-exec-6] DEBUG [9b52f56c7a174af9] o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.dao.InvalidDataAccessApiUsageException: Sort expression '[]: ASC' must only contain property references or aliases used in the select clause; If you really want to use something other than that for sorting, please use JpaSort.unsafe(…)
2025-08-04 09:04:24.923 [http-nio-8080-exec-6] ERROR [] o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: Sort expression '[]: ASC' must only contain property references or aliases used in the select clause; If you really want to use something other than that for sorting, please use JpaSort.unsafe(…)] with root cause
org.springframework.dao.InvalidDataAccessApiUsageException: Sort expression '[]: ASC' must only contain property references or aliases used in the select clause; If you really want to use something other than that for sorting, please use JpaSort.unsafe(…)
	at org.springframework.data.jpa.repository.query.JpaQueryTransformerSupport.checkSortExpression(JpaQueryTransformerSupport.java:109)
	at org.springframework.data.jpa.repository.query.JpaQueryTransformerSupport.lambda$0(JpaQueryTransformerSupport.java:63)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.data.jpa.repository.query.JpaQueryTransformerSupport.orderBy(JpaQueryTransformerSupport.java:61)
	at org.springframework.data.jpa.repository.query.HqlSortedQueryTransformer.visitOrderedQuery(HqlSortedQueryTransformer.java:175)
	at org.springframework.data.jpa.repository.query.HqlSortedQueryTransformer.visitOrderedQuery(HqlSortedQueryTransformer.java:86)
	at org.springframework.data.jpa.repository.query.HqlSortedQueryTransformer.visitOrderedQuery(HqlSortedQueryTransformer.java:1)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitOrderedQuery(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$OrderedQueryContext.accept(HqlParser.java:1152)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitQueryExpression(HqlQueryRenderer.java:96)
	at org.springframework.data.jpa.repository.query.HqlSortedQueryTransformer.visitQueryExpression(HqlSortedQueryTransformer.java:59)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitQueryExpression(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$QueryExpressionContext.accept(HqlParser.java:517)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitSelectStatement(HqlQueryRenderer.java:84)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitSelectStatement(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$SelectStatementContext.accept(HqlParser.java:460)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitQl_statement(HqlQueryRenderer.java:70)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitQl_statement(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$Ql_statementContext.accept(HqlParser.java:383)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitStart(HqlQueryRenderer.java:63)
	at org.springframework.data.jpa.repository.query.HqlQueryRenderer.visitStart(HqlQueryRenderer.java:1)
	at org.springframework.data.jpa.repository.query.HqlParser$StartContext.accept(HqlParser.java:327)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at org.springframework.data.jpa.repository.query.JpaQueryEnhancer.rewrite(JpaQueryEnhancer.java:259)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery.applySorting(AbstractStringBasedJpaQuery.java:258)
	at org.springframework.util.ConcurrentLruCache.get(ConcurrentLruCache.java:103)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery$CachingQuerySortRewriter.getSorted(AbstractStringBasedJpaQuery.java:324)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery.getSortedQueryString(AbstractStringBasedJpaQuery.java:172)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery.doCreateQuery(AbstractStringBasedJpaQuery.java:128)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.createQuery(AbstractJpaQuery.java:251)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$PagedExecution.doExecute(JpaQueryExecution.java:203)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:160)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:148)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy184.findByFilters(Unknown Source)
	at com.deliverytech.delivery.service.impl.RestauranteServiceImpl.buscarRestaurantesComPaginacao(RestauranteServiceImpl.java:198)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.deliverytech.delivery.service.impl.RestauranteServiceImpl$$SpringCGLIB$$0.buscarRestaurantesComPaginacao(<generated>)
	at com.deliverytech.delivery.controller.RestauranteController.listarRestaurantesComFiltro(RestauranteController.java:93)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.deliverytech.delivery.controller.RestauranteController$$SpringCGLIB$$0.listarRestaurantesComFiltro(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.deliverytech.delivery.filter.CorrelationIdFilter.doFilter(CorrelationIdFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.deliverytech.delivery.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:67)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-04 09:04:24.949 [http-nio-8080-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /error?ativo=true&page=0&size=1&sort=%5B%5D
2025-08-04 09:04:24.950 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 09:04:24.950 [http-nio-8080-exec-6] DEBUG [] o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-08-04 09:09:01.788 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-04 09:09:01.893 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-04 09:09:02.183 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 09:09:02.211 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 09:09:02.240 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 09:09:02.241 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 09:09:02.242 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 09:09:02.243 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 09:09:02.243 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 09:09:02.401 [SpringApplicationShutdownHook] WARN  [] o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-232]
2025-08-04 09:09:02.402 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-04 09:09:02.416 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-04 10:34:28.921 [main] INFO  [] c.d.delivery.config.DataBaseTest - Starting DataBaseTest using Java 21.0.1 with PID 22628 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 10:34:28.943 [main] DEBUG [] c.d.delivery.config.DataBaseTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 10:34:28.945 [main] INFO  [] c.d.delivery.config.DataBaseTest - The following 1 profile is active: "test"
2025-08-04 10:34:28.969 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6f2d3391
2025-08-04 10:34:32.072 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:34:32.075 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 10:34:32.391 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 300 ms. Found 5 JPA repository interfaces.
2025-08-04 10:34:32.418 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:34:32.420 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 10:34:32.447 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:32.448 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:32.448 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:32.449 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:32.449 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:32.449 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2025-08-04 10:34:34.275 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 10:34:34.330 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-04 10:34:34.909 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-04 10:34:34.912 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-04 10:34:34.965 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 10:34:37.510 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:34:37.515 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:34:37.516 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:34:37.516 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:34:37.516 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:34:37.517 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:34:37.527 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 10:34:37.542 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 10:34:37.545 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 10:34:37.548 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 10:34:37.549 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 10:34:37.552 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 10:34:37.559 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 10:34:37.585 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 10:34:37.591 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 10:34:37.593 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:34:37.596 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:34:37.608 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:34:38.281 [main] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-04 10:34:40.308 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 10:34:41.397 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 10:34:41.747 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 10:34:42.527 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 10:34:42.718 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 10:34:42.938 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 10:34:43.028 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 10:34:44.105 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 10:34:44.204 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 10:34:44.204 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 10:34:44.205 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 10:34:44.206 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 10:34:44.207 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 10:34:44.343 [main] INFO  [] c.d.delivery.config.DataBaseTest - Started DataBaseTest in 16.568 seconds (process running for 20.703)
2025-08-04 10:34:44.640 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 10:34:44.708 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 10:34:44.711 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 10:34:44.713 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 10:34:45.126 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.145 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.146 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.147 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.148 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.149 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.163 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.164 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.166 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.166 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.167 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.168 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.187 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.189 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.190 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.191 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.192 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.193 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.208 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:45.228 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:45.231 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:45.233 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:45.236 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:45.238 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:45.241 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.245 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.249 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.252 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.254 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.256 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.259 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.261 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.263 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.264 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.266 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.269 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.271 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.273 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.275 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.277 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.279 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.280 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.288 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:45.292 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:45.293 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:45.296 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:45.299 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.302 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.303 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.312 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:45.314 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:45.316 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:45.318 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:45.320 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.322 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.322 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.325 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:45.327 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:45.329 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:45.331 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:45.333 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.336 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.338 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.339 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:45.341 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:45.342 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:45.343 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:45.345 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.346 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.347 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.349 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:45.350 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:45.351 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:45.352 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:45.354 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:45.357 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.358 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.359 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.360 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.410 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 10:34:45.419 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 10:34:45.429 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 10:34:45.437 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 10:34:45.442 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 10:34:45.448 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 10:34:45.454 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 10:34:45.460 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 10:34:45.462 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:45.471 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 10:34:45.473 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:45.478 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 10:34:45.479 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:45.481 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:45.482 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:45.483 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:45.483 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:45.487 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:34:45.493 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:34:45.494 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:45.496 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:45.497 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:45.497 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:45.503 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 10:34:45.505 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:45.506 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:45.508 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:45.510 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:45.511 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:45.511 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:45.517 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:34:45.543 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:45.547 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:46.123 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@6f2d3391, started on Mon Aug 04 10:34:28 BRT 2025
2025-08-04 10:34:46.162 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:34:46.165 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:34:46.167 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:34:46.168 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:34:46.169 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:34:46.169 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:34:46.170 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:34:46.172 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-04 10:34:46.174 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-04 10:34:46.191 [main] INFO  [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.deliverytech.delivery.config.SwaggerIntegrationTest]: SwaggerIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 10:34:46.192 [main] INFO  [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.deliverytech.delivery.DeliveryApiApplication for test class com.deliverytech.delivery.config.SwaggerIntegrationTest
2025-08-04 10:34:46.206 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 10:34:46.251 [main] INFO  [] c.d.d.config.SwaggerIntegrationTest - Starting SwaggerIntegrationTest using Java 21.0.1 with PID 22628 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 10:34:46.251 [main] DEBUG [] c.d.d.config.SwaggerIntegrationTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 10:34:46.253 [main] INFO  [] c.d.d.config.SwaggerIntegrationTest - The following 1 profile is active: "development"
2025-08-04 10:34:46.683 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:34:46.683 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 10:34:46.706 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 5 JPA repository interfaces.
2025-08-04 10:34:46.709 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:34:46.709 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 10:34:46.715 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:46.715 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:46.715 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:46.715 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:46.715 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:46.715 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-08-04 10:34:47.023 [main] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2025-08-04 10:34:47.044 [main] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2025-08-04 10:34:47.047 [main] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-04 10:34:47.047 [main] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-04 10:34:47.140 [main] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-04 10:34:47.141 [main] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 887 ms
2025-08-04 10:34:47.271 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 10:34:47.272 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-04 10:34:47.273 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:deliverydb user=SA
2025-08-04 10:34:47.275 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-04 10:34:47.275 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 10:34:47.371 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:34:47.371 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:34:47.371 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:34:47.371 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:34:47.371 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:34:47.371 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:34:47.373 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 10:34:47.375 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 10:34:47.376 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 10:34:47.377 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 10:34:47.378 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 10:34:47.379 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 10:34:47.380 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 10:34:47.381 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 10:34:47.382 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 10:34:47.383 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:34:47.385 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:34:47.387 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:34:47.460 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 10:34:47.460 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 10:34:47.653 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 10:34:47.754 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 10:34:47.799 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 10:34:47.855 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 10:34:47.902 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 10:34:47.937 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 10:34:47.948 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 10:34:48.060 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-04 10:34:48.126 [main] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2025-08-04 10:34:48.173 [main] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 62184 (http) with context path '/'
2025-08-04 10:34:48.183 [main] INFO  [] c.d.d.config.SwaggerIntegrationTest - Started SwaggerIntegrationTest in 1.977 seconds (process running for 24.548)
2025-08-04 10:34:48.189 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 10:34:48.196 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 10:34:48.198 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 10:34:48.200 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 10:34:48.560 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.561 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.563 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.564 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.564 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.566 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.571 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.573 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.574 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.575 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.576 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.576 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.580 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.581 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.581 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.583 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.584 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.585 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.589 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:48.590 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:48.591 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:48.592 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:48.593 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:48.595 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:48.596 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.597 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.598 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.598 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.599 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.600 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.602 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.602 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.603 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.604 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.604 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.605 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.605 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.606 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.607 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.607 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.608 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.608 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.611 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:48.613 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:48.615 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:48.617 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:48.619 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.620 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.621 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.622 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:48.623 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:48.624 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:48.625 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:48.627 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.627 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.628 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.630 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:48.631 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:48.632 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:48.633 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:48.635 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.636 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.637 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.638 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:48.640 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:48.641 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:48.641 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:48.643 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.643 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.643 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.646 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:48.648 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:48.649 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:48.651 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:48.653 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:48.655 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.657 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.658 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.659 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:48.661 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 10:34:48.665 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 10:34:48.670 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 10:34:48.673 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 10:34:48.677 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 10:34:48.681 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 10:34:48.685 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 10:34:48.690 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 10:34:48.691 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:48.696 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 10:34:48.697 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:48.701 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 10:34:48.703 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:48.705 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:48.705 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:48.707 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:48.708 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:48.711 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:34:48.714 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:34:48.715 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:48.716 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:48.718 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:48.719 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:48.721 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 10:34:48.723 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:48.724 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:48.725 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:48.725 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:48.726 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:48.727 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:48.730 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:34:48.768 [main] DEBUG [] o.s.web.client.RestTemplate - HTTP GET http://localhost:62184/api-docs
2025-08-04 10:34:48.777 [main] DEBUG [] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-04 10:34:48.909 [http-nio-auto-1-exec-1] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-04 10:34:48.909 [http-nio-auto-1-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-04 10:34:48.909 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-04 10:34:48.909 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-04 10:34:48.909 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-04 10:34:48.910 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2c9ffd1b
2025-08-04 10:34:48.911 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@4dbbe41a
2025-08-04 10:34:48.911 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-04 10:34:48.911 [http-nio-auto-1-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-04 10:34:48.940 [http-nio-auto-1-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api-docs
2025-08-04 10:34:48.953 [http-nio-auto-1-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:34:48.958 [http-nio-auto-1-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 10:34:48.972 [http-nio-auto-1-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api-docs
2025-08-04 10:34:48.988 [http-nio-auto-1-exec-1] DEBUG [0fc53a4112f3409f] o.s.web.servlet.DispatcherServlet - GET "/api-docs", parameters={}
2025-08-04 10:34:48.991 [http-nio-auto-1-exec-1] DEBUG [0fc53a4112f3409f] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
2025-08-04 10:34:50.790 [http-nio-auto-1-exec-1] INFO  [0fc53a4112f3409f] o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 1769 ms
2025-08-04 10:34:50.830 [http-nio-auto-1-exec-1] DEBUG [0fc53a4112f3409f] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [text/plain, application/json, application/yaml, application/*+json, */*] and supported [application/json]
2025-08-04 10:34:50.841 [http-nio-auto-1-exec-1] DEBUG [0fc53a4112f3409f] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 49, 46, 48, 34, 44, 34, 105, 110, 10 (truncated)...]
2025-08-04 10:34:50.849 [http-nio-auto-1-exec-1] DEBUG [0fc53a4112f3409f] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-04 10:34:50.870 [main] DEBUG [] o.s.web.client.RestTemplate - Response 200 OK
2025-08-04 10:34:50.873 [main] DEBUG [] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json"
2025-08-04 10:34:50.894 [main] DEBUG [] o.s.web.client.RestTemplate - HTTP GET http://localhost:62184/api-docs
2025-08-04 10:34:50.895 [main] DEBUG [] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-04 10:34:50.899 [http-nio-auto-1-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api-docs
2025-08-04 10:34:50.900 [http-nio-auto-1-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:34:50.901 [http-nio-auto-1-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 10:34:50.903 [http-nio-auto-1-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api-docs
2025-08-04 10:34:50.903 [http-nio-auto-1-exec-2] DEBUG [23c1a552d32d4a7b] o.s.web.servlet.DispatcherServlet - GET "/api-docs", parameters={}
2025-08-04 10:34:50.904 [http-nio-auto-1-exec-2] DEBUG [23c1a552d32d4a7b] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
2025-08-04 10:34:50.915 [http-nio-auto-1-exec-2] DEBUG [23c1a552d32d4a7b] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [text/plain, application/json, application/yaml, application/*+json, */*] and supported [application/json]
2025-08-04 10:34:50.921 [http-nio-auto-1-exec-2] DEBUG [23c1a552d32d4a7b] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 49, 46, 48, 34, 44, 34, 105, 110, 10 (truncated)...]
2025-08-04 10:34:50.923 [http-nio-auto-1-exec-2] DEBUG [23c1a552d32d4a7b] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-04 10:34:50.924 [main] DEBUG [] o.s.web.client.RestTemplate - Response 200 OK
2025-08-04 10:34:50.924 [main] DEBUG [] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json"
2025-08-04 10:34:50.940 [main] DEBUG [] o.s.web.client.RestTemplate - HTTP GET http://localhost:62184/swagger-ui.html
2025-08-04 10:34:50.940 [main] DEBUG [] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-04 10:34:50.943 [http-nio-auto-1-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui.html
2025-08-04 10:34:50.944 [http-nio-auto-1-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:34:50.945 [http-nio-auto-1-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 10:34:50.946 [http-nio-auto-1-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui.html
2025-08-04 10:34:50.946 [http-nio-auto-1-exec-3] DEBUG [beb7bd9ff82e4c49] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui.html", parameters={}
2025-08-04 10:34:50.947 [http-nio-auto-1-exec-3] DEBUG [beb7bd9ff82e4c49] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.ui.SwaggerWelcomeWebMvc#redirectToUi(HttpServletRequest)
2025-08-04 10:34:50.952 [http-nio-auto-1-exec-3] DEBUG [beb7bd9ff82e4c49] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [text/plain, application/json, application/yaml, application/*+json, */*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 10:34:50.952 [http-nio-auto-1-exec-3] DEBUG [beb7bd9ff82e4c49] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Nothing to write: null body
2025-08-04 10:34:50.953 [http-nio-auto-1-exec-3] DEBUG [beb7bd9ff82e4c49] o.s.web.servlet.DispatcherServlet - Completed 302 FOUND
2025-08-04 10:34:50.962 [http-nio-auto-1-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-08-04 10:34:50.963 [http-nio-auto-1-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:34:50.964 [http-nio-auto-1-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 10:34:50.968 [http-nio-auto-1-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-08-04 10:34:50.969 [http-nio-auto-1-exec-4] DEBUG [7c344b4b5e124f9f] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/index.html", parameters={}
2025-08-04 10:34:50.970 [http-nio-auto-1-exec-4] DEBUG [7c344b4b5e124f9f] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-08-04 10:34:50.976 [http-nio-auto-1-exec-4] DEBUG [7c344b4b5e124f9f] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-04 10:34:50.977 [main] DEBUG [] o.s.web.client.RestTemplate - Response 200 OK
2025-08-04 10:34:50.977 [main] DEBUG [] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "text/html"
2025-08-04 10:34:50.988 [main] INFO  [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.deliverytech.delivery.controller.ClienteControllerITTest]: ClienteControllerITTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 10:34:51.009 [main] INFO  [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.deliverytech.delivery.DeliveryApiApplication for test class com.deliverytech.delivery.controller.ClienteControllerITTest
2025-08-04 10:34:51.015 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 10:34:51.045 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 22628 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 10:34:51.045 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 10:34:51.045 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-04 10:34:51.047 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@235e9793
2025-08-04 10:34:51.426 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:34:51.426 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 10:34:51.445 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 5 JPA repository interfaces.
2025-08-04 10:34:51.447 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:34:51.448 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 10:34:51.454 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:51.454 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:51.454 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:51.454 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:51.454 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:51.455 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-08-04 10:34:51.566 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 10:34:51.567 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-08-04 10:34:51.568 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection conn20: url=jdbc:h2:mem:testdb user=SA
2025-08-04 10:34:51.568 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-08-04 10:34:51.568 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 10:34:51.647 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:34:51.647 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:34:51.648 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:34:51.648 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:34:51.648 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:34:51.648 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:34:51.648 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 10:34:51.649 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 10:34:51.650 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 10:34:51.651 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 10:34:51.652 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 10:34:51.653 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 10:34:51.655 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 10:34:51.656 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 10:34:51.657 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 10:34:51.658 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:34:51.659 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:34:51.661 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:34:51.828 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 10:34:51.953 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 10:34:51.993 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 10:34:52.062 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 10:34:52.106 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 10:34:52.155 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 10:34:52.165 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 10:34:52.291 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 10:34:52.311 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 10:34:52.311 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 10:34:52.312 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 10:34:52.312 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 10:34:52.312 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-08-04 10:34:52.343 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 1.328 seconds (process running for 28.707)
2025-08-04 10:34:52.346 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 10:34:52.349 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 10:34:52.352 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 10:34:52.355 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 10:34:52.715 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.716 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.717 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.717 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.718 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.719 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.720 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.721 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.722 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.722 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.724 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.724 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.726 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.727 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.728 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.728 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.731 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.732 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.733 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:52.736 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:52.738 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:52.738 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:52.739 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:52.740 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:52.742 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.743 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.743 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.744 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.744 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.745 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.746 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.747 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.748 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.748 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.749 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.749 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.750 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.750 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.751 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.752 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.752 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.753 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.755 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:52.758 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:52.759 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:52.760 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:52.763 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.765 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.766 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.767 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:52.769 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:52.770 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:52.771 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:52.772 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.772 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.773 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.774 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:52.776 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:52.777 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:52.778 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:52.779 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.779 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.780 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.781 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:52.782 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:52.783 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:52.783 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:52.785 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.786 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.787 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.788 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:52.789 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:52.790 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:52.790 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:52.791 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:52.793 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.794 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.794 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.795 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.797 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 10:34:52.799 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 10:34:52.803 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 10:34:52.804 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 10:34:52.806 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 10:34:52.809 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 10:34:52.813 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 10:34:52.817 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 10:34:52.819 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:52.821 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 10:34:52.823 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:52.828 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 10:34:52.829 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:52.831 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:52.831 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:52.832 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:52.833 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:52.836 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:34:52.838 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:34:52.839 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:52.841 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:52.842 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:52.842 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:52.845 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 10:34:52.846 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:52.846 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:52.847 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:52.848 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:52.848 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:52.848 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:52.851 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:34:52.856 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.858 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:52.870 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 10:34:52.881 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing DELETE /api/clientes/7
2025-08-04 10:34:52.883 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:34:52.885 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured DELETE /api/clientes/7
2025-08-04 10:34:52.888 [main] DEBUG [e0883599fcd2480a] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#deletarCliente(Long)
2025-08-04 10:34:52.891 [main] DEBUG [e0883599fcd2480a] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.deletarCliente(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 10:34:52.903 [main] DEBUG [e0883599fcd2480a] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.deletarCliente(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 10:34:52.904 [main] DEBUG [e0883599fcd2480a] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:52.913 [main] DEBUG [e0883599fcd2480a] org.hibernate.SQL - 
    /* delete for com.deliverytech.delivery.entity.Cliente */delete 
    from
        clientes 
    where
        id=?
2025-08-04 10:34:52.922 [main] DEBUG [e0883599fcd2480a] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 10:34:52.922 [main] DEBUG [e0883599fcd2480a] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Nothing to write: null body
2025-08-04 10:34:52.933 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/clientes/7
2025-08-04 10:34:52.936 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:34:52.936 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/clientes/7
2025-08-04 10:34:52.937 [main] DEBUG [9e366ff90f76450c] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#buscarPorId(Long)
2025-08-04 10:34:52.938 [main] DEBUG [9e366ff90f76450c] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 10:34:52.939 [main] DEBUG [9e366ff90f76450c] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 10:34:52.944 [main] DEBUG [9e366ff90f76450c] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:52.948 [main] DEBUG [9e366ff90f76450c] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleEntityNotFoundException(EntityNotFoundException, WebRequest)
2025-08-04 10:34:52.953 [main] DEBUG [9e366ff90f76450c] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 10:34:52.953 [main] DEBUG [9e366ff90f76450c] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@4b67579]
2025-08-04 10:34:52.956 [main] DEBUG [9e366ff90f76450c] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.deliverytech.delivery.exceptions.EntityNotFoundException: Cliente não encontrado: 7]
2025-08-04 10:34:52.961 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@235e9793, started on Mon Aug 04 10:34:51 BRT 2025
2025-08-04 10:34:52.966 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:34:52.966 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:34:52.967 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:34:52.967 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:34:52.968 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:34:52.968 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:34:52.968 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:34:52.969 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2025-08-04 10:34:52.970 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2025-08-04 10:34:52.973 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 10:34:53.003 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 22628 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 10:34:53.003 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 10:34:53.003 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-04 10:34:53.004 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6e80ddff
2025-08-04 10:34:53.298 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:34:53.298 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 10:34:53.318 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 5 JPA repository interfaces.
2025-08-04 10:34:53.322 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:34:53.323 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 10:34:53.329 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:53.329 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:53.329 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:53.329 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:53.330 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:53.330 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-08-04 10:34:53.444 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 10:34:53.445 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
2025-08-04 10:34:53.446 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Added connection conn30: url=jdbc:h2:mem:testdb user=SA
2025-08-04 10:34:53.446 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
2025-08-04 10:34:53.446 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 10:34:53.513 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:34:53.513 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:34:53.514 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:34:53.514 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:34:53.514 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:34:53.514 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:34:53.514 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 10:34:53.515 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 10:34:53.516 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 10:34:53.517 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 10:34:53.517 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 10:34:53.518 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 10:34:53.519 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 10:34:53.520 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 10:34:53.521 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 10:34:53.522 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:34:53.522 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:34:53.524 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:34:53.696 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 10:34:53.854 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 10:34:53.935 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 10:34:54.014 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 10:34:54.062 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 10:34:54.111 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 10:34:54.121 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 10:34:54.216 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 10:34:54.232 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 10:34:54.232 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 10:34:54.232 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 10:34:54.232 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 10:34:54.232 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-08-04 10:34:54.251 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 1.277 seconds (process running for 30.615)
2025-08-04 10:34:54.254 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 10:34:54.259 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 10:34:54.262 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 10:34:54.264 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 10:34:54.625 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.627 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.627 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.628 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.628 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.629 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.630 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.631 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.631 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.633 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.633 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.633 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.636 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.637 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.637 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.639 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.640 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.640 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.642 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:54.643 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:54.645 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:54.646 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:54.646 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:54.647 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:54.648 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.649 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.649 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.650 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.650 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.651 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.651 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.652 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.652 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.653 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.653 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.654 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.655 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.655 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.656 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.656 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.657 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.657 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.659 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:54.660 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:54.661 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:54.662 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:54.663 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.666 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.667 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.668 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:54.669 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:54.670 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:54.671 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:54.672 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.673 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.673 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.675 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:54.676 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:54.677 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:54.678 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:54.679 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.679 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.680 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.682 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:54.684 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:54.684 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:54.685 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:54.686 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.687 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.687 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.688 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:54.689 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:54.690 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:54.690 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:54.691 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:54.692 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.693 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.694 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.695 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.698 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 10:34:54.701 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 10:34:54.705 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 10:34:54.708 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 10:34:54.710 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 10:34:54.712 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 10:34:54.715 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 10:34:54.718 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 10:34:54.719 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:54.721 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 10:34:54.723 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:54.725 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 10:34:54.725 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:54.726 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:54.727 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:54.728 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:54.728 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:54.731 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:34:54.733 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:34:54.735 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:54.736 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:54.736 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:54.737 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:54.739 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 10:34:54.740 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:54.741 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:54.741 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:54.742 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:54.742 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:54.742 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:54.745 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:34:54.751 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.753 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.762 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/clientes
2025-08-04 10:34:54.763 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:34:54.763 [main] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 10:34:54.765 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/clientes
2025-08-04 10:34:54.765 [main] DEBUG [30ad7743883c4a75] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#cadastrarCliente(ClienteRequestDTO)
2025-08-04 10:34:54.781 [main] DEBUG [30ad7743883c4a75] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ClienteRequestDTO{email='mariacliente@email.com', nome='Maria Silva', telefone='11888888888', endere (truncated)...]
2025-08-04 10:34:54.828 [main] DEBUG [30ad7743883c4a75] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 10:34:54.830 [main] DEBUG [30ad7743883c4a75] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.cpf=? 
    fetch
        first ? rows only
2025-08-04 10:34:54.875 [main] DEBUG [30ad7743883c4a75] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:54.880 [main] DEBUG [30ad7743883c4a75] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 10:34:54.880 [main] DEBUG [30ad7743883c4a75] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@554f6942]
2025-08-04 10:34:54.938 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@6e80ddff, started on Mon Aug 04 10:34:53 BRT 2025
2025-08-04 10:34:54.943 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:34:54.944 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:34:54.944 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:34:54.945 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:34:54.946 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:34:54.946 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:34:54.947 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:34:54.947 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown initiated...
2025-08-04 10:34:54.948 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown completed.
2025-08-04 10:34:54.951 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 10:34:54.983 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 22628 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 10:34:54.983 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 10:34:54.983 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-04 10:34:54.984 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6a0358f1
2025-08-04 10:34:55.246 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:34:55.246 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 10:34:55.262 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2025-08-04 10:34:55.263 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:34:55.264 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 10:34:55.268 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:55.268 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:55.268 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:55.268 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:55.268 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:55.268 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-08-04 10:34:55.360 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 10:34:55.360 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Starting...
2025-08-04 10:34:55.361 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-5 - Added connection conn40: url=jdbc:h2:mem:testdb user=SA
2025-08-04 10:34:55.361 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Start completed.
2025-08-04 10:34:55.362 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 10:34:55.433 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:34:55.433 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:34:55.433 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:34:55.433 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:34:55.433 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:34:55.433 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:34:55.434 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 10:34:55.434 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 10:34:55.436 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 10:34:55.437 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 10:34:55.437 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 10:34:55.438 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 10:34:55.439 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 10:34:55.440 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 10:34:55.442 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 10:34:55.442 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:34:55.444 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:34:55.446 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:34:55.613 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 10:34:55.746 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 10:34:55.784 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 10:34:55.849 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 10:34:55.905 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 10:34:55.966 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 10:34:55.975 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 10:34:56.092 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 10:34:56.113 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 10:34:56.113 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 10:34:56.113 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 10:34:56.113 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 10:34:56.114 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 10:34:56.177 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 1.224 seconds (process running for 32.54)
2025-08-04 10:34:56.182 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 10:34:56.188 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 10:34:56.190 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 10:34:56.192 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 10:34:56.550 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.552 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.552 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.552 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.553 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.553 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.556 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.557 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.557 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.558 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.558 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.559 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.561 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.562 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.563 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.563 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.564 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.564 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.566 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:56.567 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:56.568 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:56.569 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:56.570 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:56.571 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:56.571 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.573 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.573 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.574 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.574 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.574 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.575 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.575 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.576 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.576 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.577 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.577 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.577 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.578 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.578 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.579 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.580 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.580 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.581 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:56.583 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:56.585 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:56.586 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:56.588 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.589 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.589 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.591 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:56.591 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:56.593 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:56.593 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:56.594 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.595 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.596 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.597 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:56.598 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:56.599 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:56.600 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:56.601 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.602 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.603 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.605 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:56.606 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:56.607 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:56.607 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:56.608 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.609 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.609 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.610 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:56.611 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:56.612 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:56.613 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:56.614 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:56.615 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.617 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.619 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.620 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.623 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 10:34:56.626 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 10:34:56.629 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 10:34:56.631 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 10:34:56.632 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 10:34:56.636 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 10:34:56.639 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 10:34:56.643 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 10:34:56.645 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:56.647 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 10:34:56.649 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:56.652 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 10:34:56.653 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:56.653 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:56.653 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:56.654 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:56.654 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:56.656 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:34:56.658 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:34:56.659 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:56.660 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:56.660 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:56.661 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:56.663 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 10:34:56.664 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:56.664 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:56.665 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:56.666 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:56.666 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:56.667 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:56.670 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:34:56.676 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.679 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:56.686 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 10:34:56.690 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/clientes/1
2025-08-04 10:34:56.691 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:34:56.693 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/clientes/1
2025-08-04 10:34:56.694 [main] DEBUG [6238d0318ed84aef] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#buscarPorId(Long)
2025-08-04 10:34:56.697 [main] DEBUG [6238d0318ed84aef] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 10:34:56.700 [main] DEBUG [6238d0318ed84aef] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 10:34:56.702 [main] DEBUG [6238d0318ed84aef] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:56.709 [main] DEBUG [6238d0318ed84aef] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 10:34:56.709 [main] DEBUG [6238d0318ed84aef] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@7018c5c4]
2025-08-04 10:34:56.719 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@6a0358f1, started on Mon Aug 04 10:34:54 BRT 2025
2025-08-04 10:34:56.723 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:34:56.723 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:34:56.724 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:34:56.724 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:34:56.725 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:34:56.725 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:34:56.725 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:34:56.726 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown initiated...
2025-08-04 10:34:56.727 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown completed.
2025-08-04 10:34:56.731 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 10:34:56.768 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 22628 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 10:34:56.769 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 10:34:56.769 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-04 10:34:56.771 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4ada109f
2025-08-04 10:34:57.055 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:34:57.055 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 10:34:57.073 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 5 JPA repository interfaces.
2025-08-04 10:34:57.076 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:34:57.076 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 10:34:57.083 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:57.083 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:57.083 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:57.083 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:57.083 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:57.083 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-08-04 10:34:57.180 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 10:34:57.181 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Starting...
2025-08-04 10:34:57.182 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-6 - Added connection conn50: url=jdbc:h2:mem:testdb user=SA
2025-08-04 10:34:57.182 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Start completed.
2025-08-04 10:34:57.182 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 10:34:57.248 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:34:57.248 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:34:57.248 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:34:57.248 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:34:57.248 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:34:57.248 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:34:57.250 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 10:34:57.251 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 10:34:57.251 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 10:34:57.252 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 10:34:57.252 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 10:34:57.253 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 10:34:57.254 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 10:34:57.256 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 10:34:57.257 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 10:34:57.258 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:34:57.259 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:34:57.260 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:34:57.408 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 10:34:57.518 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 10:34:57.564 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 10:34:57.633 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 10:34:57.680 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 10:34:57.738 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 10:34:57.745 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 10:34:57.849 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 10:34:57.865 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 10:34:57.865 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 10:34:57.865 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 10:34:57.865 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 10:34:57.866 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 10:34:57.885 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 1.153 seconds (process running for 34.248)
2025-08-04 10:34:57.889 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 10:34:57.893 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 10:34:57.896 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 10:34:57.899 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 10:34:58.262 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.263 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.263 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.264 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.265 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.265 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.266 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.267 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.267 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.268 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.269 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.269 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.272 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.274 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.274 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.276 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.277 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.278 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.280 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:58.283 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:58.285 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:58.287 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:58.288 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:58.289 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:58.290 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.291 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.293 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.293 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.294 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.294 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.295 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.296 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.296 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.297 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.298 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.298 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.299 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.299 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.300 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.301 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.302 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.303 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.305 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:58.308 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:58.310 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:58.311 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:58.313 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.314 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.316 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.319 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:58.320 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:58.322 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:58.323 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:58.324 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.325 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.326 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.328 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:58.329 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:58.330 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:58.331 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:58.333 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.334 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.334 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.336 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:58.337 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:58.338 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:58.339 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:58.340 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.340 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.341 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.342 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:58.342 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:58.343 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:58.344 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:34:58.344 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:58.346 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.346 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.347 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.348 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.350 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 10:34:58.353 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 10:34:58.357 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 10:34:58.360 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 10:34:58.363 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 10:34:58.366 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 10:34:58.370 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 10:34:58.374 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 10:34:58.376 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:58.380 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 10:34:58.380 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:58.383 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 10:34:58.385 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:58.386 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:58.387 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:58.388 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:58.388 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:58.391 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:34:58.394 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:34:58.395 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:58.396 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:58.397 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:58.397 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:58.399 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 10:34:58.400 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:58.401 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:58.401 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:58.403 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:58.404 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:58.404 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:34:58.407 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:34:58.414 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.418 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:34:58.424 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 10:34:58.430 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing PUT /api/clientes/1
2025-08-04 10:34:58.431 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:34:58.431 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured PUT /api/clientes/1
2025-08-04 10:34:58.433 [main] DEBUG [a1d84c1f69f34145] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#atualizarCliente(Long, ClienteRequestDTO)
2025-08-04 10:34:58.435 [main] DEBUG [a1d84c1f69f34145] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ClienteRequestDTO{email='novoemail@email.com', nome='Nome Atualizado', telefone='11777777777', ender (truncated)...]
2025-08-04 10:34:58.440 [main] DEBUG [a1d84c1f69f34145] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.atualizarCliente(java.lang.Long,com.deliverytech.delivery.dto.request.ClienteRequestDTO); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 10:34:58.441 [main] DEBUG [a1d84c1f69f34145] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.atualizarCliente(java.lang.Long,com.deliverytech.delivery.dto.request.ClienteRequestDTO); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 10:34:58.443 [main] DEBUG [a1d84c1f69f34145] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:34:58.454 [main] DEBUG [a1d84c1f69f34145] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Cliente */update clientes 
    set
        ativo=?,
        cpf=?,
        data_cadastro=?,
        email=?,
        endereco=?,
        nome=?,
        telefone=? 
    where
        id=?
2025-08-04 10:34:58.458 [main] DEBUG [a1d84c1f69f34145] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 10:34:58.458 [main] DEBUG [a1d84c1f69f34145] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@7570df04]
2025-08-04 10:34:58.467 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@4ada109f, started on Mon Aug 04 10:34:56 BRT 2025
2025-08-04 10:34:58.472 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:34:58.472 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:34:58.473 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:34:58.473 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:34:58.474 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:34:58.474 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:34:58.475 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:34:58.476 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown initiated...
2025-08-04 10:34:58.477 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown completed.
2025-08-04 10:34:58.480 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 10:34:58.509 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 22628 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 10:34:58.509 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 10:34:58.510 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-04 10:34:58.511 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@5808120e
2025-08-04 10:34:58.768 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:34:58.769 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 10:34:58.790 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 5 JPA repository interfaces.
2025-08-04 10:34:58.793 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:34:58.793 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 10:34:58.798 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:58.799 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:58.799 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:58.799 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:58.799 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:34:58.799 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-08-04 10:34:58.954 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 10:34:58.955 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Starting...
2025-08-04 10:34:58.956 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-7 - Added connection conn60: url=jdbc:h2:mem:testdb user=SA
2025-08-04 10:34:58.956 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Start completed.
2025-08-04 10:34:58.956 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 10:34:59.023 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:34:59.024 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:34:59.024 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:34:59.024 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:34:59.024 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:34:59.024 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:34:59.025 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 10:34:59.028 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 10:34:59.029 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 10:34:59.030 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 10:34:59.031 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 10:34:59.032 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 10:34:59.033 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 10:34:59.034 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 10:34:59.037 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 10:34:59.038 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:34:59.039 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:34:59.041 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:34:59.197 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 10:34:59.313 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 10:34:59.361 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 10:34:59.454 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 10:34:59.519 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 10:34:59.597 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 10:34:59.609 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 10:34:59.781 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 10:34:59.809 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 10:34:59.809 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 10:34:59.809 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 10:34:59.809 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 10:34:59.811 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-08-04 10:34:59.850 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 1.369 seconds (process running for 36.214)
2025-08-04 10:34:59.857 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 10:34:59.864 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 10:34:59.867 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 10:34:59.871 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 10:35:00.273 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.274 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.274 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.275 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.275 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.276 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.278 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.278 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.279 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.279 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.279 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.280 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.282 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.283 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.284 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.285 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.285 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.286 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.287 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:00.289 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:00.289 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:00.290 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:00.291 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:00.291 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:00.292 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.292 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.293 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.293 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.294 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.294 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.295 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.295 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.295 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.296 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.296 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.297 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.297 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.298 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.298 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.299 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.299 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.300 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.301 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:00.304 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:00.305 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:00.306 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:00.307 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.308 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.308 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.310 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:00.310 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:00.311 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:00.312 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:00.313 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.314 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.314 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.314 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:00.315 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:00.316 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:00.318 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:00.318 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.318 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.319 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.321 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:00.321 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:00.322 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:00.322 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:00.323 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.324 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.324 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.325 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:00.326 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:00.327 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:00.328 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:00.328 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:00.329 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.330 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.331 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.332 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.336 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 10:35:00.339 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 10:35:00.342 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 10:35:00.346 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 10:35:00.348 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 10:35:00.351 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 10:35:00.353 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 10:35:00.357 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 10:35:00.358 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:00.361 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 10:35:00.362 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:00.364 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 10:35:00.365 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:00.366 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:00.366 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:00.366 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:00.367 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:00.369 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:00.371 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:00.372 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:00.372 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:00.373 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:00.373 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:00.375 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 10:35:00.377 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:00.377 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:00.378 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:00.378 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:00.378 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:00.379 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:00.381 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:00.388 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.391 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:00.396 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/clientes
2025-08-04 10:35:00.397 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:35:00.399 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/clientes
2025-08-04 10:35:00.399 [main] DEBUG [47f58ba71aae42dd] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#listarClientesAtivos(Pageable)
2025-08-04 10:35:00.403 [main] DEBUG [47f58ba71aae42dd] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.listarClientesAtivos(org.springframework.data.domain.Pageable); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 10:35:00.404 [main] DEBUG [47f58ba71aae42dd] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.listarClientesAtivos(org.springframework.data.domain.Pageable); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 10:35:00.406 [main] DEBUG [47f58ba71aae42dd] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleGenericException(Exception, WebRequest)
2025-08-04 10:35:00.408 [main] DEBUG [47f58ba71aae42dd] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 10:35:00.408 [main] DEBUG [47f58ba71aae42dd] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@271dc56b]
2025-08-04 10:35:00.409 [main] DEBUG [47f58ba71aae42dd] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.IllegalArgumentException: Null key returned for cache operation [Builder[public org.springframework.data.domain.Page com.deliverytech.delivery.service.impl.ClienteServiceImpl.listarAtivosPaginado(org.springframework.data.domain.Pageable)] caches=[cliente] | key='#id' | keyGenerator='' | cacheManager='' | cacheResolver='' | condition='' | unless='' | sync='false']. If you are using named parameters, ensure that the compiler uses the '-parameters' flag.]
2025-08-04 10:35:00.417 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@5808120e, started on Mon Aug 04 10:34:58 BRT 2025
2025-08-04 10:35:00.433 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:35:00.433 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:35:00.434 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:35:00.435 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:35:00.435 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:35:00.435 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:35:00.436 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:35:00.437 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown initiated...
2025-08-04 10:35:00.438 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown completed.
2025-08-04 10:35:00.447 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 10:35:00.473 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 22628 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 10:35:00.473 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 10:35:00.473 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-04 10:35:00.475 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@53ae53cf
2025-08-04 10:35:00.694 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:35:00.694 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 10:35:00.708 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
2025-08-04 10:35:00.709 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:35:00.710 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 10:35:00.714 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:00.714 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:00.715 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:00.715 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:00.715 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:00.715 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-08-04 10:35:00.801 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 10:35:00.803 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Starting...
2025-08-04 10:35:00.804 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-8 - Added connection conn70: url=jdbc:h2:mem:testdb user=SA
2025-08-04 10:35:00.804 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Start completed.
2025-08-04 10:35:00.804 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 10:35:00.855 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:35:00.856 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:35:00.856 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:35:00.856 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:35:00.856 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:35:00.856 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:35:00.856 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 10:35:00.857 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 10:35:00.857 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 10:35:00.858 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 10:35:00.859 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 10:35:00.859 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 10:35:00.860 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 10:35:00.861 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 10:35:00.861 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 10:35:00.863 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:35:00.863 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:35:00.865 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:35:01.010 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 10:35:01.109 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 10:35:01.143 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 10:35:01.201 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 10:35:01.244 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 10:35:01.285 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 10:35:01.303 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 10:35:01.408 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 10:35:01.423 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 10:35:01.424 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 10:35:01.424 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 10:35:01.424 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 10:35:01.425 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 10:35:01.443 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 0.996 seconds (process running for 37.808)
2025-08-04 10:35:01.450 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 10:35:01.458 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 10:35:01.462 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 10:35:01.466 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 10:35:01.828 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.829 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.830 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.830 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.831 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.831 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.832 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.833 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.833 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.834 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.834 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.835 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.836 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.838 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.838 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.839 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.840 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.840 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.841 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:01.843 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:01.843 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:01.844 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:01.845 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:01.845 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:01.846 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.847 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.847 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.847 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.848 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.848 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.848 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.849 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.849 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.849 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.850 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.850 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.851 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.851 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.852 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.852 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.852 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.852 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.853 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:01.856 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:01.856 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:01.857 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:01.858 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.859 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.859 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.860 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:01.861 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:01.862 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:01.862 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:01.862 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.863 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.863 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.864 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:01.866 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:01.867 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:01.868 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:01.868 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.869 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.869 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.870 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:01.871 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:01.871 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:01.871 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:01.873 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.874 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.874 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.875 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:01.875 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:01.876 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:01.877 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:01.877 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:01.878 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.879 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.879 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.880 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.882 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 10:35:01.885 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 10:35:01.887 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 10:35:01.889 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 10:35:01.891 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 10:35:01.893 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 10:35:01.896 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 10:35:01.898 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 10:35:01.899 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:01.901 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 10:35:01.902 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:01.904 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 10:35:01.905 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:01.906 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:01.906 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:01.906 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:01.906 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:01.908 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:01.910 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:01.911 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:01.911 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:01.912 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:01.912 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:01.913 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 10:35:01.914 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:01.915 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:01.915 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:01.916 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:01.916 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:01.916 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:01.919 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:01.923 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.925 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:01.931 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/clientes/999
2025-08-04 10:35:01.932 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:35:01.933 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/clientes/999
2025-08-04 10:35:01.934 [main] DEBUG [f2c1b3eb79d54f9c] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#buscarPorId(Long)
2025-08-04 10:35:01.935 [main] DEBUG [f2c1b3eb79d54f9c] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 10:35:01.936 [main] DEBUG [f2c1b3eb79d54f9c] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 10:35:01.937 [main] DEBUG [f2c1b3eb79d54f9c] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:01.938 [main] DEBUG [f2c1b3eb79d54f9c] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleEntityNotFoundException(EntityNotFoundException, WebRequest)
2025-08-04 10:35:01.941 [main] DEBUG [f2c1b3eb79d54f9c] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 10:35:01.941 [main] DEBUG [f2c1b3eb79d54f9c] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@138fc80a]
2025-08-04 10:35:01.941 [main] DEBUG [f2c1b3eb79d54f9c] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.deliverytech.delivery.exceptions.EntityNotFoundException: Cliente não encontrado: 999]
2025-08-04 10:35:01.957 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@53ae53cf, started on Mon Aug 04 10:35:00 BRT 2025
2025-08-04 10:35:01.961 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:35:01.961 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:35:01.961 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:35:01.962 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:35:01.962 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:35:01.962 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:35:01.963 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:35:01.963 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown initiated...
2025-08-04 10:35:01.964 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown completed.
2025-08-04 10:35:01.966 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 10:35:01.991 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 22628 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 10:35:01.991 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 10:35:01.991 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-04 10:35:01.992 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@2567f517
2025-08-04 10:35:02.247 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:35:02.247 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 10:35:02.266 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 5 JPA repository interfaces.
2025-08-04 10:35:02.268 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:35:02.268 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 10:35:02.273 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:02.274 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:02.274 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:02.274 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:02.274 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:02.274 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-08-04 10:35:02.400 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 10:35:02.401 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Starting...
2025-08-04 10:35:02.402 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-9 - Added connection conn80: url=jdbc:h2:mem:testdb user=SA
2025-08-04 10:35:02.402 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Start completed.
2025-08-04 10:35:02.403 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 10:35:02.463 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:35:02.463 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:35:02.464 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:35:02.464 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:35:02.464 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:35:02.464 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:35:02.465 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 10:35:02.466 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 10:35:02.467 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 10:35:02.468 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 10:35:02.469 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 10:35:02.470 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 10:35:02.471 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 10:35:02.472 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 10:35:02.473 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 10:35:02.475 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:35:02.478 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:35:02.480 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:35:02.611 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 10:35:02.713 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 10:35:02.763 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 10:35:02.819 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 10:35:02.861 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 10:35:02.902 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 10:35:02.911 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 10:35:03.018 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 10:35:03.034 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 10:35:03.034 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 10:35:03.034 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 10:35:03.034 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 10:35:03.035 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 10:35:03.052 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 1.086 seconds (process running for 39.417)
2025-08-04 10:35:03.056 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 10:35:03.059 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 10:35:03.061 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 10:35:03.062 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 10:35:03.423 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.424 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.424 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.425 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.425 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.426 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.427 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.428 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.429 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.429 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.429 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.430 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.431 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.432 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.433 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.434 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.434 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.435 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.436 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:03.438 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:03.439 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:03.440 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:03.441 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:03.442 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:03.443 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.444 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.445 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.445 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.446 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.446 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.446 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.447 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.447 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.447 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.448 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.448 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.448 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.449 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.449 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.449 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.450 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.450 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.451 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:03.452 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:03.454 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:03.455 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:03.457 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.457 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.458 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.459 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:03.460 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:03.460 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:03.461 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:03.461 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.461 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.463 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.464 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:03.464 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:03.465 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:03.466 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:03.466 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.467 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.467 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.470 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:03.471 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:03.471 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:03.472 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:03.473 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.473 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.474 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.475 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:03.476 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:03.477 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:03.478 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:03.478 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:03.479 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.480 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.481 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.481 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.483 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 10:35:03.486 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 10:35:03.488 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 10:35:03.491 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 10:35:03.493 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 10:35:03.495 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 10:35:03.497 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 10:35:03.499 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 10:35:03.501 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:03.504 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 10:35:03.505 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:03.507 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 10:35:03.508 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:03.508 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:03.509 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:03.509 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:03.509 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:03.511 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:03.513 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:03.514 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:03.514 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:03.514 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:03.515 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:03.517 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 10:35:03.518 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:03.518 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:03.519 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:03.519 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:03.519 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:03.519 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:03.522 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:03.527 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.528 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:03.538 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/clientes
2025-08-04 10:35:03.539 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:35:03.539 [main] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 10:35:03.540 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/clientes
2025-08-04 10:35:03.540 [main] DEBUG [c342905210484de8] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#cadastrarCliente(ClienteRequestDTO)
2025-08-04 10:35:03.542 [main] DEBUG [c342905210484de8] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ClienteRequestDTO{email='email-invalido', nome='', telefone='', endereco=''}]
2025-08-04 10:35:03.557 [main] DEBUG [c342905210484de8] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException, WebRequest)
2025-08-04 10:35:03.559 [main] DEBUG [c342905210484de8] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 10:35:03.560 [main] DEBUG [c342905210484de8] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@4e4627f6]
2025-08-04 10:35:03.561 [main] DEBUG [c342905210484de8] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.deliverytech.delivery.dto.response.ApiResponseWrapper<com.deliverytech.delivery.dto.response.ClienteResponseDTO>> com.deliverytech.delivery.controller.ClienteController.cadastrarCliente(com.deliverytech.delivery.dto.request.ClienteRequestDTO) with 7 errors: [Field error in object 'clienteRequestDTO' on field 'endereco': rejected value []; codes [NotBlank.clienteRequestDTO.endereco,NotBlank.endereco,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.endereco,endereco]; arguments []; default message [endereco]]; default message [O endereço é obrigatório]] [Field error in object 'clienteRequestDTO' on field 'cpf': rejected value [null]; codes [NotBlank.clienteRequestDTO.cpf,NotBlank.cpf,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.cpf,cpf]; arguments []; default message [cpf]]; default message [O CPF é obrigatório]] [Field error in object 'clienteRequestDTO' on field 'nome': rejected value []; codes [NotBlank.clienteRequestDTO.nome,NotBlank.nome,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.nome,nome]; arguments []; default message [nome]]; default message [O nome é obrigatório]] [Field error in object 'clienteRequestDTO' on field 'telefone': rejected value []; codes [Pattern.clienteRequestDTO.telefone,Pattern.telefone,Pattern.java.lang.String,Pattern]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.telefone,telefone]; arguments []; default message [telefone],[Ljakarta.validation.constraints.Pattern$Flag;@2535445a,^\+?[0-9]{10,15}$]; default message [O telefone deve ser um número válido com 10 a 15 dígitos, podendo iniciar com '+']] [Field error in object 'clienteRequestDTO' on field 'telefone': rejected value []; codes [Pattern.clienteRequestDTO.telefone,Pattern.telefone,Pattern.java.lang.String,Pattern]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.telefone,telefone]; arguments []; default message [telefone],[Ljakarta.validation.constraints.Pattern$Flag;@2535445a,^\+?[0-9]{10,15}$]; default message [O telefone deve ser um número válido com 10 a 15 dígitos]] [Field error in object 'clienteRequestDTO' on field 'email': rejected value [email-invalido]; codes [Email.clienteRequestDTO.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@6652f759,.*]; default message [O email deve ser válido]] [Field error in object 'clienteRequestDTO' on field 'cpf': rejected value [null]; codes [ValidCPF.clienteRequestDTO.cpf,ValidCPF.cpf,ValidCPF.java.lang.String,ValidCPF]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.cpf,cpf]; arguments []; default message [cpf]]; default message [CPF deve ter formato válido 12345678909 ou 123.456.789-09)]] ]
2025-08-04 10:35:03.578 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@2567f517, started on Mon Aug 04 10:35:01 BRT 2025
2025-08-04 10:35:03.584 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:35:03.584 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:35:03.585 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:35:03.586 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:35:03.586 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:35:03.586 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:35:03.587 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:35:03.588 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Shutdown initiated...
2025-08-04 10:35:03.589 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Shutdown completed.
2025-08-04 10:35:03.593 [main] INFO  [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.deliverytech.delivery.controller.PedidoControllerITTest]: PedidoControllerITTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 10:35:03.597 [main] INFO  [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.deliverytech.delivery.DeliveryApiApplication for test class com.deliverytech.delivery.controller.PedidoControllerITTest
2025-08-04 10:35:03.601 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 10:35:03.634 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 22628 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 10:35:03.634 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 10:35:03.634 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-04 10:35:03.636 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@49dd4f8e
2025-08-04 10:35:03.880 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:35:03.880 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 10:35:03.892 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2025-08-04 10:35:03.895 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:35:03.895 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 10:35:03.899 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:03.899 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:03.899 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:03.899 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:03.899 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:03.899 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-08-04 10:35:03.976 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 10:35:03.977 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Starting...
2025-08-04 10:35:03.977 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-10 - Added connection conn90: url=jdbc:h2:mem:testdb user=SA
2025-08-04 10:35:03.977 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Start completed.
2025-08-04 10:35:03.978 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 10:35:04.026 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:35:04.027 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:35:04.027 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:35:04.027 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:35:04.027 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:35:04.027 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:35:04.027 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 10:35:04.028 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 10:35:04.029 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 10:35:04.029 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 10:35:04.030 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 10:35:04.031 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 10:35:04.033 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 10:35:04.033 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 10:35:04.034 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 10:35:04.035 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:35:04.036 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:35:04.037 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:35:04.164 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 10:35:04.251 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 10:35:04.288 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 10:35:04.386 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 10:35:04.448 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 10:35:04.509 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 10:35:04.518 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 10:35:04.604 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 10:35:04.619 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 10:35:04.619 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 10:35:04.619 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 10:35:04.619 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 10:35:04.620 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 10:35:04.634 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 1.034 seconds (process running for 40.999)
2025-08-04 10:35:04.637 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 10:35:04.640 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 10:35:04.643 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 10:35:04.644 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 10:35:05.003 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.004 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.006 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.007 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.008 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.009 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.010 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.012 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.013 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.013 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.014 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.015 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.020 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.023 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.025 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.027 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.029 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.031 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.033 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.036 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.037 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.038 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.039 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.040 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.041 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.041 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.042 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.042 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.043 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.043 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.043 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.044 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.045 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.046 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.047 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.047 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.048 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.048 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.049 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.049 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.050 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.051 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.054 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:05.056 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:05.058 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:05.060 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.062 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.063 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.063 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.064 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:05.065 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:05.066 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:05.066 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.067 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.068 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.068 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.069 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:05.070 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:05.070 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:05.071 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.071 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.071 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.073 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.074 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:05.075 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:05.076 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:05.077 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.078 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.079 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.080 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.081 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:05.083 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:05.084 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:05.085 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:05.086 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.087 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.089 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.090 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.090 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.093 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 10:35:05.096 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 10:35:05.099 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 10:35:05.103 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 10:35:05.109 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 10:35:05.113 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 10:35:05.115 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 10:35:05.119 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 10:35:05.121 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.125 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 10:35:05.125 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.127 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 10:35:05.128 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.128 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.129 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.129 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.129 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.131 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:05.135 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:05.137 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:05.138 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.139 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:05.139 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.141 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 10:35:05.142 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:05.142 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.143 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:05.143 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.144 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:05.144 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.158 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:05.164 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.166 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.173 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 10:35:05.175 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 10:35:05.176 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.176 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.177 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.177 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.177 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.178 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.183 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:05.189 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.restaurante_id,
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco 
    from
        produtos p1_0 
    where
        p1_0.restaurante_id=?
2025-08-04 10:35:05.204 [main] DEBUG [] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-04 10:35:05.206 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.214 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-04 10:35:05.215 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:35:05.218 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-04 10:35:05.218 [main] DEBUG [963485902a40415c] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-04 10:35:05.224 [main] DEBUG [963485902a40415c] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=1, numeroPedido='PEDIDO20250729', dataPedido='2025-08-04T10:35:05.206804' (truncated)...]
2025-08-04 10:35:05.280 [main] DEBUG [963485902a40415c] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 10:35:05.281 [main] DEBUG [963485902a40415c] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 10:35:05.282 [main] DEBUG [963485902a40415c] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:05.284 [main] DEBUG [963485902a40415c] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:05.285 [main] DEBUG [963485902a40415c] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:05.287 [main] DEBUG [963485902a40415c] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.304 [main] DEBUG [963485902a40415c] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:05.305 [main] DEBUG [963485902a40415c] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-04 10:35:05.307 [main] DEBUG [963485902a40415c] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 10:35:05.308 [main] DEBUG [963485902a40415c] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@5d570f2a]
2025-08-04 10:35:05.318 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@49dd4f8e, started on Mon Aug 04 10:35:03 BRT 2025
2025-08-04 10:35:05.323 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:35:05.323 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:35:05.323 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:35:05.323 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:35:05.324 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:35:05.325 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:35:05.325 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:35:05.326 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Shutdown initiated...
2025-08-04 10:35:05.327 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Shutdown completed.
2025-08-04 10:35:05.329 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 10:35:05.366 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 22628 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 10:35:05.366 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 10:35:05.366 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-04 10:35:05.368 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@2ee5461b
2025-08-04 10:35:05.601 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:35:05.601 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 10:35:05.617 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2025-08-04 10:35:05.619 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:35:05.620 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 10:35:05.625 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:05.626 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:05.626 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:05.626 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:05.626 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:05.626 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-08-04 10:35:05.726 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 10:35:05.726 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-11 - Starting...
2025-08-04 10:35:05.728 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-11 - Added connection conn100: url=jdbc:h2:mem:testdb user=SA
2025-08-04 10:35:05.728 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-11 - Start completed.
2025-08-04 10:35:05.728 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 10:35:05.793 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:35:05.793 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:35:05.793 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:35:05.793 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:35:05.794 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:35:05.794 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:35:05.794 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 10:35:05.796 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 10:35:05.797 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 10:35:05.798 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 10:35:05.799 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 10:35:05.799 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 10:35:05.800 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 10:35:05.801 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 10:35:05.802 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 10:35:05.803 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:35:05.804 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:35:05.806 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:35:05.958 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 10:35:06.094 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 10:35:06.132 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 10:35:06.190 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 10:35:06.231 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 10:35:06.269 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 10:35:06.278 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 10:35:06.357 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 10:35:06.369 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 10:35:06.370 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 10:35:06.370 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 10:35:06.370 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 10:35:06.370 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-08-04 10:35:06.388 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 1.058 seconds (process running for 42.751)
2025-08-04 10:35:06.391 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 10:35:06.393 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 10:35:06.396 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 10:35:06.397 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 10:35:06.756 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.758 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.758 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.758 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.759 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.759 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.761 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.761 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.761 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.763 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.763 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.763 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.765 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.766 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.767 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.767 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.768 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.769 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.770 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.773 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.773 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.774 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.775 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.776 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.777 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.777 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.778 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.778 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.779 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.779 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.780 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.780 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.780 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.781 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.781 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.781 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.782 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.782 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.782 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.782 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.783 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.783 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.785 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:06.788 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:06.788 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:06.789 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.790 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.791 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.791 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.792 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:06.793 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:06.794 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:06.795 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.796 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.796 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.797 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.798 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:06.799 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:06.799 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:06.800 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.800 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.801 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.802 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.803 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:06.804 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:06.805 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:06.805 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.806 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.806 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.807 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.808 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:06.808 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:06.809 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:06.809 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:06.809 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.810 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.811 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.811 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.812 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.814 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 10:35:06.817 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 10:35:06.822 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 10:35:06.824 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 10:35:06.826 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 10:35:06.828 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 10:35:06.830 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 10:35:06.833 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 10:35:06.835 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.838 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 10:35:06.838 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.840 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 10:35:06.841 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.841 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.842 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.842 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.842 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.845 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:06.856 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:06.857 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:06.858 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.858 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:06.858 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.860 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 10:35:06.861 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:06.862 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.862 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:06.862 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.862 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:06.862 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.866 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:06.871 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.873 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:06.880 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 10:35:06.883 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 10:35:06.885 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.886 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.886 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.886 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.887 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.887 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.892 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-04 10:35:06.893 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:35:06.894 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-04 10:35:06.894 [main] DEBUG [28b8855dcc4048ae] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-04 10:35:06.898 [main] DEBUG [28b8855dcc4048ae] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=null, numeroPedido='null', dataPedido='null', valorTotal=null, observacoe (truncated)...]
2025-08-04 10:35:06.921 [main] DEBUG [28b8855dcc4048ae] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException, WebRequest)
2025-08-04 10:35:06.923 [main] DEBUG [28b8855dcc4048ae] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 10:35:06.923 [main] DEBUG [28b8855dcc4048ae] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@77e807c9]
2025-08-04 10:35:06.924 [main] DEBUG [28b8855dcc4048ae] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.deliverytech.delivery.dto.response.ApiResponseWrapper<com.deliverytech.delivery.dto.response.PedidoResponseDTO>> com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO) with 9 errors: [Field error in object 'pedidoRequestDTO' on field 'restauranteId': rejected value [null]; codes [NotNull.pedidoRequestDTO.restauranteId,NotNull.restauranteId,NotNull.java.lang.Long,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.restauranteId,restauranteId]; arguments []; default message [restauranteId]]; default message [O restaurante é obrigatório]] [Field error in object 'pedidoRequestDTO' on field 'cep': rejected value [null]; codes [NotBlank.pedidoRequestDTO.cep,NotBlank.cep,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.cep,cep]; arguments []; default message [cep]]; default message [CEP é obrigatório]] [Field error in object 'pedidoRequestDTO' on field 'cep': rejected value [null]; codes [ValidCEP.pedidoRequestDTO.cep,ValidCEP.cep,ValidCEP.java.lang.String,ValidCEP]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.cep,cep]; arguments []; default message [cep]]; default message [CEP deve ter formato válido (00000-000 ou 00000000)]] [Field error in object 'pedidoRequestDTO' on field 'clienteId': rejected value [null]; codes [NotNull.pedidoRequestDTO.clienteId,NotNull.clienteId,NotNull.java.lang.Long,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.clienteId,clienteId]; arguments []; default message [clienteId]]; default message [O status do pedido é obrigatório]] [Field error in object 'pedidoRequestDTO' on field 'valorTotal': rejected value [null]; codes [NotNull.pedidoRequestDTO.valorTotal,NotNull.valorTotal,NotNull.java.math.BigDecimal,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.valorTotal,valorTotal]; arguments []; default message [valorTotal]]; default message [O valor do pedido é obrigatório]] [Field error in object 'pedidoRequestDTO' on field 'dataPedido': rejected value [null]; codes [NotNull.pedidoRequestDTO.dataPedido,NotNull.dataPedido,NotNull.java.time.LocalDateTime,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.dataPedido,dataPedido]; arguments []; default message [dataPedido]]; default message [A data do pedido é obrigatória]] [Field error in object 'pedidoRequestDTO' on field 'formaPagamento': rejected value [null]; codes [NotBlank.pedidoRequestDTO.formaPagamento,NotBlank.formaPagamento,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.formaPagamento,formaPagamento]; arguments []; default message [formaPagamento]]; default message [Forma de pagamento é obrigatória]] [Field error in object 'pedidoRequestDTO' on field 'clienteId': rejected value [null]; codes [NotNull.pedidoRequestDTO.clienteId,NotNull.clienteId,NotNull.java.lang.Long,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.clienteId,clienteId]; arguments []; default message [clienteId]]; default message [O id do cliente é obrigatório]] [Field error in object 'pedidoRequestDTO' on field 'numeroPedido': rejected value [null]; codes [NotNull.pedidoRequestDTO.numeroPedido,NotNull.numeroPedido,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.numeroPedido,numeroPedido]; arguments []; default message [numeroPedido]]; default message [O número do pedido é obrigatório]] ]
2025-08-04 10:35:06.928 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/pedidos/clientes/1/pedidos
2025-08-04 10:35:06.929 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:35:06.930 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/pedidos/clientes/1/pedidos
2025-08-04 10:35:06.931 [main] DEBUG [db6bb648b0404f38] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#buscarPedidosPorCliente(Long)
2025-08-04 10:35:06.931 [main] DEBUG [db6bb648b0404f38] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.buscarPedidosPorCliente(java.lang.Long); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 10:35:06.932 [main] DEBUG [db6bb648b0404f38] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.buscarPedidosPorCliente(java.lang.Long); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 10:35:06.933 [main] DEBUG [db6bb648b0404f38] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:06.934 [main] DEBUG [db6bb648b0404f38] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:06.935 [main] DEBUG [db6bb648b0404f38] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:06.940 [main] DEBUG [db6bb648b0404f38] org.hibernate.SQL - 
    select
        i1_0.pedido_id,
        i1_0.id,
        i1_0.preco_unitario,
        p2_0.id,
        p2_0.categoria,
        p2_0.descricao,
        p2_0.disponivel,
        p2_0.estoque,
        p2_0.nome,
        p2_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos,
        i1_0.quantidade,
        i1_0.subtotal 
    from
        itens_pedido i1_0 
    left join
        produtos p2_0 
            on p2_0.id=i1_0.produto_id 
    left join
        restaurantes r1_0 
            on r1_0.id=p2_0.restaurante_id 
    where
        i1_0.pedido_id=?
2025-08-04 10:35:06.943 [main] DEBUG [db6bb648b0404f38] org.hibernate.SQL - 
    select
        i1_0.pedido_id,
        i1_0.id,
        i1_0.preco_unitario,
        p2_0.id,
        p2_0.categoria,
        p2_0.descricao,
        p2_0.disponivel,
        p2_0.estoque,
        p2_0.nome,
        p2_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos,
        i1_0.quantidade,
        i1_0.subtotal 
    from
        itens_pedido i1_0 
    left join
        produtos p2_0 
            on p2_0.id=i1_0.produto_id 
    left join
        restaurantes r1_0 
            on r1_0.id=p2_0.restaurante_id 
    where
        i1_0.pedido_id=?
2025-08-04 10:35:06.947 [main] DEBUG [db6bb648b0404f38] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 10:35:06.948 [main] DEBUG [db6bb648b0404f38] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@4c53d6e0]
2025-08-04 10:35:06.958 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@2ee5461b, started on Mon Aug 04 10:35:05 BRT 2025
2025-08-04 10:35:06.963 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:35:06.963 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:35:06.964 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:35:06.964 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:35:06.964 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:35:06.964 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:35:06.964 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:35:06.965 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-11 - Shutdown initiated...
2025-08-04 10:35:06.966 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-11 - Shutdown completed.
2025-08-04 10:35:06.969 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 10:35:06.999 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 22628 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 10:35:06.999 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 10:35:06.999 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-04 10:35:07.001 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6209f577
2025-08-04 10:35:07.229 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:35:07.229 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 10:35:07.243 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2025-08-04 10:35:07.245 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:35:07.245 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 10:35:07.249 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:07.249 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:07.249 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:07.249 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:07.249 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:07.249 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-08-04 10:35:07.323 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 10:35:07.324 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-12 - Starting...
2025-08-04 10:35:07.324 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-12 - Added connection conn110: url=jdbc:h2:mem:testdb user=SA
2025-08-04 10:35:07.324 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-12 - Start completed.
2025-08-04 10:35:07.325 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 10:35:07.370 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:35:07.370 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:35:07.370 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:35:07.371 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:35:07.371 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:35:07.371 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:35:07.371 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 10:35:07.372 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 10:35:07.372 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 10:35:07.373 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 10:35:07.373 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 10:35:07.374 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 10:35:07.374 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 10:35:07.375 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 10:35:07.376 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 10:35:07.376 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:35:07.377 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:35:07.378 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:35:07.490 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 10:35:07.590 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 10:35:07.622 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 10:35:07.680 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 10:35:07.726 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 10:35:07.767 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 10:35:07.776 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 10:35:07.869 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 10:35:07.885 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 10:35:07.885 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 10:35:07.885 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 10:35:07.885 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 10:35:07.886 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 10:35:07.918 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 0.949 seconds (process running for 44.282)
2025-08-04 10:35:07.923 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 10:35:07.929 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 10:35:07.931 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 10:35:07.935 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 10:35:08.330 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.332 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.332 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.333 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.333 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.333 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.335 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.336 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.337 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.337 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.337 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.338 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.340 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.341 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.341 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.341 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.342 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.342 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.343 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.346 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.347 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.348 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.348 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.348 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.350 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.351 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.351 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.352 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.352 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.352 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.352 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.352 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.353 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.353 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.354 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.354 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.354 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.354 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.355 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.355 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.355 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.356 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.357 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:08.358 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:08.359 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:08.359 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.360 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.361 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.361 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.364 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:08.364 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:08.365 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:08.365 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.366 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.367 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.367 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.368 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:08.369 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:08.370 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:08.370 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.371 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.372 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.372 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.372 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:08.374 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:08.374 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:08.375 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.376 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.377 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.377 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.379 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:08.380 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:08.381 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:08.382 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:08.383 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.384 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.385 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.385 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.386 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.388 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 10:35:08.390 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 10:35:08.391 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 10:35:08.394 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 10:35:08.397 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 10:35:08.399 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 10:35:08.401 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 10:35:08.403 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 10:35:08.404 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.406 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 10:35:08.406 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.408 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 10:35:08.408 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.409 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.410 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.410 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.410 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.413 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:08.415 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:08.416 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:08.416 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.416 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:08.417 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.419 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 10:35:08.419 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:08.420 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.420 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:08.420 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.420 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:08.421 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.423 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:08.427 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.428 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.433 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 10:35:08.436 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 10:35:08.436 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.437 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.437 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.437 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.438 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.438 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.439 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:08.440 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.restaurante_id,
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco 
    from
        produtos p1_0 
    where
        p1_0.restaurante_id=?
2025-08-04 10:35:08.441 [main] DEBUG [] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-04 10:35:08.442 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.447 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-04 10:35:08.448 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:35:08.449 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-04 10:35:08.449 [main] DEBUG [2978233065a04a45] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-04 10:35:08.451 [main] DEBUG [2978233065a04a45] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=1, numeroPedido='PEDIDO20250729', dataPedido='2025-08-04T10:35:08.4433601 (truncated)...]
2025-08-04 10:35:08.470 [main] DEBUG [2978233065a04a45] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 10:35:08.471 [main] DEBUG [2978233065a04a45] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 10:35:08.471 [main] DEBUG [2978233065a04a45] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:08.474 [main] DEBUG [2978233065a04a45] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:08.474 [main] DEBUG [2978233065a04a45] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:08.476 [main] DEBUG [2978233065a04a45] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.481 [main] DEBUG [2978233065a04a45] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:08.482 [main] DEBUG [2978233065a04a45] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-04 10:35:08.486 [main] DEBUG [2978233065a04a45] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 10:35:08.486 [main] DEBUG [2978233065a04a45] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@11cb8dd6]
2025-08-04 10:35:08.491 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing PATCH /api/pedidos/6/status
2025-08-04 10:35:08.493 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:35:08.493 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured PATCH /api/pedidos/6/status
2025-08-04 10:35:08.494 [main] DEBUG [5a9e142844a94344] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#atualizarStatus(Long, StatusPedido)
2025-08-04 10:35:08.495 [main] DEBUG [5a9e142844a94344] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [CONFIRMADO]
2025-08-04 10:35:08.501 [main] DEBUG [5a9e142844a94344] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.atualizarStatus(java.lang.Long,com.deliverytech.delivery.enums.StatusPedido); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 10:35:08.502 [main] DEBUG [5a9e142844a94344] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.atualizarStatus(java.lang.Long,com.deliverytech.delivery.enums.StatusPedido); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 10:35:08.503 [main] DEBUG [5a9e142844a94344] org.hibernate.SQL - 
    select
        p1_0.id,
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:08.506 [main] DEBUG [5a9e142844a94344] org.hibernate.SQL - 
    select
        i1_0.pedido_id,
        i1_0.id,
        i1_0.preco_unitario,
        p2_0.id,
        p2_0.categoria,
        p2_0.descricao,
        p2_0.disponivel,
        p2_0.estoque,
        p2_0.nome,
        p2_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos,
        i1_0.quantidade,
        i1_0.subtotal 
    from
        itens_pedido i1_0 
    left join
        produtos p2_0 
            on p2_0.id=i1_0.produto_id 
    left join
        restaurantes r1_0 
            on r1_0.id=p2_0.restaurante_id 
    where
        i1_0.pedido_id=?
2025-08-04 10:35:08.508 [main] DEBUG [5a9e142844a94344] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Pedido */update pedidos 
    set
        cliente_id=?,
        data_pedido=?,
        endereco_entrega=?,
        numero_pedido=?,
        observacoes=?,
        restaurante_id=?,
        status=?,
        subtotal=?,
        taxa_entrega=?,
        valor_total=? 
    where
        id=?
2025-08-04 10:35:08.508 [main] DEBUG [5a9e142844a94344] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 10:35:08.509 [main] DEBUG [5a9e142844a94344] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@2388dc1c]
2025-08-04 10:35:08.513 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@6209f577, started on Mon Aug 04 10:35:07 BRT 2025
2025-08-04 10:35:08.516 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:35:08.516 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:35:08.517 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:35:08.517 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:35:08.518 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:35:08.519 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:35:08.519 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:35:08.519 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-12 - Shutdown initiated...
2025-08-04 10:35:08.520 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-12 - Shutdown completed.
2025-08-04 10:35:08.523 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 10:35:08.548 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 22628 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 10:35:08.548 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 10:35:08.548 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-04 10:35:08.549 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@63c1ab86
2025-08-04 10:35:08.759 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:35:08.760 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 10:35:08.773 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2025-08-04 10:35:08.774 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:35:08.774 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 10:35:08.779 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:08.779 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:08.779 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:08.779 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:08.779 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:08.779 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-08-04 10:35:08.855 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 10:35:08.856 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-13 - Starting...
2025-08-04 10:35:08.857 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-13 - Added connection conn120: url=jdbc:h2:mem:testdb user=SA
2025-08-04 10:35:08.857 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-13 - Start completed.
2025-08-04 10:35:08.858 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 10:35:08.903 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:35:08.904 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:35:08.904 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:35:08.904 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:35:08.904 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:35:08.904 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:35:08.905 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 10:35:08.906 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 10:35:08.906 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 10:35:08.907 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 10:35:08.907 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 10:35:08.907 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 10:35:08.908 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 10:35:08.909 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 10:35:08.910 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 10:35:08.910 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:35:08.911 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:35:08.912 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:35:09.032 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 10:35:09.120 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 10:35:09.152 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 10:35:09.202 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 10:35:09.245 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 10:35:09.295 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 10:35:09.305 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 10:35:09.400 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 10:35:09.414 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 10:35:09.414 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 10:35:09.414 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 10:35:09.414 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 10:35:09.415 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 10:35:09.429 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 0.907 seconds (process running for 45.793)
2025-08-04 10:35:09.431 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 10:35:09.433 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 10:35:09.436 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 10:35:09.437 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 10:35:09.794 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.795 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.796 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.796 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.797 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.797 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.798 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.799 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.799 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.799 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.799 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.800 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.801 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.802 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.803 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.804 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.804 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.804 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.805 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.806 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.807 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.807 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.808 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.808 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.809 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.809 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.810 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.810 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.810 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.811 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.811 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.811 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.811 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.811 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.813 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.813 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.813 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.813 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.814 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.814 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.814 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.814 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.816 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:09.818 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:09.819 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:09.820 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.821 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.821 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.822 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.823 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:09.823 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:09.824 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:09.824 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.825 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.825 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.826 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.827 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:09.828 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:09.828 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:09.829 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.829 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.830 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.830 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.831 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:09.831 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:09.831 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:09.832 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.832 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.832 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.832 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.834 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:09.835 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:09.836 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:09.836 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:09.836 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.837 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.838 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.838 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.839 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.841 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 10:35:09.842 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 10:35:09.845 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 10:35:09.846 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 10:35:09.848 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 10:35:09.850 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 10:35:09.852 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 10:35:09.854 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 10:35:09.855 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.857 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 10:35:09.857 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.860 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 10:35:09.860 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.860 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.861 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.861 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.861 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.863 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:09.865 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:09.865 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:09.866 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.866 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:09.866 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.868 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 10:35:09.869 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:09.869 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.869 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:09.870 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.870 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:09.870 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.871 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:09.876 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.877 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:09.881 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 10:35:09.885 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 10:35:09.885 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.885 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.887 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.887 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.887 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.887 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.888 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.892 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-04 10:35:09.893 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:35:09.894 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-04 10:35:09.894 [main] DEBUG [e448af4ab4a94b0b] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-04 10:35:09.897 [main] DEBUG [e448af4ab4a94b0b] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=1, numeroPedido='PEDIDO20250729', dataPedido='2025-08-04T10:35:09.8880099 (truncated)...]
2025-08-04 10:35:09.914 [main] DEBUG [e448af4ab4a94b0b] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 10:35:09.916 [main] DEBUG [e448af4ab4a94b0b] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 10:35:09.917 [main] DEBUG [e448af4ab4a94b0b] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:09.918 [main] DEBUG [e448af4ab4a94b0b] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:09.919 [main] DEBUG [e448af4ab4a94b0b] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:09.921 [main] DEBUG [e448af4ab4a94b0b] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleEntityNotFoundException(EntityNotFoundException, WebRequest)
2025-08-04 10:35:09.923 [main] DEBUG [e448af4ab4a94b0b] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 10:35:09.923 [main] DEBUG [e448af4ab4a94b0b] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@7d196a81]
2025-08-04 10:35:09.924 [main] DEBUG [e448af4ab4a94b0b] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.deliverytech.delivery.exceptions.EntityNotFoundException: Produto não encontrado: 999]
2025-08-04 10:35:09.929 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@63c1ab86, started on Mon Aug 04 10:35:08 BRT 2025
2025-08-04 10:35:09.933 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:35:09.934 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:35:09.935 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:35:09.935 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:35:09.936 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:35:09.936 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:35:09.937 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:35:09.937 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-13 - Shutdown initiated...
2025-08-04 10:35:09.938 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-13 - Shutdown completed.
2025-08-04 10:35:09.941 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 10:35:09.970 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 22628 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 10:35:09.970 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 10:35:09.970 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-04 10:35:09.971 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@713411ee
2025-08-04 10:35:10.226 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:35:10.226 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 10:35:10.241 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2025-08-04 10:35:10.242 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:35:10.242 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 10:35:10.248 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:10.248 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:10.249 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:10.249 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:10.249 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:10.249 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-08-04 10:35:10.320 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 10:35:10.321 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-14 - Starting...
2025-08-04 10:35:10.321 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-14 - Added connection conn130: url=jdbc:h2:mem:testdb user=SA
2025-08-04 10:35:10.321 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-14 - Start completed.
2025-08-04 10:35:10.321 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 10:35:10.401 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:35:10.403 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:35:10.403 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:35:10.403 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:35:10.404 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:35:10.404 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:35:10.404 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 10:35:10.407 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 10:35:10.408 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 10:35:10.409 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 10:35:10.410 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 10:35:10.411 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 10:35:10.413 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 10:35:10.415 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 10:35:10.417 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 10:35:10.420 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:35:10.421 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:35:10.423 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:35:10.600 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 10:35:10.688 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 10:35:10.723 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 10:35:10.776 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 10:35:10.826 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 10:35:10.866 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 10:35:10.874 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 10:35:10.960 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 10:35:10.971 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 10:35:10.971 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 10:35:10.971 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 10:35:10.971 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 10:35:10.973 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-08-04 10:35:10.988 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 1.046 seconds (process running for 47.351)
2025-08-04 10:35:10.990 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 10:35:10.993 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 10:35:10.995 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 10:35:10.997 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 10:35:11.356 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.357 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.357 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.358 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.358 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.358 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.360 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.360 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.360 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.360 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.360 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.361 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.366 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.366 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.367 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.368 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.368 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.369 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.370 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.372 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.373 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.373 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.374 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.375 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.376 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.377 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.378 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.378 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.379 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.379 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.379 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.379 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.380 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.380 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.380 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.380 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.381 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.381 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.381 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.381 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.382 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.382 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.383 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:11.386 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:11.387 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:11.388 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.389 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.390 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.391 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.392 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:11.395 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:11.397 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:11.397 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.398 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.399 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.399 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.400 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:11.401 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:11.402 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:11.404 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.405 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.406 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.406 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.407 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:11.408 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:11.409 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:11.410 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.412 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.412 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.413 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.414 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:11.416 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:11.417 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:11.419 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:11.421 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.422 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.423 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.424 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.425 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.430 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 10:35:11.432 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 10:35:11.436 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 10:35:11.439 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 10:35:11.441 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 10:35:11.444 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 10:35:11.446 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 10:35:11.447 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 10:35:11.448 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.449 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 10:35:11.450 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.452 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 10:35:11.453 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.454 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.454 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.454 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.454 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.457 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:11.460 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:11.461 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:11.461 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.461 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:11.461 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.464 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 10:35:11.465 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:11.465 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.465 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:11.466 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.466 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:11.466 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.469 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:11.475 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.477 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:11.482 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 10:35:11.485 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 10:35:11.486 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.486 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.486 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.487 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.487 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.487 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.488 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:11.489 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.restaurante_id,
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco 
    from
        produtos p1_0 
    where
        p1_0.restaurante_id=?
2025-08-04 10:35:11.490 [main] DEBUG [] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-04 10:35:11.491 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.497 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-04 10:35:11.498 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:35:11.499 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-04 10:35:11.499 [main] DEBUG [23f75fad11814349] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-04 10:35:11.502 [main] DEBUG [23f75fad11814349] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=1, numeroPedido='PEDIDO20250729', dataPedido='2025-08-04T10:35:11.4926038 (truncated)...]
2025-08-04 10:35:11.520 [main] DEBUG [23f75fad11814349] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 10:35:11.521 [main] DEBUG [23f75fad11814349] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 10:35:11.523 [main] DEBUG [23f75fad11814349] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:11.523 [main] DEBUG [23f75fad11814349] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:11.524 [main] DEBUG [23f75fad11814349] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:11.525 [main] DEBUG [23f75fad11814349] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleBusinessException(Exception, WebRequest)
2025-08-04 10:35:11.527 [main] DEBUG [23f75fad11814349] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 10:35:11.527 [main] DEBUG [23f75fad11814349] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@71456d8b]
2025-08-04 10:35:11.527 [main] DEBUG [23f75fad11814349] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.deliverytech.delivery.exceptions.BusinessException: Estoque insuficiente para o produto Pizza Margherita. Estoque atual: 5, Quantidade solicitada: 10]
2025-08-04 10:35:11.530 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:11.533 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@713411ee, started on Mon Aug 04 10:35:09 BRT 2025
2025-08-04 10:35:11.539 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:35:11.539 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:35:11.540 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:35:11.540 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:35:11.540 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:35:11.540 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:35:11.540 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:35:11.541 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-14 - Shutdown initiated...
2025-08-04 10:35:11.542 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-14 - Shutdown completed.
2025-08-04 10:35:11.544 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 10:35:11.572 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 22628 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 10:35:11.572 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 10:35:11.572 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-04 10:35:11.574 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@3a3671ca
2025-08-04 10:35:11.863 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:35:11.863 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 10:35:11.879 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 5 JPA repository interfaces.
2025-08-04 10:35:11.880 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:35:11.881 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 10:35:11.886 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:11.886 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:11.886 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:11.886 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:11.886 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:11.886 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-08-04 10:35:11.988 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 10:35:11.989 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-15 - Starting...
2025-08-04 10:35:11.990 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-15 - Added connection conn140: url=jdbc:h2:mem:testdb user=SA
2025-08-04 10:35:11.990 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-15 - Start completed.
2025-08-04 10:35:11.990 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 10:35:12.044 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:35:12.044 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:35:12.044 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:35:12.044 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:35:12.044 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:35:12.044 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:35:12.045 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 10:35:12.045 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 10:35:12.046 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 10:35:12.046 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 10:35:12.047 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 10:35:12.047 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 10:35:12.048 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 10:35:12.048 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 10:35:12.050 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 10:35:12.051 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:35:12.053 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:35:12.055 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:35:12.173 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 10:35:12.269 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 10:35:12.305 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 10:35:12.362 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 10:35:12.408 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 10:35:12.449 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 10:35:12.458 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 10:35:12.550 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 10:35:12.565 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 10:35:12.565 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 10:35:12.565 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 10:35:12.565 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 10:35:12.566 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 10:35:12.579 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 1.035 seconds (process running for 48.944)
2025-08-04 10:35:12.581 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 10:35:12.585 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 10:35:12.587 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 10:35:12.588 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 10:35:12.950 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.951 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.951 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.951 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.952 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.952 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.954 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.954 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.955 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.955 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.956 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.956 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.957 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.958 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.958 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.959 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.959 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.959 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.960 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:12.961 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:12.961 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:12.962 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:12.962 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:12.963 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:12.964 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.964 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.965 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.965 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.965 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.965 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.966 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.966 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.966 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.966 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.967 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.967 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.967 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.967 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.968 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.968 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.968 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.968 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.970 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:12.971 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:12.972 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:12.972 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:12.973 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.974 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.974 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.976 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:12.977 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:12.977 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:12.978 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:12.978 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.979 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.979 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.980 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:12.981 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:12.981 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:12.981 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:12.982 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.982 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.982 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.984 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:12.985 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:12.986 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:12.987 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:12.988 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.989 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.989 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.990 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:12.991 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:12.991 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:12.992 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:12.992 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:12.993 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.994 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.994 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.995 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:12.997 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 10:35:12.999 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 10:35:13.002 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 10:35:13.005 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 10:35:13.006 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 10:35:13.008 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 10:35:13.010 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 10:35:13.011 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 10:35:13.012 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:13.014 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 10:35:13.014 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:13.016 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 10:35:13.017 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:13.018 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:13.018 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:13.019 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:13.019 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:13.021 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:13.023 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:13.023 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:13.024 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:13.024 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:13.024 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:13.026 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 10:35:13.027 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:13.027 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:13.027 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:13.028 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:13.028 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:13.028 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:13.030 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:13.035 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:13.037 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:13.041 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 10:35:13.043 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 10:35:13.043 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:13.043 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:13.044 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:13.044 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:13.044 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:13.044 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:13.045 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:13.046 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.restaurante_id,
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco 
    from
        produtos p1_0 
    where
        p1_0.restaurante_id=?
2025-08-04 10:35:13.047 [main] DEBUG [] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-04 10:35:13.048 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:13.053 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-04 10:35:13.053 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:35:13.054 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-04 10:35:13.055 [main] DEBUG [7eb9628ddfff43bc] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-04 10:35:13.057 [main] DEBUG [7eb9628ddfff43bc] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=1, numeroPedido='PEDIDO20250729', dataPedido='2025-08-04T10:35:13.0488179 (truncated)...]
2025-08-04 10:35:13.075 [main] DEBUG [7eb9628ddfff43bc] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 10:35:13.076 [main] DEBUG [7eb9628ddfff43bc] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 10:35:13.077 [main] DEBUG [7eb9628ddfff43bc] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:13.078 [main] DEBUG [7eb9628ddfff43bc] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:13.078 [main] DEBUG [7eb9628ddfff43bc] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:13.081 [main] DEBUG [7eb9628ddfff43bc] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:13.086 [main] DEBUG [7eb9628ddfff43bc] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:13.087 [main] DEBUG [7eb9628ddfff43bc] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:13.088 [main] DEBUG [7eb9628ddfff43bc] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-04 10:35:13.090 [main] DEBUG [7eb9628ddfff43bc] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 10:35:13.091 [main] DEBUG [7eb9628ddfff43bc] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@aa5ae24]
2025-08-04 10:35:13.100 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@3a3671ca, started on Mon Aug 04 10:35:11 BRT 2025
2025-08-04 10:35:13.106 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:35:13.106 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:35:13.106 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:35:13.107 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:35:13.107 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:35:13.107 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:35:13.107 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:35:13.107 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-15 - Shutdown initiated...
2025-08-04 10:35:13.108 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-15 - Shutdown completed.
2025-08-04 10:35:13.115 [main] INFO  [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.deliverytech.delivery.controller.RestauranteControllerITTest]: RestauranteControllerITTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 10:35:13.118 [main] INFO  [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.deliverytech.delivery.DeliveryApiApplication for test class com.deliverytech.delivery.controller.RestauranteControllerITTest
2025-08-04 10:35:13.122 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 10:35:13.160 [main] INFO  [] c.d.d.c.RestauranteControllerITTest - Starting RestauranteControllerITTest using Java 21.0.1 with PID 22628 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 10:35:13.160 [main] DEBUG [] c.d.d.c.RestauranteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 10:35:13.160 [main] INFO  [] c.d.d.c.RestauranteControllerITTest - The following 1 profile is active: "test"
2025-08-04 10:35:13.161 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@3fbb4885
2025-08-04 10:35:13.389 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:35:13.389 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 10:35:13.403 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2025-08-04 10:35:13.404 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:35:13.405 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 10:35:13.409 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:13.409 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:13.409 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:13.409 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:13.409 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:13.409 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-08-04 10:35:13.490 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 10:35:13.491 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-16 - Starting...
2025-08-04 10:35:13.492 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-16 - Added connection conn150: url=jdbc:h2:mem:testdb user=SA
2025-08-04 10:35:13.492 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-16 - Start completed.
2025-08-04 10:35:13.492 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 10:35:13.537 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:35:13.537 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:35:13.537 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:35:13.538 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:35:13.538 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:35:13.538 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:35:13.538 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 10:35:13.538 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 10:35:13.539 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 10:35:13.539 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 10:35:13.540 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 10:35:13.540 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 10:35:13.541 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 10:35:13.541 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 10:35:13.542 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 10:35:13.542 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:35:13.543 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:35:13.544 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:35:13.662 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 10:35:13.760 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 10:35:13.793 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 10:35:13.860 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 10:35:13.906 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 10:35:13.951 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 10:35:13.960 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 10:35:14.054 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 10:35:14.074 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 10:35:14.074 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 10:35:14.074 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 10:35:14.074 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 10:35:14.077 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
2025-08-04 10:35:14.095 [main] INFO  [] c.d.d.c.RestauranteControllerITTest - Started RestauranteControllerITTest in 0.973 seconds (process running for 50.46)
2025-08-04 10:35:14.098 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 10:35:14.100 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 10:35:14.101 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 10:35:14.104 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 10:35:14.468 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.470 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.471 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.472 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.474 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.475 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.478 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.479 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.480 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.481 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.482 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.484 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.489 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.491 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.493 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.495 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.497 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.499 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.504 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:14.505 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:14.507 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:14.508 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:14.510 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:14.511 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:14.514 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.516 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.517 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.519 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.519 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.520 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.520 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.521 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.521 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.521 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.522 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.522 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.522 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.522 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.523 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.524 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.524 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.524 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.527 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:14.531 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:14.532 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:14.535 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:14.537 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.538 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.539 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.541 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:14.542 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:14.546 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:14.547 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:14.548 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.549 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.550 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.552 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:14.553 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:14.554 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:14.556 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:14.558 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.560 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.561 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.563 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:14.565 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:14.567 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:14.570 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:14.572 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.573 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.576 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.578 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:14.580 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:14.581 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:14.582 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:14.583 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:14.586 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.588 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.589 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.591 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.594 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 10:35:14.597 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 10:35:14.600 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 10:35:14.603 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 10:35:14.607 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 10:35:14.610 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 10:35:14.613 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 10:35:14.616 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 10:35:14.618 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:14.622 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 10:35:14.623 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:14.627 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 10:35:14.628 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:14.629 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:14.629 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:14.630 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:14.630 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:14.633 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:14.637 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:14.638 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:14.638 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:14.639 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:14.639 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:14.641 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 10:35:14.642 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:14.642 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:14.642 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:14.643 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:14.643 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:14.644 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:14.646 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:14.669 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.678 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes?page=0&size=10
2025-08-04 10:35:14.680 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:35:14.680 [main] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 10:35:14.682 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes?page=0&size=10
2025-08-04 10:35:14.683 [main] DEBUG [79b737be49de4855] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#listarRestaurantesComFiltro(String, Boolean, Pageable)
2025-08-04 10:35:14.712 [main] DEBUG [79b737be49de4855] org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Restaurante r 
    WHERE
        (
            :categoria IS NULL 
            OR r.categoria = :categoria
        ) 
        AND (
            :ativo IS NULL 
            OR r.ativo = :ativo
        ) */ select
            r1_0.id,
            r1_0.ativo,
            r1_0.avaliacao,
            r1_0.categoria,
            r1_0.data_criacao,
            r1_0.endereco,
            r1_0.horario_funcionamento,
            r1_0.nome,
            r1_0.taxa_entrega,
            r1_0.telefone,
            r1_0.tempo_entrega_minutos 
        from
            restaurantes r1_0 
        where
            (
                ? is null 
                or r1_0.categoria=?
            ) 
            and (
                ? is null 
                or r1_0.ativo=?
            ) 
        fetch
            first ? rows only
2025-08-04 10:35:14.727 [main] DEBUG [79b737be49de4855] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 10:35:14.727 [main] DEBUG [79b737be49de4855] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.PagedResponseWrapper@74d8b347]
2025-08-04 10:35:14.754 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.758 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing PUT /api/restaurantes/8
2025-08-04 10:35:14.759 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:35:14.762 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured PUT /api/restaurantes/8
2025-08-04 10:35:14.765 [main] DEBUG [d44ad6a3531349c3] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#atualizarRestaurante(Long, RestauranteRequestDTO)
2025-08-04 10:35:14.772 [main] DEBUG [d44ad6a3531349c3] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RestauranteRequestDTO{ativo=true, nome='Pizza Express Atualizada', categoria='Italiana', endereco='R (truncated)...]
2025-08-04 10:35:14.815 [main] DEBUG [d44ad6a3531349c3] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.RestauranteController.atualizarRestaurante(java.lang.Long,com.deliverytech.delivery.dto.request.RestauranteRequestDTO); target is of class [com.deliverytech.delivery.controller.RestauranteController]
2025-08-04 10:35:14.827 [main] DEBUG [d44ad6a3531349c3] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.RestauranteController.atualizarRestaurante(java.lang.Long,com.deliverytech.delivery.dto.request.RestauranteRequestDTO); target is of class [com.deliverytech.delivery.controller.RestauranteController]
2025-08-04 10:35:14.860 [main] DEBUG [d44ad6a3531349c3] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 10:35:14.864 [main] DEBUG [d44ad6a3531349c3] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@530fc252]
2025-08-04 10:35:14.920 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:14.929 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes
2025-08-04 10:35:14.931 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:35:14.933 [main] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 10:35:14.938 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes
2025-08-04 10:35:14.940 [main] DEBUG [954caa5890234a51] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#listarRestaurantesComFiltro(String, Boolean, Pageable)
2025-08-04 10:35:14.948 [main] DEBUG [954caa5890234a51] org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Restaurante r 
    WHERE
        (
            :categoria IS NULL 
            OR r.categoria = :categoria
        ) 
        AND (
            :ativo IS NULL 
            OR r.ativo = :ativo
        ) */ select
            r1_0.id,
            r1_0.ativo,
            r1_0.avaliacao,
            r1_0.categoria,
            r1_0.data_criacao,
            r1_0.endereco,
            r1_0.horario_funcionamento,
            r1_0.nome,
            r1_0.taxa_entrega,
            r1_0.telefone,
            r1_0.tempo_entrega_minutos 
        from
            restaurantes r1_0 
        where
            (
                ? is null 
                or r1_0.categoria=?
            ) 
            and (
                ? is null 
                or r1_0.ativo=?
            ) 
        fetch
            first ? rows only
2025-08-04 10:35:14.956 [main] DEBUG [954caa5890234a51] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 10:35:14.956 [main] DEBUG [954caa5890234a51] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.PagedResponseWrapper@5af8c330]
2025-08-04 10:35:15.002 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:15.008 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes/categoria/Americana
2025-08-04 10:35:15.010 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:35:15.012 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes/categoria/Americana
2025-08-04 10:35:15.014 [main] DEBUG [9458a5bab3134b68] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#buscarRestaurantePorCategoria(String)
2025-08-04 10:35:15.028 [main] DEBUG [9458a5bab3134b68] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 10:35:15.032 [main] DEBUG [9458a5bab3134b68] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 10:35:15.032 [main] DEBUG [9458a5bab3134b68] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@642e3af5]
2025-08-04 10:35:15.070 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:15.072 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes/999
2025-08-04 10:35:15.072 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:35:15.076 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes/999
2025-08-04 10:35:15.077 [main] DEBUG [bc4461eae7634da9] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#buscarPorId(Long)
2025-08-04 10:35:15.080 [main] DEBUG [bc4461eae7634da9] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:15.084 [main] DEBUG [bc4461eae7634da9] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleEntityNotFoundException(EntityNotFoundException, WebRequest)
2025-08-04 10:35:15.087 [main] DEBUG [bc4461eae7634da9] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 10:35:15.088 [main] DEBUG [bc4461eae7634da9] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@4e82089b]
2025-08-04 10:35:15.088 [main] DEBUG [bc4461eae7634da9] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.deliverytech.delivery.exceptions.EntityNotFoundException: Restaurante não encontrado com ID: 999]
2025-08-04 10:35:15.108 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:15.111 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes/12
2025-08-04 10:35:15.114 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:35:15.116 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes/12
2025-08-04 10:35:15.118 [main] DEBUG [f83de5e36976436a] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#buscarPorId(Long)
2025-08-04 10:35:15.120 [main] DEBUG [f83de5e36976436a] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 10:35:15.120 [main] DEBUG [f83de5e36976436a] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@2aff2c6b]
2025-08-04 10:35:15.143 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:15.146 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing PATCH /api/restaurantes/13/status
2025-08-04 10:35:15.147 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:35:15.148 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured PATCH /api/restaurantes/13/status
2025-08-04 10:35:15.148 [main] DEBUG [56365c7c3cc54b38] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#ativarDesativarRestaurante(Long)
2025-08-04 10:35:15.151 [main] DEBUG [56365c7c3cc54b38] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 10:35:15.152 [main] DEBUG [56365c7c3cc54b38] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@f95dab4]
2025-08-04 10:35:15.165 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:15.170 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/restaurantes
2025-08-04 10:35:15.171 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:35:15.172 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/restaurantes
2025-08-04 10:35:15.172 [main] DEBUG [a5d95bcc71734590] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#cadastrarRestaurante(RestauranteRequestDTO)
2025-08-04 10:35:15.173 [main] DEBUG [a5d95bcc71734590] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RestauranteRequestDTO{ativo=true, nome='', categoria='Italiana', endereco='Rua das Flores, 123', tel (truncated)...]
2025-08-04 10:35:15.176 [main] DEBUG [a5d95bcc71734590] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException, WebRequest)
2025-08-04 10:35:15.177 [main] DEBUG [a5d95bcc71734590] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 10:35:15.177 [main] DEBUG [a5d95bcc71734590] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@3480a288]
2025-08-04 10:35:15.178 [main] DEBUG [a5d95bcc71734590] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.deliverytech.delivery.dto.response.ApiResponseWrapper<com.deliverytech.delivery.dto.response.RestauranteResponseDTO>> com.deliverytech.delivery.controller.RestauranteController.cadastrarRestaurante(com.deliverytech.delivery.dto.request.RestauranteRequestDTO) with 5 errors: [Field error in object 'restauranteRequestDTO' on field 'nome': rejected value []; codes [Size.restauranteRequestDTO.nome,Size.nome,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restauranteRequestDTO.nome,nome]; arguments []; default message [nome],100,3]; default message [O nome do restaurante deve ter entre 3 e 100 caracteres]] [Field error in object 'restauranteRequestDTO' on field 'nome': rejected value []; codes [Size.restauranteRequestDTO.nome,Size.nome,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restauranteRequestDTO.nome,nome]; arguments []; default message [nome],100,2]; default message [O nome do restaurante deve ter entre 3 e 100 caracteres]] [Field error in object 'restauranteRequestDTO' on field 'telefone': rejected value [123]; codes [ValidTelefone.restauranteRequestDTO.telefone,ValidTelefone.telefone,ValidTelefone.java.lang.String,ValidTelefone]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restauranteRequestDTO.telefone,telefone]; arguments []; default message [telefone]]; default message [Telefone deve ter formato válido (10 ou 11 digitos)]] [Field error in object 'restauranteRequestDTO' on field 'telefone': rejected value [123]; codes [Pattern.restauranteRequestDTO.telefone,Pattern.telefone,Pattern.java.lang.String,Pattern]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restauranteRequestDTO.telefone,telefone]; arguments []; default message [telefone],[Ljakarta.validation.constraints.Pattern$Flag;@2535445a,^\+?[0-9]{10,11}$]; default message [O telefone deve ser um número válido com 10 a 11 dígitos]] [Field error in object 'restauranteRequestDTO' on field 'nome': rejected value []; codes [NotBlank.restauranteRequestDTO.nome,NotBlank.nome,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restauranteRequestDTO.nome,nome]; arguments []; default message [nome]]; default message [O nome do restaurante é obrigatório]] ]
2025-08-04 10:35:15.191 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:15.195 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/restaurantes
2025-08-04 10:35:15.195 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 10:35:15.196 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/restaurantes
2025-08-04 10:35:15.197 [main] DEBUG [79699f02dbbf44e7] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#cadastrarRestaurante(RestauranteRequestDTO)
2025-08-04 10:35:15.198 [main] DEBUG [79699f02dbbf44e7] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RestauranteRequestDTO{ativo=true, nome='Pizza Express 123', categoria='Italiana', endereco='Rua das  (truncated)...]
2025-08-04 10:35:15.198 [main] DEBUG [79699f02dbbf44e7] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.RestauranteController.cadastrarRestaurante(com.deliverytech.delivery.dto.request.RestauranteRequestDTO); target is of class [com.deliverytech.delivery.controller.RestauranteController]
2025-08-04 10:35:15.200 [main] DEBUG [79699f02dbbf44e7] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.RestauranteController.cadastrarRestaurante(com.deliverytech.delivery.dto.request.RestauranteRequestDTO); target is of class [com.deliverytech.delivery.controller.RestauranteController]
2025-08-04 10:35:15.206 [main] DEBUG [79699f02dbbf44e7] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.nome=?
2025-08-04 10:35:15.210 [main] DEBUG [79699f02dbbf44e7] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:15.211 [main] DEBUG [79699f02dbbf44e7] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 10:35:15.211 [main] DEBUG [79699f02dbbf44e7] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@4c484633]
2025-08-04 10:35:15.223 [main] INFO  [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.deliverytech.delivery.DeliveryApiApplicationTests]: DeliveryApiApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 10:35:15.230 [main] INFO  [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.deliverytech.delivery.DeliveryApiApplication for test class com.deliverytech.delivery.DeliveryApiApplicationTests
2025-08-04 10:35:15.232 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 10:35:15.247 [main] INFO  [] c.d.d.DeliveryApiApplicationTests - Starting DeliveryApiApplicationTests using Java 21.0.1 with PID 22628 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 10:35:15.247 [main] DEBUG [] c.d.d.DeliveryApiApplicationTests - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 10:35:15.247 [main] INFO  [] c.d.d.DeliveryApiApplicationTests - The following 1 profile is active: "development"
2025-08-04 10:35:15.248 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6461440
2025-08-04 10:35:15.527 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:35:15.528 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 10:35:15.544 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2025-08-04 10:35:15.545 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 10:35:15.545 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 10:35:15.550 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:15.550 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:15.550 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:15.550 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:15.550 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 10:35:15.550 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-08-04 10:35:15.651 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 10:35:15.652 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-17 - Starting...
2025-08-04 10:35:15.653 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-17 - Added connection conn160: url=jdbc:h2:mem:deliverydb user=SA
2025-08-04 10:35:15.653 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-17 - Start completed.
2025-08-04 10:35:15.653 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 10:35:15.701 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:35:15.702 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:35:15.702 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:35:15.702 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:35:15.703 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:35:15.703 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:35:15.704 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 10:35:15.704 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 10:35:15.705 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 10:35:15.706 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 10:35:15.706 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 10:35:15.706 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 10:35:15.707 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 10:35:15.708 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 10:35:15.708 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 10:35:15.709 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:35:15.710 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 10:35:15.711 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:35:15.839 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 10:35:15.921 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 10:35:15.963 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 10:35:16.024 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 10:35:16.073 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 10:35:16.127 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 10:35:16.135 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 10:35:16.219 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-04 10:35:16.248 [main] INFO  [] c.d.d.DeliveryApiApplicationTests - Started DeliveryApiApplicationTests in 1.016 seconds (process running for 52.612)
2025-08-04 10:35:16.252 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 10:35:16.256 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 10:35:16.258 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 10:35:16.260 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 10:35:16.617 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.619 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.619 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.619 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.620 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.620 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.621 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.622 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.622 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.622 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.622 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.622 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.624 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.626 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.626 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.627 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.627 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.627 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.628 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:16.629 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:16.630 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:16.630 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:16.631 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:16.631 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:16.632 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.632 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.632 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.632 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.632 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.633 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.633 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.634 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.634 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.634 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.634 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.634 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.635 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.635 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.635 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.635 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.636 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.636 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.637 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:16.638 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:16.638 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:16.639 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:16.640 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.641 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.641 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.642 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:16.642 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:16.643 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:16.644 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:16.644 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.645 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.645 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.646 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:16.647 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:16.647 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:16.647 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:16.648 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.648 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.648 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.649 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:16.649 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:16.650 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:16.650 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:16.651 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.651 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.652 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.652 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:16.653 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:16.653 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:16.654 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 10:35:16.654 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:16.655 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.656 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.657 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.657 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 10:35:16.659 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 10:35:16.660 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 10:35:16.662 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 10:35:16.664 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 10:35:16.666 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 10:35:16.669 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 10:35:16.671 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 10:35:16.672 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 10:35:16.674 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:16.676 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 10:35:16.677 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:16.678 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 10:35:16.679 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:16.679 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:16.679 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:16.679 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:16.680 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:16.681 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:16.684 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:16.685 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:16.685 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:16.686 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:16.686 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:16.687 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 10:35:16.687 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:16.687 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:16.688 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:16.688 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:16.688 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 10:35:16.688 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 10:35:16.690 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 10:35:18.039 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-04 10:35:18.089 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-04 10:35:18.550 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:35:18.552 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:35:18.557 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:35:18.559 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:35:18.562 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:35:18.566 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:35:18.569 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:35:18.578 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-04 10:35:18.582 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-04 10:35:18.641 [SpringApplicationShutdownHook] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@3fbb4885, started on Mon Aug 04 10:35:13 BRT 2025
2025-08-04 10:35:18.689 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:35:18.690 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:35:18.697 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:35:18.702 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:35:18.707 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:35:18.709 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:35:18.710 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:35:18.712 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-16 - Shutdown initiated...
2025-08-04 10:35:18.716 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-16 - Shutdown completed.
2025-08-04 10:35:18.717 [SpringApplicationShutdownHook] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@6461440, started on Mon Aug 04 10:35:15 BRT 2025
2025-08-04 10:35:18.737 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 10:35:18.738 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 10:35:18.738 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 10:35:18.738 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 10:35:18.739 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 10:35:18.739 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 10:35:18.739 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 10:35:18.740 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-17 - Shutdown initiated...
2025-08-04 10:35:18.744 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-17 - Shutdown completed.
2025-08-04 12:05:12.000 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 23840 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:05:12.047 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:05:12.049 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:05:12.072 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@63fdffcd
2025-08-04 12:05:13.753 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:05:13.756 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:05:13.951 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 182 ms. Found 5 JPA repository interfaces.
2025-08-04 12:05:13.968 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:05:13.969 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:05:13.993 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:05:13.993 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:05:13.993 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:05:13.994 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:05:13.994 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:05:13.994 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2025-08-04 12:05:15.265 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:05:15.304 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-04 12:05:15.505 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:05:15.506 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-04 12:05:15.535 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:05:16.568 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:05:16.571 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:05:16.571 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:05:16.572 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:05:16.572 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:05:16.572 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:05:16.576 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:05:16.585 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:05:16.588 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:05:16.590 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:05:16.592 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:05:16.594 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:05:16.597 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:05:16.610 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:05:16.611 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:05:16.613 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:05:16.614 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:05:16.620 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:05:17.147 [main] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-04 12:05:18.296 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:05:18.934 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:05:19.080 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:05:19.555 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:05:19.748 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:05:20.012 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:05:20.095 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:05:20.923 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:05:20.987 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:05:20.987 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:05:20.988 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:05:20.988 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:05:20.990 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-08-04 12:05:21.091 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 9.819 seconds (process running for 11.644)
2025-08-04 12:05:21.352 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:05:21.388 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:05:21.390 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:05:21.392 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:05:21.792 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.805 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.806 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.807 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.808 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.809 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.819 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.821 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.821 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.822 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.823 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.824 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.836 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.839 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.841 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.843 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.844 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.845 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.855 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:21.863 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:21.864 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:21.866 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:21.867 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:21.869 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:21.871 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.872 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.873 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.874 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.874 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.875 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.876 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.876 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.877 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.877 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.878 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.879 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.879 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.880 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.881 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.882 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.882 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.884 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.887 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:05:21.891 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:05:21.892 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:05:21.893 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:21.895 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.897 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.898 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.903 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:05:21.906 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:05:21.907 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:05:21.908 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:21.909 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.910 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.910 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.912 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:05:21.913 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:05:21.914 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:05:21.915 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:21.918 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.919 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.920 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.922 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:05:21.923 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:05:21.924 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:05:21.925 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:21.926 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.927 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.927 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.928 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:05:21.930 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:05:21.931 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:05:21.933 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:05:21.935 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:21.937 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.938 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.939 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.939 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:05:21.976 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:05:21.983 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:05:21.989 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:05:21.994 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:05:21.998 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:05:22.018 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:05:22.023 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:05:22.031 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:05:22.033 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:22.039 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:05:22.041 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:22.047 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:05:22.048 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:22.049 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:22.050 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:22.050 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:22.051 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:22.055 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:05:22.060 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:05:22.061 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:05:22.062 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:22.063 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:05:22.063 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:22.070 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:05:22.071 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:05:22.074 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:22.076 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:05:22.078 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:22.080 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:05:22.081 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:22.089 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:05:22.116 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:22.119 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:22.667 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/clientes
2025-08-04 12:05:22.679 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:05:22.689 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/clientes
2025-08-04 12:05:22.693 [main] DEBUG [de42e9a403ac4c02] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#listarClientesAtivos(Pageable)
2025-08-04 12:05:22.705 [main] DEBUG [de42e9a403ac4c02] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.listarClientesAtivos(org.springframework.data.domain.Pageable); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:05:22.713 [main] DEBUG [de42e9a403ac4c02] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.listarClientesAtivos(org.springframework.data.domain.Pageable); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:05:22.717 [main] DEBUG [de42e9a403ac4c02] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleGenericException(Exception, WebRequest)
2025-08-04 12:05:22.775 [main] DEBUG [de42e9a403ac4c02] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:05:22.776 [main] DEBUG [de42e9a403ac4c02] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@2d98b386]
2025-08-04 12:05:22.786 [main] DEBUG [de42e9a403ac4c02] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.IllegalArgumentException: Null key returned for cache operation [Builder[public org.springframework.data.domain.Page com.deliverytech.delivery.service.impl.ClienteServiceImpl.listarAtivosPaginado(org.springframework.data.domain.Pageable)] caches=[cliente] | key='#id' | keyGenerator='' | cacheManager='' | cacheResolver='' | condition='' | unless='' | sync='false']. If you are using named parameters, ensure that the compiler uses the '-parameters' flag.]
2025-08-04 12:05:22.807 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@63fdffcd, started on Mon Aug 04 12:05:12 BRT 2025
2025-08-04 12:05:22.827 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:05:22.828 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:05:22.829 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:05:22.831 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:05:22.831 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:05:22.832 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:05:22.832 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:05:22.834 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-04 12:05:22.836 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-04 12:05:49.643 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 23680 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:05:49.644 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:05:49.645 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:05:49.662 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@7428de63
2025-08-04 12:05:51.239 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:05:51.242 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:05:51.431 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 178 ms. Found 5 JPA repository interfaces.
2025-08-04 12:05:51.450 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:05:51.452 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:05:51.473 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:05:51.474 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:05:51.474 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:05:51.475 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:05:51.475 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:05:51.475 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2025-08-04 12:05:52.716 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:05:52.760 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-04 12:05:52.924 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:05:52.926 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-04 12:05:52.958 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:05:54.007 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:05:54.010 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:05:54.011 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:05:54.011 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:05:54.011 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:05:54.011 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:05:54.015 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:05:54.022 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:05:54.024 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:05:54.025 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:05:54.027 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:05:54.030 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:05:54.032 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:05:54.042 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:05:54.044 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:05:54.044 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:05:54.045 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:05:54.049 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:05:54.543 [main] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-04 12:05:55.738 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:05:56.349 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:05:56.541 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:05:57.086 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:05:57.265 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:05:57.487 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:05:57.548 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:05:58.146 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:05:58.206 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:05:58.206 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:05:58.207 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:05:58.207 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:05:58.209 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-08-04 12:05:58.294 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 9.116 seconds (process running for 10.341)
2025-08-04 12:05:58.429 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:05:58.465 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:05:58.466 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:05:58.469 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:05:58.871 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.883 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.884 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.886 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.886 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.887 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.895 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.897 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.897 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.898 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.899 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.900 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.913 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.915 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.915 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.916 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.918 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.919 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.928 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:58.939 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:58.941 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:58.943 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:58.944 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:58.946 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:58.948 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.950 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.951 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.952 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.953 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.954 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.955 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.956 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.956 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.957 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.958 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.959 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.960 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.961 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.962 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.963 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.965 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.966 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.971 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:05:58.974 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:05:58.976 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:05:58.979 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:58.982 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.984 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.985 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:05:58.992 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:05:58.994 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:05:58.995 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:05:58.998 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:59.000 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:59.001 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:05:59.002 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:05:59.004 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:05:59.006 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:05:59.008 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:05:59.009 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:59.012 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:59.014 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:05:59.015 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:05:59.017 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:05:59.018 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:05:59.020 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:05:59.021 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:59.022 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:59.023 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:05:59.024 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:05:59.026 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:05:59.028 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:05:59.030 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:05:59.031 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:05:59.033 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:59.035 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:59.037 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:05:59.039 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:05:59.041 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:05:59.084 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:05:59.090 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:05:59.097 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:05:59.105 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:05:59.112 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:05:59.118 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:05:59.123 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:05:59.127 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:05:59.130 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:59.135 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:05:59.136 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:59.141 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:05:59.142 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:59.143 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:59.144 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:59.144 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:59.145 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:59.148 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:05:59.152 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:05:59.153 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:05:59.155 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:59.156 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:05:59.157 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:59.164 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:05:59.165 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:05:59.166 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:59.167 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:05:59.167 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:59.168 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:05:59.168 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:05:59.173 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:05:59.192 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:59.193 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:05:59.577 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/clientes
2025-08-04 12:05:59.587 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:05:59.597 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/clientes
2025-08-04 12:05:59.601 [main] DEBUG [62014e86477f4fb0] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#listarClientesAtivos(Pageable)
2025-08-04 12:05:59.616 [main] DEBUG [62014e86477f4fb0] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.listarClientesAtivos(org.springframework.data.domain.Pageable); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:05:59.628 [main] DEBUG [62014e86477f4fb0] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.listarClientesAtivos(org.springframework.data.domain.Pageable); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:05:59.640 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@7428de63, started on Mon Aug 04 12:05:49 BRT 2025
2025-08-04 12:05:59.661 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:05:59.663 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:05:59.665 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:05:59.665 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:05:59.666 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:05:59.667 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:05:59.668 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:05:59.670 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-04 12:05:59.672 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-04 12:07:21.354 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 21896 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:07:21.355 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:07:21.355 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:07:21.372 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@7428de63
2025-08-04 12:07:22.889 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:07:22.891 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:07:23.063 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 159 ms. Found 5 JPA repository interfaces.
2025-08-04 12:07:23.080 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:07:23.082 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:07:23.106 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:07:23.106 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:07:23.107 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:07:23.107 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:07:23.107 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:07:23.107 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-08-04 12:07:24.269 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:07:24.310 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-04 12:07:24.475 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:07:24.477 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-04 12:07:24.499 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:07:25.475 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:07:25.479 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:07:25.479 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:07:25.479 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:07:25.480 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:07:25.480 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:07:25.484 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:07:25.491 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:07:25.492 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:07:25.494 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:07:25.495 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:07:25.497 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:07:25.499 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:07:25.510 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:07:25.511 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:07:25.512 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:07:25.513 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:07:25.517 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:07:25.846 [main] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-04 12:07:27.093 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:07:27.744 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:07:27.883 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:07:28.346 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:07:28.531 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:07:28.735 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:07:28.800 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:07:29.356 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:07:29.427 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:07:29.427 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:07:29.428 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:07:29.429 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:07:29.431 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-08-04 12:07:29.544 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 8.623 seconds (process running for 9.758)
2025-08-04 12:07:29.701 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:07:29.748 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:07:29.750 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:07:29.752 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:07:30.161 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.176 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.178 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.179 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.180 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.181 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.193 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.195 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.196 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.197 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.198 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.199 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.218 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.220 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.221 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.223 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.224 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.225 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.233 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:07:30.242 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:07:30.244 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:07:30.245 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:07:30.247 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:07:30.248 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:07:30.250 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.251 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.251 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.252 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.253 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.254 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.254 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.255 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.255 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.256 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.257 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.257 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.258 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.259 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.260 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.261 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.262 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.263 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.266 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:07:30.269 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:07:30.271 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:07:30.272 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:07:30.274 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.277 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.278 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.285 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:07:30.286 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:07:30.288 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:07:30.289 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:07:30.290 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.291 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.291 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.293 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:07:30.294 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:07:30.295 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:07:30.296 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:07:30.297 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.298 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.299 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.300 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:07:30.301 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:07:30.302 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:07:30.303 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:07:30.304 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.305 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.306 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.307 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:07:30.309 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:07:30.310 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:07:30.311 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:07:30.313 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:07:30.314 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.315 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.316 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.317 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.359 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:07:30.366 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:07:30.375 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:07:30.382 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:07:30.387 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:07:30.394 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:07:30.399 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:07:30.406 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:07:30.408 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:07:30.416 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:07:30.417 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:07:30.421 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:07:30.422 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:07:30.423 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:07:30.424 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:07:30.425 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:07:30.425 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:07:30.428 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:07:30.432 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:07:30.434 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:07:30.435 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:07:30.436 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:07:30.437 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:07:30.442 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:07:30.444 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:07:30.444 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:07:30.445 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:07:30.446 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:07:30.446 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:07:30.447 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:07:30.451 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:07:30.470 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.472 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:07:30.891 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/clientes
2025-08-04 12:07:30.903 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:07:30.914 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/clientes
2025-08-04 12:07:30.917 [main] DEBUG [063c1f0182144ba8] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#listarClientesAtivos(Pageable)
2025-08-04 12:07:30.929 [main] DEBUG [063c1f0182144ba8] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.listarClientesAtivos(org.springframework.data.domain.Pageable); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:07:30.937 [main] DEBUG [063c1f0182144ba8] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.listarClientesAtivos(org.springframework.data.domain.Pageable); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:07:30.942 [main] DEBUG [063c1f0182144ba8] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo 
    fetch
        first ? rows only
2025-08-04 12:07:31.019 [main] DEBUG [063c1f0182144ba8] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:07:31.020 [main] DEBUG [063c1f0182144ba8] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.PagedResponseWrapper@ed5cad2]
2025-08-04 12:07:31.090 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@7428de63, started on Mon Aug 04 12:07:21 BRT 2025
2025-08-04 12:07:31.112 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:07:31.113 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:07:31.114 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:07:31.115 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:07:31.116 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:07:31.116 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:07:31.116 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:07:31.118 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-04 12:07:31.120 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-04 12:08:09.430 [main] INFO  [] c.d.delivery.config.DataBaseTest - Starting DataBaseTest using Java 21.0.1 with PID 22168 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:08:09.433 [main] DEBUG [] c.d.delivery.config.DataBaseTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:08:09.435 [main] INFO  [] c.d.delivery.config.DataBaseTest - The following 1 profile is active: "test"
2025-08-04 12:08:09.477 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6f2d3391
2025-08-04 12:08:11.701 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:11.703 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:08:11.949 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 231 ms. Found 5 JPA repository interfaces.
2025-08-04 12:08:11.969 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:11.972 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:08:11.996 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:11.996 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:11.996 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:11.997 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:11.997 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:11.997 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2025-08-04 12:08:13.446 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:08:13.486 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-04 12:08:13.896 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:08:13.899 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-04 12:08:13.946 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:08:15.565 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:15.571 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:15.571 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:15.572 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:15.572 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:15.572 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:15.579 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:08:15.592 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:08:15.595 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:08:15.597 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:08:15.598 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:08:15.601 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:08:15.604 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:08:15.623 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:08:15.625 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:08:15.626 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:15.628 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:15.634 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:16.063 [main] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-04 12:08:17.509 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:08:18.212 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:08:18.385 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:08:18.986 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:08:19.199 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:08:19.406 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:08:19.483 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:08:20.166 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:08:20.229 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:08:20.230 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:08:20.231 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:08:20.231 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:08:20.232 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 12:08:20.328 [main] INFO  [] c.d.delivery.config.DataBaseTest - Started DataBaseTest in 12.408 seconds (process running for 14.673)
2025-08-04 12:08:20.484 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:08:20.539 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:08:20.542 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:08:20.544 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:08:20.938 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:20.956 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:20.957 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:20.958 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:20.959 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:20.960 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:20.972 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:20.973 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:20.974 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:20.975 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:20.976 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:20.977 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:20.992 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:20.994 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:20.995 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:20.996 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:20.997 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:20.998 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.009 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:21.020 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:21.023 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:21.025 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:21.027 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:21.028 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:21.030 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.031 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.032 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.033 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.034 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.034 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.035 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.036 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.037 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.038 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.039 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.040 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.041 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.041 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.042 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.043 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.044 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.045 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.049 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:21.052 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:21.054 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:21.055 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:21.058 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.060 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.061 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.069 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:21.070 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:21.072 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:21.073 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:21.075 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.076 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.076 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.078 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:21.079 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:21.081 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:21.082 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:21.083 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.084 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.085 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.087 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:21.088 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:21.089 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:21.090 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:21.092 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.093 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.093 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.095 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:21.096 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:21.097 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:21.098 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:21.100 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:21.103 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.104 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.105 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.105 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.148 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:08:21.153 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:08:21.161 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:08:21.169 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:08:21.173 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:08:21.180 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:08:21.185 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:08:21.190 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:08:21.193 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:21.199 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:08:21.200 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:21.204 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:08:21.205 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:21.206 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:21.207 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:21.208 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:21.208 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:21.213 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:21.217 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:21.218 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:21.219 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:21.220 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:21.220 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:21.226 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:08:21.228 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:21.229 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:21.230 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:21.231 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:21.231 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:21.232 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:21.238 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:21.260 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.263 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:21.748 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@6f2d3391, started on Mon Aug 04 12:08:09 BRT 2025
2025-08-04 12:08:21.770 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:21.772 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:21.774 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:21.775 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:21.775 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:21.776 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:21.776 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:21.779 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-04 12:08:21.781 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-04 12:08:21.799 [main] INFO  [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.deliverytech.delivery.config.SwaggerIntegrationTest]: SwaggerIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 12:08:21.800 [main] INFO  [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.deliverytech.delivery.DeliveryApiApplication for test class com.deliverytech.delivery.config.SwaggerIntegrationTest
2025-08-04 12:08:21.813 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:08:21.873 [main] INFO  [] c.d.d.config.SwaggerIntegrationTest - Starting SwaggerIntegrationTest using Java 21.0.1 with PID 22168 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:08:21.874 [main] DEBUG [] c.d.d.config.SwaggerIntegrationTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:08:21.874 [main] INFO  [] c.d.d.config.SwaggerIntegrationTest - The following 1 profile is active: "development"
2025-08-04 12:08:22.235 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:22.236 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:08:22.257 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 5 JPA repository interfaces.
2025-08-04 12:08:22.259 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:22.261 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:08:22.266 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:22.266 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:22.266 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:22.266 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:22.266 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:22.267 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-08-04 12:08:22.584 [main] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2025-08-04 12:08:22.602 [main] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2025-08-04 12:08:22.604 [main] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-04 12:08:22.605 [main] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-04 12:08:22.694 [main] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-04 12:08:22.694 [main] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 818 ms
2025-08-04 12:08:22.827 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:08:22.828 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-04 12:08:22.830 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:deliverydb user=SA
2025-08-04 12:08:22.830 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-04 12:08:22.831 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:08:22.920 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:22.920 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:22.920 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:22.921 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:22.921 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:22.921 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:22.921 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:08:22.922 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:08:22.923 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:08:22.924 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:08:22.925 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:08:22.926 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:08:22.928 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:08:22.929 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:08:22.930 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:08:22.931 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:22.932 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:22.934 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:23.015 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:08:23.015 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:08:23.165 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:08:23.261 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:08:23.321 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:08:23.400 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:08:23.465 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:08:23.519 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:08:23.539 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:08:23.793 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-04 12:08:23.944 [main] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2025-08-04 12:08:24.007 [main] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 57883 (http) with context path '/'
2025-08-04 12:08:24.022 [main] INFO  [] c.d.d.config.SwaggerIntegrationTest - Started SwaggerIntegrationTest in 2.209 seconds (process running for 18.37)
2025-08-04 12:08:24.031 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:08:24.057 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:08:24.062 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:08:24.068 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:08:24.431 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.432 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.433 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.434 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.434 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.435 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.437 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.439 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.439 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.440 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.440 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.441 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.444 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.445 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.446 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.446 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.447 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.448 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.450 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:24.452 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:24.453 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:24.454 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:24.455 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:24.456 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:24.457 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.458 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.459 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.459 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.460 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.460 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.461 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.462 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.462 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.463 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.464 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.464 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.465 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.465 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.466 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.466 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.466 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.467 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.470 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:24.472 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:24.473 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:24.474 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:24.475 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.477 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.477 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.479 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:24.480 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:24.481 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:24.482 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:24.483 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.484 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.485 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.487 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:24.488 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:24.489 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:24.489 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:24.491 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.491 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.492 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.493 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:24.494 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:24.495 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:24.496 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:24.497 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.498 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.499 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.500 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:24.502 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:24.503 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:24.503 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:24.504 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:24.506 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.507 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.508 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.508 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:24.511 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:08:24.514 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:08:24.519 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:08:24.522 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:08:24.524 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:08:24.527 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:08:24.530 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:08:24.535 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:08:24.536 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:24.539 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:08:24.540 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:24.542 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:08:24.543 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:24.544 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:24.545 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:24.545 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:24.546 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:24.550 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:24.553 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:24.554 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:24.555 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:24.555 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:24.556 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:24.558 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:08:24.559 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:24.560 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:24.560 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:24.561 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:24.561 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:24.562 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:24.564 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:24.590 [main] DEBUG [] o.s.web.client.RestTemplate - HTTP GET http://localhost:57883/api-docs
2025-08-04 12:08:24.598 [main] DEBUG [] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-04 12:08:24.742 [http-nio-auto-1-exec-1] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-04 12:08:24.742 [http-nio-auto-1-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-04 12:08:24.742 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-04 12:08:24.742 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-04 12:08:24.742 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-04 12:08:24.743 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@4e8affb8
2025-08-04 12:08:24.743 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@37d64360
2025-08-04 12:08:24.744 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-04 12:08:24.744 [http-nio-auto-1-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-04 12:08:24.771 [http-nio-auto-1-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api-docs
2025-08-04 12:08:24.784 [http-nio-auto-1-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:24.787 [http-nio-auto-1-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 12:08:24.797 [http-nio-auto-1-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api-docs
2025-08-04 12:08:24.810 [http-nio-auto-1-exec-1] DEBUG [a20da03d78ce465f] o.s.web.servlet.DispatcherServlet - GET "/api-docs", parameters={}
2025-08-04 12:08:24.813 [http-nio-auto-1-exec-1] DEBUG [a20da03d78ce465f] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
2025-08-04 12:08:26.409 [http-nio-auto-1-exec-1] INFO  [a20da03d78ce465f] o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 1568 ms
2025-08-04 12:08:26.455 [http-nio-auto-1-exec-1] DEBUG [a20da03d78ce465f] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [text/plain, application/json, application/yaml, application/*+json, */*] and supported [application/json]
2025-08-04 12:08:26.466 [http-nio-auto-1-exec-1] DEBUG [a20da03d78ce465f] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 49, 46, 48, 34, 44, 34, 105, 110, 10 (truncated)...]
2025-08-04 12:08:26.476 [http-nio-auto-1-exec-1] DEBUG [a20da03d78ce465f] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-04 12:08:26.518 [main] DEBUG [] o.s.web.client.RestTemplate - Response 200 OK
2025-08-04 12:08:26.519 [main] DEBUG [] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json"
2025-08-04 12:08:26.541 [main] DEBUG [] o.s.web.client.RestTemplate - HTTP GET http://localhost:57883/api-docs
2025-08-04 12:08:26.542 [main] DEBUG [] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-04 12:08:26.546 [http-nio-auto-1-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api-docs
2025-08-04 12:08:26.546 [http-nio-auto-1-exec-6] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:26.547 [http-nio-auto-1-exec-6] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 12:08:26.548 [http-nio-auto-1-exec-6] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api-docs
2025-08-04 12:08:26.548 [http-nio-auto-1-exec-6] DEBUG [caa14f15356c4b70] o.s.web.servlet.DispatcherServlet - GET "/api-docs", parameters={}
2025-08-04 12:08:26.549 [http-nio-auto-1-exec-6] DEBUG [caa14f15356c4b70] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
2025-08-04 12:08:26.559 [http-nio-auto-1-exec-6] DEBUG [caa14f15356c4b70] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [text/plain, application/json, application/yaml, application/*+json, */*] and supported [application/json]
2025-08-04 12:08:26.563 [http-nio-auto-1-exec-6] DEBUG [caa14f15356c4b70] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 49, 46, 48, 34, 44, 34, 105, 110, 10 (truncated)...]
2025-08-04 12:08:26.564 [http-nio-auto-1-exec-6] DEBUG [caa14f15356c4b70] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-04 12:08:26.565 [main] DEBUG [] o.s.web.client.RestTemplate - Response 200 OK
2025-08-04 12:08:26.565 [main] DEBUG [] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json"
2025-08-04 12:08:26.580 [main] DEBUG [] o.s.web.client.RestTemplate - HTTP GET http://localhost:57883/swagger-ui.html
2025-08-04 12:08:26.580 [main] DEBUG [] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-04 12:08:26.584 [http-nio-auto-1-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui.html
2025-08-04 12:08:26.585 [http-nio-auto-1-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:26.585 [http-nio-auto-1-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 12:08:26.586 [http-nio-auto-1-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui.html
2025-08-04 12:08:26.587 [http-nio-auto-1-exec-2] DEBUG [82bc104c73ad42d2] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui.html", parameters={}
2025-08-04 12:08:26.588 [http-nio-auto-1-exec-2] DEBUG [82bc104c73ad42d2] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.ui.SwaggerWelcomeWebMvc#redirectToUi(HttpServletRequest)
2025-08-04 12:08:26.592 [http-nio-auto-1-exec-2] DEBUG [82bc104c73ad42d2] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [text/plain, application/json, application/yaml, application/*+json, */*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:08:26.592 [http-nio-auto-1-exec-2] DEBUG [82bc104c73ad42d2] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Nothing to write: null body
2025-08-04 12:08:26.592 [http-nio-auto-1-exec-2] DEBUG [82bc104c73ad42d2] o.s.web.servlet.DispatcherServlet - Completed 302 FOUND
2025-08-04 12:08:26.603 [http-nio-auto-1-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-08-04 12:08:26.604 [http-nio-auto-1-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:26.604 [http-nio-auto-1-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 12:08:26.605 [http-nio-auto-1-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-08-04 12:08:26.606 [http-nio-auto-1-exec-3] DEBUG [0ac99434ff8e457c] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/index.html", parameters={}
2025-08-04 12:08:26.607 [http-nio-auto-1-exec-3] DEBUG [0ac99434ff8e457c] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-08-04 12:08:26.611 [http-nio-auto-1-exec-3] DEBUG [0ac99434ff8e457c] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-04 12:08:26.611 [main] DEBUG [] o.s.web.client.RestTemplate - Response 200 OK
2025-08-04 12:08:26.611 [main] DEBUG [] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "text/html"
2025-08-04 12:08:26.619 [main] INFO  [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.deliverytech.delivery.controller.ClienteControllerITTest]: ClienteControllerITTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 12:08:26.630 [main] INFO  [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.deliverytech.delivery.DeliveryApiApplication for test class com.deliverytech.delivery.controller.ClienteControllerITTest
2025-08-04 12:08:26.634 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:08:26.656 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 22168 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:08:26.656 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:08:26.656 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:08:26.657 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@68aac202
2025-08-04 12:08:26.974 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:26.974 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:08:26.992 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 5 JPA repository interfaces.
2025-08-04 12:08:26.994 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:26.994 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:08:27.000 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:27.000 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:27.000 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:27.000 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:27.000 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:27.001 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-08-04 12:08:27.107 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:08:27.108 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-08-04 12:08:27.109 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection conn20: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:08:27.109 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-08-04 12:08:27.110 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:08:27.180 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:27.180 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:27.181 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:27.181 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:27.181 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:27.181 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:27.181 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:08:27.183 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:08:27.184 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:08:27.185 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:08:27.186 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:08:27.187 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:08:27.188 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:08:27.189 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:08:27.190 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:08:27.191 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:27.192 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:27.193 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:27.348 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:08:27.461 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:08:27.513 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:08:27.659 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:08:27.705 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:08:27.747 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:08:27.756 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:08:27.854 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:08:27.872 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:08:27.872 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:08:27.872 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:08:27.872 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:08:27.873 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 12:08:27.901 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 1.267 seconds (process running for 22.249)
2025-08-04 12:08:27.904 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:08:27.907 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:08:27.910 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:08:27.912 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:08:28.268 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.270 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.270 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.270 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.272 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.272 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.274 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.275 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.275 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.276 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.277 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.278 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.281 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.282 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.283 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.283 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.284 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.285 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.286 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:28.288 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:28.289 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:28.290 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:28.291 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:28.292 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:28.293 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.295 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.295 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.296 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.296 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.297 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.297 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.298 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.298 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.299 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.299 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.300 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.300 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.301 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.302 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.302 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.303 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.304 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.306 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:28.308 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:28.309 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:28.311 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:28.313 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.314 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.314 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.316 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:28.317 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:28.318 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:28.319 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:28.319 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.320 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.321 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.322 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:28.323 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:28.323 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:28.324 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:28.325 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.326 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.327 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.328 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:28.329 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:28.330 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:28.330 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:28.332 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.332 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.333 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.334 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:28.335 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:28.336 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:28.336 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:28.337 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:28.338 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.339 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.340 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.340 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.345 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:08:28.348 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:08:28.352 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:08:28.354 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:08:28.357 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:08:28.360 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:08:28.364 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:08:28.368 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:08:28.369 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:28.373 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:08:28.374 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:28.378 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:08:28.379 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:28.380 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:28.380 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:28.381 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:28.381 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:28.384 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:28.387 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:28.388 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:28.389 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:28.389 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:28.390 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:28.393 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:08:28.394 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:28.394 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:28.395 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:28.395 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:28.396 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:28.396 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:28.399 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:28.404 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.406 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:28.419 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:08:28.433 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing DELETE /api/clientes/7
2025-08-04 12:08:28.436 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:28.439 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured DELETE /api/clientes/7
2025-08-04 12:08:28.441 [main] DEBUG [d31fbe9c04c64394] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#deletarCliente(Long)
2025-08-04 12:08:28.444 [main] DEBUG [d31fbe9c04c64394] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.deletarCliente(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:08:28.455 [main] DEBUG [d31fbe9c04c64394] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.deletarCliente(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:08:28.456 [main] DEBUG [d31fbe9c04c64394] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:28.465 [main] DEBUG [d31fbe9c04c64394] org.hibernate.SQL - 
    /* delete for com.deliverytech.delivery.entity.Cliente */delete 
    from
        clientes 
    where
        id=?
2025-08-04 12:08:28.474 [main] DEBUG [d31fbe9c04c64394] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:08:28.474 [main] DEBUG [d31fbe9c04c64394] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Nothing to write: null body
2025-08-04 12:08:28.489 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/clientes/7
2025-08-04 12:08:28.489 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:28.490 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/clientes/7
2025-08-04 12:08:28.491 [main] DEBUG [4959fb294bd94088] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#buscarPorId(Long)
2025-08-04 12:08:28.491 [main] DEBUG [4959fb294bd94088] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:08:28.492 [main] DEBUG [4959fb294bd94088] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:08:28.495 [main] DEBUG [4959fb294bd94088] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:28.507 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@68aac202, started on Mon Aug 04 12:08:26 BRT 2025
2025-08-04 12:08:28.512 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:28.512 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:28.512 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:28.513 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:28.513 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:28.514 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:28.514 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:28.515 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2025-08-04 12:08:28.516 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2025-08-04 12:08:28.524 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:08:28.553 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 22168 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:08:28.553 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:08:28.553 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:08:28.554 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@31a94967
2025-08-04 12:08:28.877 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:28.877 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:08:28.893 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2025-08-04 12:08:28.895 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:28.895 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:08:28.900 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:28.900 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:28.900 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:28.900 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:28.901 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:28.901 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-08-04 12:08:28.988 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:08:28.988 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
2025-08-04 12:08:28.989 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Added connection conn30: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:08:28.990 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
2025-08-04 12:08:28.990 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:08:29.047 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:29.048 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:29.048 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:29.048 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:29.048 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:29.048 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:29.048 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:08:29.049 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:08:29.050 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:08:29.051 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:08:29.052 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:08:29.052 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:08:29.054 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:08:29.055 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:08:29.056 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:08:29.057 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:29.057 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:29.059 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:29.199 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:08:29.298 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:08:29.335 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:08:29.409 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:08:29.451 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:08:29.493 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:08:29.501 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:08:29.588 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:08:29.602 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:08:29.603 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:08:29.603 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:08:29.603 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:08:29.603 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-08-04 12:08:29.620 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 1.096 seconds (process running for 23.968)
2025-08-04 12:08:29.623 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:08:29.626 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:08:29.628 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:08:29.629 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:08:29.987 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:29.988 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:29.988 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:29.989 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:29.989 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:29.990 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:29.991 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:29.992 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:29.992 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:29.993 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:29.993 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:29.993 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:29.996 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:29.997 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:29.998 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:29.999 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.001 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.002 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.004 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:30.005 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:30.006 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:30.007 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:30.007 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:30.008 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:30.009 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.010 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.011 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.011 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.012 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.012 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.013 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.013 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.014 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.014 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.015 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.015 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.016 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.016 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.017 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.017 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.017 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.018 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.020 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:30.021 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:30.022 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:30.023 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:30.024 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.025 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.026 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.027 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:30.028 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:30.029 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:30.030 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:30.031 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.032 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.032 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.033 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:30.034 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:30.035 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:30.035 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:30.036 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.037 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.037 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.038 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:30.039 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:30.040 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:30.040 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:30.041 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.042 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.042 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.043 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:30.044 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:30.045 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:30.046 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:30.047 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:30.047 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.048 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.049 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.049 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.052 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:08:30.055 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:08:30.057 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:08:30.059 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:08:30.060 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:08:30.063 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:08:30.066 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:08:30.069 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:08:30.069 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:30.071 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:08:30.072 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:30.074 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:08:30.075 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:30.075 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:30.075 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:30.076 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:30.077 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:30.079 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:30.081 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:30.082 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:30.083 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:30.083 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:30.084 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:30.086 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:08:30.086 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:30.087 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:30.087 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:30.087 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:30.088 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:30.088 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:30.091 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:30.096 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.097 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.103 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/clientes
2025-08-04 12:08:30.104 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:30.105 [main] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 12:08:30.106 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/clientes
2025-08-04 12:08:30.106 [main] DEBUG [c186fae469fc4134] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#cadastrarCliente(ClienteRequestDTO)
2025-08-04 12:08:30.122 [main] DEBUG [c186fae469fc4134] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ClienteRequestDTO{email='mariacliente@email.com', nome='Maria Silva', telefone='11888888888', endere (truncated)...]
2025-08-04 12:08:30.179 [main] DEBUG [c186fae469fc4134] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:08:30.181 [main] DEBUG [c186fae469fc4134] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.cpf=? 
    fetch
        first ? rows only
2025-08-04 12:08:30.207 [main] DEBUG [c186fae469fc4134] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:30.212 [main] DEBUG [c186fae469fc4134] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:08:30.212 [main] DEBUG [c186fae469fc4134] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@4c66dad1]
2025-08-04 12:08:30.274 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@31a94967, started on Mon Aug 04 12:08:28 BRT 2025
2025-08-04 12:08:30.280 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:30.280 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:30.280 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:30.281 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:30.281 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:30.281 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:30.282 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:30.282 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown initiated...
2025-08-04 12:08:30.283 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown completed.
2025-08-04 12:08:30.286 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:08:30.313 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 22168 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:08:30.313 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:08:30.313 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:08:30.315 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@42204fcd
2025-08-04 12:08:30.603 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:30.603 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:08:30.619 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2025-08-04 12:08:30.620 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:30.620 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:08:30.626 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:30.626 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:30.626 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:30.626 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:30.626 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:30.626 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-08-04 12:08:30.704 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:08:30.705 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Starting...
2025-08-04 12:08:30.706 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-5 - Added connection conn40: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:08:30.706 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Start completed.
2025-08-04 12:08:30.707 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:08:30.760 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:30.761 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:30.761 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:30.761 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:30.761 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:30.761 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:30.762 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:08:30.763 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:08:30.763 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:08:30.764 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:08:30.765 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:08:30.765 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:08:30.766 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:08:30.767 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:08:30.768 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:08:30.769 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:30.770 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:30.771 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:30.903 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:08:31.071 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:08:31.125 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:08:31.185 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:08:31.227 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:08:31.269 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:08:31.276 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:08:31.368 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:08:31.383 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:08:31.383 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:08:31.383 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:08:31.383 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:08:31.384 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-08-04 12:08:31.400 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 1.114 seconds (process running for 25.749)
2025-08-04 12:08:31.404 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:08:31.408 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:08:31.410 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:08:31.411 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:08:31.768 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.770 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.770 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.770 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.771 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.771 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.773 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.774 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.774 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.775 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.775 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.775 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.777 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.778 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.779 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.780 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.780 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.781 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.782 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:31.784 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:31.785 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:31.786 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:31.787 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:31.788 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:31.790 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.790 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.791 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.791 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.792 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.792 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.792 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.793 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.793 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.794 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.794 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.795 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.795 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.795 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.796 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.796 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.797 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.797 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.800 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:31.802 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:31.803 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:31.804 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:31.805 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.806 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.807 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.808 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:31.809 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:31.810 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:31.810 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:31.811 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.812 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.813 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.814 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:31.815 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:31.816 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:31.817 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:31.818 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.819 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.819 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.821 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:31.822 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:31.822 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:31.823 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:31.824 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.825 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.825 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.826 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:31.827 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:31.828 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:31.828 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:31.829 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:31.831 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.833 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.834 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.834 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.837 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:08:31.840 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:08:31.844 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:08:31.848 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:08:31.850 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:08:31.852 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:08:31.855 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:08:31.857 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:08:31.858 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:31.861 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:08:31.862 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:31.866 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:08:31.867 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:31.867 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:31.868 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:31.869 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:31.869 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:31.872 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:31.874 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:31.875 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:31.876 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:31.876 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:31.877 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:31.880 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:08:31.881 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:31.881 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:31.881 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:31.882 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:31.882 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:31.882 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:31.885 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:31.889 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.891 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:31.898 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:08:31.902 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/clientes/1
2025-08-04 12:08:31.903 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:31.904 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/clientes/1
2025-08-04 12:08:31.905 [main] DEBUG [0059f8fa96bc4066] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#buscarPorId(Long)
2025-08-04 12:08:31.907 [main] DEBUG [0059f8fa96bc4066] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:08:31.908 [main] DEBUG [0059f8fa96bc4066] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:08:31.910 [main] DEBUG [0059f8fa96bc4066] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:31.916 [main] DEBUG [0059f8fa96bc4066] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:08:31.916 [main] DEBUG [0059f8fa96bc4066] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@5d1c5d5a]
2025-08-04 12:08:31.923 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@42204fcd, started on Mon Aug 04 12:08:30 BRT 2025
2025-08-04 12:08:31.927 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:31.928 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:31.928 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:31.929 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:31.929 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:31.929 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:31.929 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:31.930 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown initiated...
2025-08-04 12:08:31.931 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown completed.
2025-08-04 12:08:31.933 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:08:31.961 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 22168 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:08:31.961 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:08:31.961 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:08:31.962 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@7133e7e8
2025-08-04 12:08:32.235 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:32.235 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:08:32.250 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
2025-08-04 12:08:32.251 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:32.252 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:08:32.257 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:32.257 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:32.257 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:32.257 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:32.257 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:32.257 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-08-04 12:08:32.342 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:08:32.342 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Starting...
2025-08-04 12:08:32.343 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-6 - Added connection conn50: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:08:32.343 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Start completed.
2025-08-04 12:08:32.343 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:08:32.398 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:32.398 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:32.398 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:32.399 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:32.399 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:32.399 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:32.399 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:08:32.400 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:08:32.401 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:08:32.402 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:08:32.403 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:08:32.403 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:08:32.404 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:08:32.405 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:08:32.406 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:08:32.407 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:32.407 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:32.409 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:32.523 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:08:32.610 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:08:32.660 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:08:32.743 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:08:32.786 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:08:32.826 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:08:32.834 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:08:32.920 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:08:32.935 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:08:32.935 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:08:32.935 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:08:32.935 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:08:32.936 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 12:08:32.953 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 1.019 seconds (process running for 27.301)
2025-08-04 12:08:32.956 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:08:32.959 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:08:32.961 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:08:32.963 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:08:33.320 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.321 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.322 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.322 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.323 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.323 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.325 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.325 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.326 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.326 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.327 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.327 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.329 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.330 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.331 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.332 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.332 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.333 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.335 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:33.336 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:33.337 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:33.337 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:33.338 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:33.339 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:33.340 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.341 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.341 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.342 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.342 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.343 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.343 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.344 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.344 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.345 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.345 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.345 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.346 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.346 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.347 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.347 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.347 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.348 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.349 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:33.351 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:33.352 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:33.353 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:33.354 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.355 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.355 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.357 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:33.359 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:33.359 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:33.360 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:33.361 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.361 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.362 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.363 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:33.364 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:33.364 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:33.365 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:33.366 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.367 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.367 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.368 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:33.369 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:33.370 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:33.370 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:33.371 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.372 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.373 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.375 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:33.376 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:33.376 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:33.377 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:33.378 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:33.378 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.379 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.380 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.380 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.383 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:08:33.385 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:08:33.387 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:08:33.389 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:08:33.391 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:08:33.395 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:08:33.398 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:08:33.400 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:08:33.401 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:33.403 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:08:33.404 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:33.406 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:08:33.407 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:33.407 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:33.408 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:33.408 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:33.409 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:33.411 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:33.413 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:33.414 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:33.415 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:33.415 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:33.416 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:33.417 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:08:33.418 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:33.418 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:33.419 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:33.420 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:33.420 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:33.420 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:33.422 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:33.427 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.429 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:33.434 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:08:33.440 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing PUT /api/clientes/1
2025-08-04 12:08:33.441 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:33.442 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured PUT /api/clientes/1
2025-08-04 12:08:33.443 [main] DEBUG [ec9b5053370340e0] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#atualizarCliente(Long, ClienteRequestDTO)
2025-08-04 12:08:33.445 [main] DEBUG [ec9b5053370340e0] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ClienteRequestDTO{email='novoemail@email.com', nome='Nome Atualizado', telefone='11777777777', ender (truncated)...]
2025-08-04 12:08:33.450 [main] DEBUG [ec9b5053370340e0] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.atualizarCliente(java.lang.Long,com.deliverytech.delivery.dto.request.ClienteRequestDTO); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:08:33.451 [main] DEBUG [ec9b5053370340e0] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.atualizarCliente(java.lang.Long,com.deliverytech.delivery.dto.request.ClienteRequestDTO); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:08:33.452 [main] DEBUG [ec9b5053370340e0] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:33.465 [main] DEBUG [ec9b5053370340e0] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Cliente */update clientes 
    set
        ativo=?,
        cpf=?,
        data_cadastro=?,
        email=?,
        endereco=?,
        nome=?,
        telefone=? 
    where
        id=?
2025-08-04 12:08:33.469 [main] DEBUG [ec9b5053370340e0] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:08:33.470 [main] DEBUG [ec9b5053370340e0] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@2873fcf7]
2025-08-04 12:08:33.476 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@7133e7e8, started on Mon Aug 04 12:08:31 BRT 2025
2025-08-04 12:08:33.479 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:33.479 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:33.480 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:33.480 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:33.480 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:33.480 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:33.482 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:33.482 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown initiated...
2025-08-04 12:08:33.483 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown completed.
2025-08-04 12:08:33.485 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:08:33.511 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 22168 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:08:33.511 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:08:33.511 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:08:33.512 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@5b25962
2025-08-04 12:08:33.750 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:33.751 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:08:33.764 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2025-08-04 12:08:33.766 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:33.766 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:08:33.770 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:33.771 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:33.771 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:33.771 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:33.771 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:33.771 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-08-04 12:08:33.850 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:08:33.851 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Starting...
2025-08-04 12:08:33.852 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-7 - Added connection conn60: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:08:33.852 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Start completed.
2025-08-04 12:08:33.852 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:08:33.902 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:33.902 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:33.902 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:33.902 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:33.902 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:33.902 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:33.903 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:08:33.904 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:08:33.904 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:08:33.905 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:08:33.906 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:08:33.906 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:08:33.907 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:08:33.908 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:08:33.909 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:08:33.910 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:33.910 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:33.912 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:34.027 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:08:34.125 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:08:34.159 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:08:34.212 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:08:34.253 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:08:34.299 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:08:34.308 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:08:34.402 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:08:34.416 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:08:34.416 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:08:34.416 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:08:34.416 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:08:34.417 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 12:08:34.432 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 0.947 seconds (process running for 28.781)
2025-08-04 12:08:34.434 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:08:34.437 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:08:34.438 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:08:34.440 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:08:34.795 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.796 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.796 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.796 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.797 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.797 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.799 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.800 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.800 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.801 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.801 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.802 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.804 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.805 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.805 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.806 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.806 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.807 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.808 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:34.809 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:34.810 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:34.810 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:34.811 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:34.812 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:34.812 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.813 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.813 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.814 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.814 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.815 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.815 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.816 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.816 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.817 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.817 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.817 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.818 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.818 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.819 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.819 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.820 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.820 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.822 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:34.823 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:34.824 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:34.825 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:34.826 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.827 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.828 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.829 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:34.830 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:34.831 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:34.831 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:34.833 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.833 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.834 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.835 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:34.836 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:34.836 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:34.837 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:34.838 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.839 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.839 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.840 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:34.841 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:34.842 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:34.843 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:34.844 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.844 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.845 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.846 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:34.848 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:34.849 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:34.851 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:34.852 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:34.853 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.854 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.854 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.855 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.857 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:08:34.860 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:08:34.863 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:08:34.865 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:08:34.867 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:08:34.869 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:08:34.870 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:08:34.873 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:08:34.873 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:34.875 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:08:34.876 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:34.878 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:08:34.879 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:34.879 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:34.880 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:34.881 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:34.881 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:34.883 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:34.886 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:34.887 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:34.887 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:34.888 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:34.888 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:34.890 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:08:34.891 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:34.891 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:34.892 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:34.892 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:34.893 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:34.894 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:34.896 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:34.900 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.902 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:34.907 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/clientes
2025-08-04 12:08:34.908 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:34.909 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/clientes
2025-08-04 12:08:34.910 [main] DEBUG [ca9a5a2af2b94654] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#listarClientesAtivos(Pageable)
2025-08-04 12:08:34.913 [main] DEBUG [ca9a5a2af2b94654] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.listarClientesAtivos(org.springframework.data.domain.Pageable); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:08:34.914 [main] DEBUG [ca9a5a2af2b94654] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.listarClientesAtivos(org.springframework.data.domain.Pageable); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:08:34.917 [main] DEBUG [ca9a5a2af2b94654] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo 
    fetch
        first ? rows only
2025-08-04 12:08:34.929 [main] DEBUG [ca9a5a2af2b94654] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:08:34.930 [main] DEBUG [ca9a5a2af2b94654] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.PagedResponseWrapper@2f347d49]
2025-08-04 12:08:34.943 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@5b25962, started on Mon Aug 04 12:08:33 BRT 2025
2025-08-04 12:08:34.947 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:34.947 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:34.948 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:34.948 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:34.948 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:34.948 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:34.949 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:34.949 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown initiated...
2025-08-04 12:08:34.957 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown completed.
2025-08-04 12:08:34.961 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:08:34.988 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 22168 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:08:34.988 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:08:34.988 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:08:34.990 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@148f1f5b
2025-08-04 12:08:35.228 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:35.228 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:08:35.242 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2025-08-04 12:08:35.244 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:35.244 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:08:35.248 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:35.248 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:35.248 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:35.248 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:35.248 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:35.249 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-08-04 12:08:35.328 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:08:35.329 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Starting...
2025-08-04 12:08:35.330 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-8 - Added connection conn70: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:08:35.330 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Start completed.
2025-08-04 12:08:35.330 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:08:35.389 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:35.390 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:35.390 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:35.390 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:35.390 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:35.390 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:35.391 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:08:35.393 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:08:35.394 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:08:35.395 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:08:35.396 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:08:35.397 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:08:35.399 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:08:35.400 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:08:35.401 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:08:35.402 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:35.403 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:35.405 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:35.543 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:08:35.640 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:08:35.672 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:08:35.730 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:08:35.771 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:08:35.808 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:08:35.816 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:08:35.916 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:08:35.930 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:08:35.930 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:08:35.930 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:08:35.930 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:08:35.931 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 12:08:35.946 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 0.985 seconds (process running for 30.295)
2025-08-04 12:08:35.948 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:08:35.951 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:08:35.953 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:08:35.954 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:08:36.312 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.314 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.314 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.314 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.315 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.315 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.317 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.318 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.318 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.319 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.319 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.319 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.321 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.324 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.325 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.325 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.326 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.326 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.328 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:36.329 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:36.329 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:36.330 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:36.331 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:36.331 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:36.332 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.333 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.333 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.334 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.334 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.335 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.335 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.335 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.336 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.336 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.336 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.337 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.337 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.337 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.338 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.338 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.338 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.339 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.340 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:36.341 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:36.342 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:36.343 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:36.344 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.344 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.345 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.346 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:36.346 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:36.347 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:36.348 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:36.348 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.349 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.349 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.350 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:36.351 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:36.352 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:36.352 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:36.353 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.354 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.354 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.355 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:36.356 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:36.356 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:36.357 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:36.358 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.358 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.359 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.359 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:36.360 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:36.360 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:36.361 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:36.362 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:36.363 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.364 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.365 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.366 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.368 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:08:36.370 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:08:36.372 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:08:36.373 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:08:36.375 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:08:36.378 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:08:36.380 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:08:36.382 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:08:36.383 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:36.384 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:08:36.385 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:36.386 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:08:36.387 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:36.387 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:36.388 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:36.388 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:36.388 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:36.390 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:36.393 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:36.393 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:36.394 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:36.394 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:36.395 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:36.397 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:08:36.398 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:36.398 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:36.399 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:36.399 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:36.399 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:36.399 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:36.401 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:36.405 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.407 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:36.413 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/clientes/999
2025-08-04 12:08:36.414 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:36.415 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/clientes/999
2025-08-04 12:08:36.416 [main] DEBUG [b5885c6888864ff7] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#buscarPorId(Long)
2025-08-04 12:08:36.417 [main] DEBUG [b5885c6888864ff7] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:08:36.418 [main] DEBUG [b5885c6888864ff7] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:08:36.419 [main] DEBUG [b5885c6888864ff7] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:36.423 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@148f1f5b, started on Mon Aug 04 12:08:34 BRT 2025
2025-08-04 12:08:36.427 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:36.427 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:36.428 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:36.428 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:36.428 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:36.428 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:36.429 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:36.429 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown initiated...
2025-08-04 12:08:36.430 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown completed.
2025-08-04 12:08:36.433 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:08:36.455 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 22168 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:08:36.455 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:08:36.455 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:08:36.456 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@187b6f7
2025-08-04 12:08:36.685 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:36.685 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:08:36.699 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2025-08-04 12:08:36.701 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:36.701 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:08:36.705 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:36.706 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:36.706 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:36.706 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:36.706 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:36.706 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-08-04 12:08:36.776 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:08:36.777 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Starting...
2025-08-04 12:08:36.778 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-9 - Added connection conn80: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:08:36.778 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Start completed.
2025-08-04 12:08:36.778 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:08:36.827 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:36.827 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:36.827 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:36.827 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:36.827 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:36.827 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:36.828 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:08:36.828 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:08:36.829 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:08:36.829 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:08:36.830 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:08:36.831 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:08:36.832 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:08:36.833 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:08:36.833 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:08:36.835 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:36.835 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:36.837 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:36.997 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:08:37.083 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:08:37.117 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:08:37.180 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:08:37.222 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:08:37.266 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:08:37.274 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:08:37.356 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:08:37.368 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:08:37.368 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:08:37.368 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:08:37.368 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:08:37.369 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 12:08:37.384 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 0.95 seconds (process running for 31.732)
2025-08-04 12:08:37.387 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:08:37.390 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:08:37.391 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:08:37.393 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:08:37.752 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.753 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.753 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.754 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.754 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.754 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.756 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.756 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.756 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.757 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.757 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.757 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.760 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.761 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.761 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.766 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.767 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.767 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.769 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:37.770 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:37.771 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:37.772 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:37.772 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:37.773 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:37.774 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.774 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.775 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.776 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.776 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.777 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.777 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.777 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.778 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.778 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.778 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.779 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.779 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.779 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.780 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.780 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.781 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.781 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.783 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:37.784 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:37.785 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:37.786 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:37.787 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.788 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.788 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.789 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:37.790 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:37.791 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:37.793 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:37.794 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.795 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.795 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.796 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:37.797 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:37.797 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:37.798 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:37.799 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.799 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.800 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.802 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:37.803 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:37.803 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:37.804 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:37.805 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.806 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.806 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.808 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:37.810 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:37.811 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:37.812 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:37.812 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:37.814 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.814 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.815 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.815 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.818 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:08:37.820 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:08:37.822 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:08:37.825 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:08:37.827 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:08:37.830 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:08:37.833 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:08:37.835 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:08:37.835 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:37.838 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:08:37.839 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:37.841 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:08:37.842 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:37.843 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:37.843 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:37.844 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:37.844 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:37.847 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:37.849 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:37.850 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:37.851 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:37.851 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:37.852 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:37.854 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:08:37.855 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:37.855 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:37.856 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:37.856 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:37.856 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:37.857 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:37.859 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:37.865 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.867 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:37.875 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/clientes
2025-08-04 12:08:37.876 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:37.877 [main] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 12:08:37.878 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/clientes
2025-08-04 12:08:37.878 [main] DEBUG [f5f3843f300e4ad3] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#cadastrarCliente(ClienteRequestDTO)
2025-08-04 12:08:37.880 [main] DEBUG [f5f3843f300e4ad3] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ClienteRequestDTO{email='email-invalido', nome='', telefone='', endereco=''}]
2025-08-04 12:08:37.894 [main] WARN  [f5f3843f300e4ad3] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.deliverytech.delivery.dto.response.ApiResponseWrapper<com.deliverytech.delivery.dto.response.ClienteResponseDTO>> com.deliverytech.delivery.controller.ClienteController.cadastrarCliente(com.deliverytech.delivery.dto.request.ClienteRequestDTO) with 7 errors: [Field error in object 'clienteRequestDTO' on field 'email': rejected value [email-invalido]; codes [Email.clienteRequestDTO.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@77c326bd,.*]; default message [O email deve ser válido]] [Field error in object 'clienteRequestDTO' on field 'telefone': rejected value []; codes [Pattern.clienteRequestDTO.telefone,Pattern.telefone,Pattern.java.lang.String,Pattern]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.telefone,telefone]; arguments []; default message [telefone],[Ljakarta.validation.constraints.Pattern$Flag;@28dd7655,^\+?[0-9]{10,15}$]; default message [O telefone deve ser um número válido com 10 a 15 dígitos]] [Field error in object 'clienteRequestDTO' on field 'endereco': rejected value []; codes [NotBlank.clienteRequestDTO.endereco,NotBlank.endereco,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.endereco,endereco]; arguments []; default message [endereco]]; default message [O endereço é obrigatório]] [Field error in object 'clienteRequestDTO' on field 'telefone': rejected value []; codes [Pattern.clienteRequestDTO.telefone,Pattern.telefone,Pattern.java.lang.String,Pattern]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.telefone,telefone]; arguments []; default message [telefone],[Ljakarta.validation.constraints.Pattern$Flag;@28dd7655,^\+?[0-9]{10,15}$]; default message [O telefone deve ser um número válido com 10 a 15 dígitos, podendo iniciar com '+']] [Field error in object 'clienteRequestDTO' on field 'nome': rejected value []; codes [NotBlank.clienteRequestDTO.nome,NotBlank.nome,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.nome,nome]; arguments []; default message [nome]]; default message [O nome é obrigatório]] [Field error in object 'clienteRequestDTO' on field 'cpf': rejected value [null]; codes [NotBlank.clienteRequestDTO.cpf,NotBlank.cpf,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.cpf,cpf]; arguments []; default message [cpf]]; default message [O CPF é obrigatório]] [Field error in object 'clienteRequestDTO' on field 'cpf': rejected value [null]; codes [ValidCPF.clienteRequestDTO.cpf,ValidCPF.cpf,ValidCPF.java.lang.String,ValidCPF]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.cpf,cpf]; arguments []; default message [cpf]]; default message [CPF deve ter formato válido 12345678909 ou 123.456.789-09)]] ]
2025-08-04 12:08:37.902 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@187b6f7, started on Mon Aug 04 12:08:36 BRT 2025
2025-08-04 12:08:37.906 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:37.906 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:37.907 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:37.907 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:37.907 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:37.908 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:37.908 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:37.908 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Shutdown initiated...
2025-08-04 12:08:37.909 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Shutdown completed.
2025-08-04 12:08:37.914 [main] INFO  [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.deliverytech.delivery.controller.PedidoControllerITTest]: PedidoControllerITTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 12:08:37.917 [main] INFO  [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.deliverytech.delivery.DeliveryApiApplication for test class com.deliverytech.delivery.controller.PedidoControllerITTest
2025-08-04 12:08:37.920 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:08:37.951 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 22168 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:08:37.951 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:08:37.951 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:08:37.952 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@293af38c
2025-08-04 12:08:38.189 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:38.189 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:08:38.202 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2025-08-04 12:08:38.204 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:38.204 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:08:38.208 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:38.208 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:38.208 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:38.209 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:38.209 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:38.209 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-08-04 12:08:38.309 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:08:38.310 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Starting...
2025-08-04 12:08:38.310 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-10 - Added connection conn90: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:08:38.311 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Start completed.
2025-08-04 12:08:38.311 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:08:38.368 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:38.368 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:38.368 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:38.368 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:38.368 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:38.368 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:38.369 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:08:38.370 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:08:38.371 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:08:38.372 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:08:38.373 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:08:38.374 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:08:38.375 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:08:38.376 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:08:38.377 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:08:38.377 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:38.378 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:38.380 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:38.601 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:08:38.880 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:08:39.115 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:08:39.187 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:08:39.234 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:08:39.279 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:08:39.288 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:08:39.375 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:08:39.387 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:08:39.387 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:08:39.387 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:08:39.388 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:08:39.388 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-08-04 12:08:39.402 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 1.483 seconds (process running for 33.751)
2025-08-04 12:08:39.405 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:08:39.409 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:08:39.410 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:08:39.412 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:08:39.769 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.770 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.770 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.771 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.771 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.772 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.773 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.774 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.774 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.774 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.775 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.775 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.777 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.778 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.778 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.779 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.779 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.779 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.781 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.782 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.783 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.783 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.784 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.784 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.785 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.786 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.786 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.786 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.787 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.787 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.788 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.788 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.789 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.790 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.790 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.791 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.791 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.791 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.792 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.792 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.792 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.793 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.794 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:39.795 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:39.796 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:39.797 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.798 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.799 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.799 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.800 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:39.801 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:39.801 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:39.802 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.803 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.803 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.804 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.805 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:39.805 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:39.806 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:39.806 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.807 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.807 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.807 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.808 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:39.809 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:39.809 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:39.810 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.810 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.810 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.811 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.812 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:39.812 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:39.812 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:39.813 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:39.813 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.814 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.815 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.815 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.815 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.817 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:08:39.820 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:08:39.822 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:08:39.825 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:08:39.827 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:08:39.829 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:08:39.831 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:08:39.833 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:08:39.833 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.836 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:08:39.836 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.838 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:08:39.839 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.840 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.840 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.840 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.841 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.843 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:39.845 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:39.845 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:39.846 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.846 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:39.846 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.848 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:08:39.848 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:39.849 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.849 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:39.849 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.850 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:39.850 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.853 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:39.857 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.858 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.863 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:08:39.865 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:08:39.866 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.866 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.866 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.867 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.867 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.867 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.871 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:39.874 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.restaurante_id,
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco 
    from
        produtos p1_0 
    where
        p1_0.restaurante_id=?
2025-08-04 12:08:39.886 [main] DEBUG [] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-04 12:08:39.887 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.891 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-04 12:08:39.893 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:39.895 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-04 12:08:39.895 [main] DEBUG [b029365900864542] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-04 12:08:39.901 [main] DEBUG [b029365900864542] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=1, numeroPedido='PEDIDO20250729', dataPedido='2025-08-04T12:08:39.886774' (truncated)...]
2025-08-04 12:08:39.960 [main] DEBUG [b029365900864542] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 12:08:39.962 [main] DEBUG [b029365900864542] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 12:08:39.963 [main] DEBUG [b029365900864542] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:39.964 [main] DEBUG [b029365900864542] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:39.965 [main] DEBUG [b029365900864542] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:39.966 [main] DEBUG [b029365900864542] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.983 [main] DEBUG [b029365900864542] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:39.986 [main] DEBUG [b029365900864542] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-04 12:08:39.989 [main] DEBUG [b029365900864542] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:08:39.989 [main] DEBUG [b029365900864542] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@6fbcb1f9]
2025-08-04 12:08:40.001 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@293af38c, started on Mon Aug 04 12:08:37 BRT 2025
2025-08-04 12:08:40.006 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:40.006 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:40.008 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:40.009 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:40.010 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:40.010 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:40.011 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:40.012 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Shutdown initiated...
2025-08-04 12:08:40.013 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Shutdown completed.
2025-08-04 12:08:40.015 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:08:40.048 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 22168 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:08:40.049 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:08:40.049 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:08:40.050 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@32d1bbd6
2025-08-04 12:08:40.257 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:40.257 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:08:40.282 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 5 JPA repository interfaces.
2025-08-04 12:08:40.284 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:40.284 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:08:40.288 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:40.288 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:40.289 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:40.289 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:40.289 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:40.289 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-08-04 12:08:40.360 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:08:40.360 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-11 - Starting...
2025-08-04 12:08:40.361 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-11 - Added connection conn100: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:08:40.361 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-11 - Start completed.
2025-08-04 12:08:40.361 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:08:40.410 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:40.410 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:40.410 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:40.410 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:40.410 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:40.410 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:40.410 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:08:40.411 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:08:40.412 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:08:40.412 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:08:40.413 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:08:40.413 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:08:40.414 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:08:40.415 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:08:40.415 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:08:40.416 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:40.416 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:40.417 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:40.525 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:08:40.606 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:08:40.652 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:08:40.744 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:08:40.790 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:08:40.828 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:08:40.836 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:08:40.921 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:08:40.933 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:08:40.933 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:08:40.933 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:08:40.933 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:08:40.934 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 12:08:40.948 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 0.933 seconds (process running for 35.296)
2025-08-04 12:08:40.951 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:08:40.954 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:08:40.956 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:08:40.957 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:08:41.316 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.317 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.318 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.319 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.319 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.320 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.321 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.322 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.322 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.322 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.322 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.323 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.325 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.325 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.326 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.326 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.327 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.327 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.328 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.330 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.330 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.331 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.331 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.332 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.332 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.333 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.334 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.334 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.335 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.335 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.336 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.336 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.336 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.336 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.337 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.337 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.337 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.338 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.338 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.338 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.339 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.339 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.340 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:41.342 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:41.342 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:41.343 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.344 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.344 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.345 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.346 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:41.346 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:41.347 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:41.347 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.348 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.348 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.349 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.350 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:41.351 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:41.351 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:41.352 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.352 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.353 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.353 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.354 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:41.355 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:41.355 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:41.356 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.356 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.357 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.357 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.358 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:41.358 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:41.359 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:41.360 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:41.360 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.361 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.362 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.362 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.362 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.364 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:08:41.366 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:08:41.369 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:08:41.370 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:08:41.372 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:08:41.374 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:08:41.375 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:08:41.377 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:08:41.378 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.380 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:08:41.381 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.382 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:08:41.383 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.383 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.384 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.384 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.384 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.386 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:41.388 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:41.388 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:41.389 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.389 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:41.389 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.391 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:08:41.392 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:41.392 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.392 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:41.393 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.393 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:41.393 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.395 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:41.399 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.400 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:41.404 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:08:41.406 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:08:41.406 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.407 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.407 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.407 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.407 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.409 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.413 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-04 12:08:41.414 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:41.415 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-04 12:08:41.415 [main] DEBUG [d547b7a7415b42cc] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-04 12:08:41.418 [main] DEBUG [d547b7a7415b42cc] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=null, numeroPedido='null', dataPedido='null', valorTotal=null, observacoe (truncated)...]
2025-08-04 12:08:41.437 [main] WARN  [d547b7a7415b42cc] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.deliverytech.delivery.dto.response.ApiResponseWrapper<com.deliverytech.delivery.dto.response.PedidoResponseDTO>> com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO) with 9 errors: [Field error in object 'pedidoRequestDTO' on field 'clienteId': rejected value [null]; codes [NotNull.pedidoRequestDTO.clienteId,NotNull.clienteId,NotNull.java.lang.Long,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.clienteId,clienteId]; arguments []; default message [clienteId]]; default message [O status do pedido é obrigatório]] [Field error in object 'pedidoRequestDTO' on field 'cep': rejected value [null]; codes [ValidCEP.pedidoRequestDTO.cep,ValidCEP.cep,ValidCEP.java.lang.String,ValidCEP]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.cep,cep]; arguments []; default message [cep]]; default message [CEP deve ter formato válido (00000-000 ou 00000000)]] [Field error in object 'pedidoRequestDTO' on field 'restauranteId': rejected value [null]; codes [NotNull.pedidoRequestDTO.restauranteId,NotNull.restauranteId,NotNull.java.lang.Long,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.restauranteId,restauranteId]; arguments []; default message [restauranteId]]; default message [O restaurante é obrigatório]] [Field error in object 'pedidoRequestDTO' on field 'formaPagamento': rejected value [null]; codes [NotBlank.pedidoRequestDTO.formaPagamento,NotBlank.formaPagamento,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.formaPagamento,formaPagamento]; arguments []; default message [formaPagamento]]; default message [Forma de pagamento é obrigatória]] [Field error in object 'pedidoRequestDTO' on field 'clienteId': rejected value [null]; codes [NotNull.pedidoRequestDTO.clienteId,NotNull.clienteId,NotNull.java.lang.Long,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.clienteId,clienteId]; arguments []; default message [clienteId]]; default message [O id do cliente é obrigatório]] [Field error in object 'pedidoRequestDTO' on field 'cep': rejected value [null]; codes [NotBlank.pedidoRequestDTO.cep,NotBlank.cep,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.cep,cep]; arguments []; default message [cep]]; default message [CEP é obrigatório]] [Field error in object 'pedidoRequestDTO' on field 'dataPedido': rejected value [null]; codes [NotNull.pedidoRequestDTO.dataPedido,NotNull.dataPedido,NotNull.java.time.LocalDateTime,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.dataPedido,dataPedido]; arguments []; default message [dataPedido]]; default message [A data do pedido é obrigatória]] [Field error in object 'pedidoRequestDTO' on field 'numeroPedido': rejected value [null]; codes [NotNull.pedidoRequestDTO.numeroPedido,NotNull.numeroPedido,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.numeroPedido,numeroPedido]; arguments []; default message [numeroPedido]]; default message [O número do pedido é obrigatório]] [Field error in object 'pedidoRequestDTO' on field 'valorTotal': rejected value [null]; codes [NotNull.pedidoRequestDTO.valorTotal,NotNull.valorTotal,NotNull.java.math.BigDecimal,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.valorTotal,valorTotal]; arguments []; default message [valorTotal]]; default message [O valor do pedido é obrigatório]] ]
2025-08-04 12:08:41.441 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/pedidos/clientes/1/pedidos
2025-08-04 12:08:41.441 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:41.442 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/pedidos/clientes/1/pedidos
2025-08-04 12:08:41.443 [main] DEBUG [603fc28fab5a44dc] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#buscarPedidosPorCliente(Long)
2025-08-04 12:08:41.443 [main] DEBUG [603fc28fab5a44dc] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.buscarPedidosPorCliente(java.lang.Long); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 12:08:41.445 [main] DEBUG [603fc28fab5a44dc] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.buscarPedidosPorCliente(java.lang.Long); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 12:08:41.446 [main] DEBUG [603fc28fab5a44dc] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:41.447 [main] DEBUG [603fc28fab5a44dc] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:41.448 [main] DEBUG [603fc28fab5a44dc] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:41.451 [main] DEBUG [603fc28fab5a44dc] org.hibernate.SQL - 
    select
        i1_0.pedido_id,
        i1_0.id,
        i1_0.preco_unitario,
        p2_0.id,
        p2_0.categoria,
        p2_0.descricao,
        p2_0.disponivel,
        p2_0.estoque,
        p2_0.nome,
        p2_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos,
        i1_0.quantidade,
        i1_0.subtotal 
    from
        itens_pedido i1_0 
    left join
        produtos p2_0 
            on p2_0.id=i1_0.produto_id 
    left join
        restaurantes r1_0 
            on r1_0.id=p2_0.restaurante_id 
    where
        i1_0.pedido_id=?
2025-08-04 12:08:41.454 [main] DEBUG [603fc28fab5a44dc] org.hibernate.SQL - 
    select
        i1_0.pedido_id,
        i1_0.id,
        i1_0.preco_unitario,
        p2_0.id,
        p2_0.categoria,
        p2_0.descricao,
        p2_0.disponivel,
        p2_0.estoque,
        p2_0.nome,
        p2_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos,
        i1_0.quantidade,
        i1_0.subtotal 
    from
        itens_pedido i1_0 
    left join
        produtos p2_0 
            on p2_0.id=i1_0.produto_id 
    left join
        restaurantes r1_0 
            on r1_0.id=p2_0.restaurante_id 
    where
        i1_0.pedido_id=?
2025-08-04 12:08:41.457 [main] DEBUG [603fc28fab5a44dc] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:08:41.457 [main] DEBUG [603fc28fab5a44dc] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@639dc7d2]
2025-08-04 12:08:41.465 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@32d1bbd6, started on Mon Aug 04 12:08:40 BRT 2025
2025-08-04 12:08:41.470 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:41.470 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:41.471 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:41.471 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:41.471 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:41.471 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:41.471 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:41.472 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-11 - Shutdown initiated...
2025-08-04 12:08:41.472 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-11 - Shutdown completed.
2025-08-04 12:08:41.475 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:08:41.497 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 22168 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:08:41.498 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:08:41.498 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:08:41.499 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@208985b7
2025-08-04 12:08:41.699 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:41.700 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:08:41.713 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2025-08-04 12:08:41.714 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:41.714 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:08:41.718 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:41.718 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:41.718 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:41.718 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:41.719 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:41.719 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-08-04 12:08:41.788 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:08:41.788 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-12 - Starting...
2025-08-04 12:08:41.789 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-12 - Added connection conn110: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:08:41.789 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-12 - Start completed.
2025-08-04 12:08:41.789 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:08:41.843 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:41.844 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:41.844 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:41.844 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:41.844 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:41.844 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:41.844 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:08:41.845 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:08:41.846 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:08:41.846 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:08:41.847 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:08:41.847 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:08:41.848 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:08:41.848 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:08:41.849 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:08:41.850 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:41.850 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:41.851 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:41.965 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:08:42.043 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:08:42.075 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:08:42.125 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:08:42.167 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:08:42.211 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:08:42.223 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:08:42.342 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:08:42.361 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:08:42.361 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:08:42.361 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:08:42.361 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:08:42.362 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 12:08:42.380 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 0.906 seconds (process running for 36.728)
2025-08-04 12:08:42.384 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:08:42.389 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:08:42.391 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:08:42.412 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:08:42.772 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.773 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.773 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.774 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.774 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.774 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.776 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.776 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.777 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.777 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.777 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.778 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.779 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.780 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.780 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.781 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.781 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.782 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.783 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.784 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.785 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.786 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.786 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.787 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.787 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.788 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.788 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.789 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.789 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.789 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.790 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.790 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.790 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.791 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.791 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.791 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.791 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.792 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.792 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.792 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.793 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.793 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.794 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:42.795 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:42.796 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:42.797 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.797 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.798 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.799 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.800 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:42.800 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:42.801 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:42.801 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.802 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.803 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.803 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.804 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:42.805 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:42.805 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:42.806 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.807 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.807 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.807 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.808 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:42.809 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:42.810 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:42.810 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.811 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.811 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.812 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.812 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:42.813 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:42.813 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:42.814 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:42.814 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.815 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.816 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.816 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.816 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.819 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:08:42.820 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:08:42.823 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:08:42.826 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:08:42.828 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:08:42.830 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:08:42.831 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:08:42.833 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:08:42.834 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.835 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:08:42.836 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.838 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:08:42.839 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.840 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.840 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.840 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.841 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.843 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:42.845 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:42.846 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:42.846 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.846 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:42.846 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.848 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:08:42.848 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:42.849 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.849 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:42.849 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.849 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:42.849 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.851 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:42.855 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.856 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.861 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:08:42.863 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:08:42.863 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.863 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.864 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.864 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.864 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.864 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.866 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:42.866 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.restaurante_id,
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco 
    from
        produtos p1_0 
    where
        p1_0.restaurante_id=?
2025-08-04 12:08:42.868 [main] DEBUG [] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-04 12:08:42.869 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.873 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-04 12:08:42.874 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:42.875 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-04 12:08:42.876 [main] DEBUG [6ae6bc9a9d904724] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-04 12:08:42.878 [main] DEBUG [6ae6bc9a9d904724] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=1, numeroPedido='PEDIDO20250729', dataPedido='2025-08-04T12:08:42.8703527 (truncated)...]
2025-08-04 12:08:42.894 [main] DEBUG [6ae6bc9a9d904724] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 12:08:42.895 [main] DEBUG [6ae6bc9a9d904724] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 12:08:42.896 [main] DEBUG [6ae6bc9a9d904724] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:42.897 [main] DEBUG [6ae6bc9a9d904724] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:42.897 [main] DEBUG [6ae6bc9a9d904724] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:42.898 [main] DEBUG [6ae6bc9a9d904724] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.903 [main] DEBUG [6ae6bc9a9d904724] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:42.904 [main] DEBUG [6ae6bc9a9d904724] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-04 12:08:42.907 [main] DEBUG [6ae6bc9a9d904724] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:08:42.907 [main] DEBUG [6ae6bc9a9d904724] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@2dd004ae]
2025-08-04 12:08:42.912 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing PATCH /api/pedidos/6/status
2025-08-04 12:08:42.912 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:42.913 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured PATCH /api/pedidos/6/status
2025-08-04 12:08:42.913 [main] DEBUG [413562ba500c45f3] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#atualizarStatus(Long, StatusPedido)
2025-08-04 12:08:42.915 [main] DEBUG [413562ba500c45f3] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [CONFIRMADO]
2025-08-04 12:08:42.920 [main] DEBUG [413562ba500c45f3] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.atualizarStatus(java.lang.Long,com.deliverytech.delivery.enums.StatusPedido); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 12:08:42.921 [main] DEBUG [413562ba500c45f3] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.atualizarStatus(java.lang.Long,com.deliverytech.delivery.enums.StatusPedido); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 12:08:42.921 [main] DEBUG [413562ba500c45f3] org.hibernate.SQL - 
    select
        p1_0.id,
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:42.924 [main] DEBUG [413562ba500c45f3] org.hibernate.SQL - 
    select
        i1_0.pedido_id,
        i1_0.id,
        i1_0.preco_unitario,
        p2_0.id,
        p2_0.categoria,
        p2_0.descricao,
        p2_0.disponivel,
        p2_0.estoque,
        p2_0.nome,
        p2_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos,
        i1_0.quantidade,
        i1_0.subtotal 
    from
        itens_pedido i1_0 
    left join
        produtos p2_0 
            on p2_0.id=i1_0.produto_id 
    left join
        restaurantes r1_0 
            on r1_0.id=p2_0.restaurante_id 
    where
        i1_0.pedido_id=?
2025-08-04 12:08:42.926 [main] DEBUG [413562ba500c45f3] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Pedido */update pedidos 
    set
        cliente_id=?,
        data_pedido=?,
        endereco_entrega=?,
        numero_pedido=?,
        observacoes=?,
        restaurante_id=?,
        status=?,
        subtotal=?,
        taxa_entrega=?,
        valor_total=? 
    where
        id=?
2025-08-04 12:08:42.927 [main] DEBUG [413562ba500c45f3] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:08:42.927 [main] DEBUG [413562ba500c45f3] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@623e5b7c]
2025-08-04 12:08:42.933 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@208985b7, started on Mon Aug 04 12:08:41 BRT 2025
2025-08-04 12:08:42.936 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:42.936 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:42.937 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:42.937 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:42.937 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:42.938 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:42.938 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:42.938 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-12 - Shutdown initiated...
2025-08-04 12:08:42.939 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-12 - Shutdown completed.
2025-08-04 12:08:42.941 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:08:42.962 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 22168 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:08:42.962 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:08:42.962 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:08:42.963 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@3d0e5018
2025-08-04 12:08:43.158 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:43.158 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:08:43.172 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 5 JPA repository interfaces.
2025-08-04 12:08:43.173 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:43.173 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:08:43.177 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:43.177 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:43.177 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:43.177 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:43.177 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:43.177 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-08-04 12:08:43.244 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:08:43.245 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-13 - Starting...
2025-08-04 12:08:43.246 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-13 - Added connection conn120: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:08:43.246 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-13 - Start completed.
2025-08-04 12:08:43.246 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:08:43.296 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:43.296 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:43.296 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:43.296 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:43.296 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:43.296 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:43.297 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:08:43.297 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:08:43.298 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:08:43.298 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:08:43.299 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:08:43.300 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:08:43.301 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:08:43.301 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:08:43.302 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:08:43.302 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:43.303 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:43.304 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:43.428 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:08:43.517 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:08:43.548 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:08:43.598 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:08:43.641 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:08:43.677 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:08:43.685 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:08:43.767 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:08:43.779 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:08:43.779 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:08:43.779 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:08:43.779 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:08:43.780 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 12:08:43.793 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 0.853 seconds (process running for 38.142)
2025-08-04 12:08:43.796 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:08:43.798 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:08:43.799 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:08:43.800 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:08:44.155 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.156 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.156 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.156 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.157 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.157 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.158 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.159 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.159 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.159 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.160 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.160 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.161 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.162 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.163 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.163 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.163 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.164 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.165 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.166 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.166 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.167 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.167 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.168 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.168 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.169 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.169 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.170 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.170 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.170 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.170 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.171 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.171 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.171 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.172 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.172 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.172 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.172 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.173 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.173 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.173 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.173 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.175 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:44.176 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:44.176 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:44.177 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.178 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.179 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.179 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.180 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:44.181 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:44.181 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:44.182 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.182 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.183 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.183 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.184 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:44.185 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:44.185 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:44.186 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.186 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.187 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.187 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.188 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:44.188 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:44.189 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:44.189 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.190 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.190 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.191 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.191 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:44.192 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:44.193 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:44.193 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:44.193 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.194 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.195 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.195 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.195 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.198 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:08:44.200 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:08:44.204 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:08:44.206 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:08:44.209 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:08:44.211 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:08:44.214 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:08:44.217 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:08:44.218 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.220 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:08:44.221 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.223 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:08:44.224 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.224 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.225 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.225 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.225 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.227 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:44.230 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:44.230 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:44.231 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.231 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:44.231 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.233 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:08:44.234 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:44.234 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.235 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:44.235 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.235 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:44.235 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.237 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:44.241 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.243 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:44.249 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:08:44.252 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:08:44.253 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.253 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.253 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.254 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.254 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.254 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.255 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.259 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-04 12:08:44.260 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:44.262 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-04 12:08:44.262 [main] DEBUG [9a9b71cae22f422d] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-04 12:08:44.266 [main] DEBUG [9a9b71cae22f422d] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=1, numeroPedido='PEDIDO20250729', dataPedido='2025-08-04T12:08:44.2554489 (truncated)...]
2025-08-04 12:08:44.282 [main] DEBUG [9a9b71cae22f422d] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 12:08:44.283 [main] DEBUG [9a9b71cae22f422d] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 12:08:44.284 [main] DEBUG [9a9b71cae22f422d] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:44.285 [main] DEBUG [9a9b71cae22f422d] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:44.285 [main] DEBUG [9a9b71cae22f422d] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:44.291 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@3d0e5018, started on Mon Aug 04 12:08:42 BRT 2025
2025-08-04 12:08:44.297 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:44.297 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:44.297 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:44.298 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:44.298 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:44.298 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:44.298 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:44.299 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-13 - Shutdown initiated...
2025-08-04 12:08:44.299 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-13 - Shutdown completed.
2025-08-04 12:08:44.305 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:08:44.328 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 22168 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:08:44.328 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:08:44.328 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:08:44.329 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@31e7825
2025-08-04 12:08:44.547 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:44.547 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:08:44.559 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 5 JPA repository interfaces.
2025-08-04 12:08:44.561 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:44.561 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:08:44.565 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:44.565 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:44.565 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:44.565 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:44.565 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:44.566 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-08-04 12:08:44.634 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:08:44.635 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-14 - Starting...
2025-08-04 12:08:44.636 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-14 - Added connection conn130: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:08:44.636 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-14 - Start completed.
2025-08-04 12:08:44.636 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:08:44.679 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:44.679 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:44.679 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:44.679 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:44.679 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:44.679 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:44.680 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:08:44.680 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:08:44.681 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:08:44.681 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:08:44.682 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:08:44.682 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:08:44.683 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:08:44.683 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:08:44.684 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:08:44.684 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:44.685 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:44.686 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:44.790 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:08:44.867 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:08:44.900 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:08:44.966 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:08:45.035 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:08:45.073 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:08:45.080 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:08:45.157 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:08:45.169 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:08:45.169 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:08:45.169 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:08:45.169 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:08:45.171 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-08-04 12:08:45.185 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 0.881 seconds (process running for 39.533)
2025-08-04 12:08:45.188 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:08:45.191 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:08:45.192 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:08:45.193 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:08:45.545 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.546 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.546 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.547 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.547 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.547 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.549 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.550 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.550 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.551 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.551 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.551 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.553 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.554 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.555 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.555 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.555 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.556 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.557 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.559 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.559 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.560 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.561 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.561 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.562 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.563 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.564 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.564 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.564 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.564 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.565 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.565 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.566 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.567 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.567 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.567 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.567 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.568 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.568 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.568 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.568 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.570 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.571 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:45.573 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:45.574 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:45.576 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.577 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.578 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.579 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.581 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:45.583 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:45.585 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:45.586 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.587 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.588 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.589 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.590 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:45.591 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:45.592 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:45.593 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.595 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.596 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.596 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.598 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:45.599 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:45.600 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:45.601 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.602 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.603 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.603 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.605 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:45.606 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:45.607 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:45.607 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:45.608 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.609 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.610 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.610 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.610 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.613 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:08:45.616 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:08:45.619 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:08:45.622 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:08:45.624 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:08:45.626 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:08:45.630 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:08:45.632 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:08:45.633 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.635 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:08:45.636 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.638 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:08:45.639 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.639 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.639 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.640 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.640 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.643 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:45.646 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:45.647 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:45.647 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.648 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:45.648 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.650 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:08:45.651 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:45.651 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.652 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:45.652 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.652 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:45.652 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.655 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:45.659 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.661 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:45.667 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:08:45.668 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:08:45.669 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.669 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.670 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.670 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.670 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.670 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.671 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:45.671 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.restaurante_id,
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco 
    from
        produtos p1_0 
    where
        p1_0.restaurante_id=?
2025-08-04 12:08:45.673 [main] DEBUG [] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-04 12:08:45.673 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.678 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-04 12:08:45.679 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:45.680 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-04 12:08:45.681 [main] DEBUG [dcd86fb6c9ee454e] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-04 12:08:45.683 [main] DEBUG [dcd86fb6c9ee454e] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=1, numeroPedido='PEDIDO20250729', dataPedido='2025-08-04T12:08:45.6745931 (truncated)...]
2025-08-04 12:08:45.697 [main] DEBUG [dcd86fb6c9ee454e] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 12:08:45.698 [main] DEBUG [dcd86fb6c9ee454e] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 12:08:45.699 [main] DEBUG [dcd86fb6c9ee454e] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:45.700 [main] DEBUG [dcd86fb6c9ee454e] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:45.700 [main] DEBUG [dcd86fb6c9ee454e] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:45.704 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@31e7825, started on Mon Aug 04 12:08:44 BRT 2025
2025-08-04 12:08:45.710 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:45.710 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:45.710 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:45.710 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:45.710 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:45.710 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:45.711 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:45.711 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-14 - Shutdown initiated...
2025-08-04 12:08:45.712 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-14 - Shutdown completed.
2025-08-04 12:08:45.715 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:08:45.737 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 22168 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:08:45.737 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:08:45.738 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:08:45.740 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@d28a4c7
2025-08-04 12:08:45.950 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:45.950 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:08:45.963 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2025-08-04 12:08:45.965 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:45.965 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:08:45.968 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:45.970 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:45.970 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:45.970 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:45.970 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:45.970 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-08-04 12:08:46.043 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:08:46.044 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-15 - Starting...
2025-08-04 12:08:46.044 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-15 - Added connection conn140: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:08:46.044 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-15 - Start completed.
2025-08-04 12:08:46.045 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:08:46.092 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:46.092 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:46.092 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:46.092 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:46.092 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:46.092 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:46.093 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:08:46.094 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:08:46.094 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:08:46.094 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:08:46.095 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:08:46.095 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:08:46.096 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:08:46.097 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:08:46.097 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:08:46.098 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:46.099 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:46.100 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:46.194 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:08:46.271 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:08:46.302 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:08:46.358 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:08:46.398 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:08:46.443 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:08:46.451 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:08:46.526 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:08:46.538 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:08:46.538 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:08:46.538 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:08:46.538 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:08:46.539 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-08-04 12:08:46.552 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 0.837 seconds (process running for 40.901)
2025-08-04 12:08:46.555 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:08:46.557 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:08:46.558 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:08:46.560 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:08:46.917 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.918 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.918 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.919 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.919 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.919 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.920 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.921 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.921 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.921 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.922 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.922 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.923 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.924 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.925 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.925 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.925 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.926 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.927 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:46.927 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:46.929 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:46.929 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:46.930 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:46.930 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:46.931 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.931 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.931 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.932 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.932 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.932 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.932 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.933 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.933 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.933 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.933 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.934 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.934 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.934 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.934 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.934 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.935 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.935 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.936 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:46.937 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:46.937 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:46.938 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:46.939 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.939 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.940 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.940 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:46.941 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:46.941 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:46.942 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:46.942 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.943 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.943 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.945 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:46.946 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:46.947 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:46.948 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:46.948 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.949 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.949 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.950 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:46.951 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:46.951 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:46.951 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:46.952 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.952 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.953 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.953 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:46.954 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:46.954 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:46.955 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:46.955 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:46.955 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.956 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.956 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.957 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.958 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:08:46.960 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:08:46.962 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:08:46.964 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:08:46.965 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:08:46.967 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:08:46.968 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:08:46.970 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:08:46.971 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:46.973 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:08:46.973 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:46.975 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:08:46.975 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:46.976 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:46.976 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:46.976 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:46.977 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:46.978 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:46.980 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:46.981 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:46.981 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:46.981 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:46.982 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:46.983 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:08:46.984 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:46.984 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:46.984 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:46.984 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:46.984 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:46.985 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:46.986 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:46.990 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.991 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:46.996 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:08:46.998 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:08:46.999 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:46.999 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:46.999 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:47.000 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:47.000 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:47.000 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:47.002 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:47.002 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.restaurante_id,
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco 
    from
        produtos p1_0 
    where
        p1_0.restaurante_id=?
2025-08-04 12:08:47.004 [main] DEBUG [] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-04 12:08:47.004 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:47.009 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-04 12:08:47.010 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:47.011 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-04 12:08:47.011 [main] DEBUG [773966813fdd4795] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-04 12:08:47.014 [main] DEBUG [773966813fdd4795] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=1, numeroPedido='PEDIDO20250729', dataPedido='2025-08-04T12:08:47.0051346 (truncated)...]
2025-08-04 12:08:47.029 [main] DEBUG [773966813fdd4795] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 12:08:47.030 [main] DEBUG [773966813fdd4795] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 12:08:47.031 [main] DEBUG [773966813fdd4795] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:47.031 [main] DEBUG [773966813fdd4795] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:47.032 [main] DEBUG [773966813fdd4795] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:47.033 [main] DEBUG [773966813fdd4795] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:47.037 [main] DEBUG [773966813fdd4795] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:47.037 [main] DEBUG [773966813fdd4795] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:47.038 [main] DEBUG [773966813fdd4795] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-04 12:08:47.040 [main] DEBUG [773966813fdd4795] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:08:47.040 [main] DEBUG [773966813fdd4795] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@5b51042b]
2025-08-04 12:08:47.047 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@d28a4c7, started on Mon Aug 04 12:08:45 BRT 2025
2025-08-04 12:08:47.051 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:47.051 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:47.051 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:47.051 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:47.051 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:47.052 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:47.052 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:47.052 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-15 - Shutdown initiated...
2025-08-04 12:08:47.053 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-15 - Shutdown completed.
2025-08-04 12:08:47.058 [main] INFO  [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.deliverytech.delivery.controller.RestauranteControllerITTest]: RestauranteControllerITTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 12:08:47.060 [main] INFO  [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.deliverytech.delivery.DeliveryApiApplication for test class com.deliverytech.delivery.controller.RestauranteControllerITTest
2025-08-04 12:08:47.063 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:08:47.082 [main] INFO  [] c.d.d.c.RestauranteControllerITTest - Starting RestauranteControllerITTest using Java 21.0.1 with PID 22168 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:08:47.082 [main] DEBUG [] c.d.d.c.RestauranteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:08:47.082 [main] INFO  [] c.d.d.c.RestauranteControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:08:47.083 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@360018fd
2025-08-04 12:08:47.271 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:47.312 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:08:47.325 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 5 JPA repository interfaces.
2025-08-04 12:08:47.326 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:47.326 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:08:47.330 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:47.330 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:47.331 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:47.331 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:47.331 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:47.331 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-08-04 12:08:47.411 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:08:47.412 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-16 - Starting...
2025-08-04 12:08:47.413 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-16 - Added connection conn150: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:08:47.413 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-16 - Start completed.
2025-08-04 12:08:47.414 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:08:47.490 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:47.491 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:47.491 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:47.491 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:47.491 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:47.491 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:47.491 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:08:47.493 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:08:47.493 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:08:47.494 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:08:47.494 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:08:47.495 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:08:47.496 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:08:47.497 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:08:47.498 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:08:47.499 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:47.500 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:47.501 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:47.612 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:08:47.690 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:08:47.722 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:08:47.773 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:08:47.819 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:08:47.859 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:08:47.867 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:08:47.953 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:08:47.965 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:08:47.965 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:08:47.965 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:08:47.965 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:08:47.966 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 12:08:47.978 [main] INFO  [] c.d.d.c.RestauranteControllerITTest - Started RestauranteControllerITTest in 0.915 seconds (process running for 42.327)
2025-08-04 12:08:47.980 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:08:47.983 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:08:47.985 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:08:47.985 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:08:48.340 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.341 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.341 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.341 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.342 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.342 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.344 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.344 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.344 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.345 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.345 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.345 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.347 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.347 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.348 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.348 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.348 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.349 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.350 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:48.351 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:48.352 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:48.352 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:48.353 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:48.353 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:48.354 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.354 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.354 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.355 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.355 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.355 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.355 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.356 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.356 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.356 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.356 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.357 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.357 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.357 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.357 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.357 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.358 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.358 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.360 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:48.361 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:48.361 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:48.362 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:48.363 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.363 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.364 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.365 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:48.365 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:48.366 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:48.366 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:48.367 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.367 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.367 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.368 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:48.368 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:48.369 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:48.369 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:48.370 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.370 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.371 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.371 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:48.372 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:48.372 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:48.373 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:48.373 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.374 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.374 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.375 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:48.376 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:48.376 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:48.377 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:48.377 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:48.377 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.378 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.378 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.379 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.381 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:08:48.383 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:08:48.385 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:08:48.386 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:08:48.388 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:08:48.390 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:08:48.392 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:08:48.394 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:08:48.394 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:48.396 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:08:48.396 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:48.397 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:08:48.398 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:48.399 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:48.399 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:48.399 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:48.399 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:48.401 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:48.403 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:48.403 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:48.404 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:48.404 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:48.404 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:48.406 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:08:48.406 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:48.406 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:48.407 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:48.407 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:48.407 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:48.407 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:48.409 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:48.422 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.425 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes?page=0&size=10
2025-08-04 12:08:48.426 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:48.427 [main] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 12:08:48.428 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes?page=0&size=10
2025-08-04 12:08:48.428 [main] DEBUG [009ec312100d4a71] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#listarRestaurantesComFiltro(String, Boolean, Pageable)
2025-08-04 12:08:48.445 [main] DEBUG [009ec312100d4a71] org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Restaurante r 
    WHERE
        (
            :categoria IS NULL 
            OR r.categoria = :categoria
        ) 
        AND (
            :ativo IS NULL 
            OR r.ativo = :ativo
        ) */ select
            r1_0.id,
            r1_0.ativo,
            r1_0.avaliacao,
            r1_0.categoria,
            r1_0.data_criacao,
            r1_0.endereco,
            r1_0.horario_funcionamento,
            r1_0.nome,
            r1_0.taxa_entrega,
            r1_0.telefone,
            r1_0.tempo_entrega_minutos 
        from
            restaurantes r1_0 
        where
            (
                ? is null 
                or r1_0.categoria=?
            ) 
            and (
                ? is null 
                or r1_0.ativo=?
            ) 
        fetch
            first ? rows only
2025-08-04 12:08:48.450 [main] DEBUG [009ec312100d4a71] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:08:48.450 [main] DEBUG [009ec312100d4a71] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.PagedResponseWrapper@363badaa]
2025-08-04 12:08:48.471 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.474 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing PUT /api/restaurantes/8
2025-08-04 12:08:48.474 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:48.476 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured PUT /api/restaurantes/8
2025-08-04 12:08:48.476 [main] DEBUG [9c2363806eff4263] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#atualizarRestaurante(Long, RestauranteRequestDTO)
2025-08-04 12:08:48.478 [main] DEBUG [9c2363806eff4263] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RestauranteRequestDTO{ativo=true, nome='Pizza Express Atualizada', categoria='Italiana', endereco='R (truncated)...]
2025-08-04 12:08:48.489 [main] DEBUG [9c2363806eff4263] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.RestauranteController.atualizarRestaurante(java.lang.Long,com.deliverytech.delivery.dto.request.RestauranteRequestDTO); target is of class [com.deliverytech.delivery.controller.RestauranteController]
2025-08-04 12:08:48.490 [main] DEBUG [9c2363806eff4263] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.RestauranteController.atualizarRestaurante(java.lang.Long,com.deliverytech.delivery.dto.request.RestauranteRequestDTO); target is of class [com.deliverytech.delivery.controller.RestauranteController]
2025-08-04 12:08:48.495 [main] DEBUG [9c2363806eff4263] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:08:48.495 [main] DEBUG [9c2363806eff4263] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@5d4d2e0f]
2025-08-04 12:08:48.503 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.504 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes
2025-08-04 12:08:48.505 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:48.505 [main] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 12:08:48.505 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes
2025-08-04 12:08:48.506 [main] DEBUG [11ac4c4cbce6425a] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#listarRestaurantesComFiltro(String, Boolean, Pageable)
2025-08-04 12:08:48.508 [main] DEBUG [11ac4c4cbce6425a] org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Restaurante r 
    WHERE
        (
            :categoria IS NULL 
            OR r.categoria = :categoria
        ) 
        AND (
            :ativo IS NULL 
            OR r.ativo = :ativo
        ) */ select
            r1_0.id,
            r1_0.ativo,
            r1_0.avaliacao,
            r1_0.categoria,
            r1_0.data_criacao,
            r1_0.endereco,
            r1_0.horario_funcionamento,
            r1_0.nome,
            r1_0.taxa_entrega,
            r1_0.telefone,
            r1_0.tempo_entrega_minutos 
        from
            restaurantes r1_0 
        where
            (
                ? is null 
                or r1_0.categoria=?
            ) 
            and (
                ? is null 
                or r1_0.ativo=?
            ) 
        fetch
            first ? rows only
2025-08-04 12:08:48.509 [main] DEBUG [11ac4c4cbce6425a] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:08:48.509 [main] DEBUG [11ac4c4cbce6425a] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.PagedResponseWrapper@7773433e]
2025-08-04 12:08:48.522 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.525 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes/categoria/Americana
2025-08-04 12:08:48.525 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:48.526 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes/categoria/Americana
2025-08-04 12:08:48.527 [main] DEBUG [b0e0beaa00c34855] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#buscarRestaurantePorCategoria(String)
2025-08-04 12:08:48.529 [main] DEBUG [b0e0beaa00c34855] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:08:48.530 [main] DEBUG [b0e0beaa00c34855] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:08:48.530 [main] DEBUG [b0e0beaa00c34855] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@1da07452]
2025-08-04 12:08:48.541 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.543 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes/999
2025-08-04 12:08:48.543 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:48.544 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes/999
2025-08-04 12:08:48.544 [main] DEBUG [991bd478da56464d] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#buscarPorId(Long)
2025-08-04 12:08:48.546 [main] DEBUG [991bd478da56464d] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:48.555 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.556 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes/12
2025-08-04 12:08:48.557 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:48.558 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes/12
2025-08-04 12:08:48.558 [main] DEBUG [67da46c605af4500] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#buscarPorId(Long)
2025-08-04 12:08:48.560 [main] DEBUG [67da46c605af4500] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:08:48.560 [main] DEBUG [67da46c605af4500] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@1d9f114a]
2025-08-04 12:08:48.570 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.572 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing PATCH /api/restaurantes/13/status
2025-08-04 12:08:48.573 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:48.573 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured PATCH /api/restaurantes/13/status
2025-08-04 12:08:48.573 [main] DEBUG [c90a449f261f4dc6] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#ativarDesativarRestaurante(Long)
2025-08-04 12:08:48.576 [main] DEBUG [c90a449f261f4dc6] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:08:48.576 [main] DEBUG [c90a449f261f4dc6] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@18b8fad4]
2025-08-04 12:08:48.584 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.586 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/restaurantes
2025-08-04 12:08:48.586 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:48.587 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/restaurantes
2025-08-04 12:08:48.587 [main] DEBUG [a450395224db4367] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#cadastrarRestaurante(RestauranteRequestDTO)
2025-08-04 12:08:48.588 [main] DEBUG [a450395224db4367] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RestauranteRequestDTO{ativo=true, nome='', categoria='Italiana', endereco='Rua das Flores, 123', tel (truncated)...]
2025-08-04 12:08:48.589 [main] WARN  [a450395224db4367] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.deliverytech.delivery.dto.response.ApiResponseWrapper<com.deliverytech.delivery.dto.response.RestauranteResponseDTO>> com.deliverytech.delivery.controller.RestauranteController.cadastrarRestaurante(com.deliverytech.delivery.dto.request.RestauranteRequestDTO) with 5 errors: [Field error in object 'restauranteRequestDTO' on field 'nome': rejected value []; codes [Size.restauranteRequestDTO.nome,Size.nome,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restauranteRequestDTO.nome,nome]; arguments []; default message [nome],100,3]; default message [O nome do restaurante deve ter entre 3 e 100 caracteres]] [Field error in object 'restauranteRequestDTO' on field 'nome': rejected value []; codes [Size.restauranteRequestDTO.nome,Size.nome,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restauranteRequestDTO.nome,nome]; arguments []; default message [nome],100,2]; default message [O nome do restaurante deve ter entre 3 e 100 caracteres]] [Field error in object 'restauranteRequestDTO' on field 'telefone': rejected value [123]; codes [ValidTelefone.restauranteRequestDTO.telefone,ValidTelefone.telefone,ValidTelefone.java.lang.String,ValidTelefone]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restauranteRequestDTO.telefone,telefone]; arguments []; default message [telefone]]; default message [Telefone deve ter formato válido (10 ou 11 digitos)]] [Field error in object 'restauranteRequestDTO' on field 'nome': rejected value []; codes [NotBlank.restauranteRequestDTO.nome,NotBlank.nome,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restauranteRequestDTO.nome,nome]; arguments []; default message [nome]]; default message [O nome do restaurante é obrigatório]] [Field error in object 'restauranteRequestDTO' on field 'telefone': rejected value [123]; codes [Pattern.restauranteRequestDTO.telefone,Pattern.telefone,Pattern.java.lang.String,Pattern]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restauranteRequestDTO.telefone,telefone]; arguments []; default message [telefone],[Ljakarta.validation.constraints.Pattern$Flag;@28dd7655,^\+?[0-9]{10,11}$]; default message [O telefone deve ser um número válido com 10 a 11 dígitos]] ]
2025-08-04 12:08:48.597 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.600 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/restaurantes
2025-08-04 12:08:48.600 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:08:48.601 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/restaurantes
2025-08-04 12:08:48.601 [main] DEBUG [71219c3b56b24439] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#cadastrarRestaurante(RestauranteRequestDTO)
2025-08-04 12:08:48.602 [main] DEBUG [71219c3b56b24439] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RestauranteRequestDTO{ativo=true, nome='Pizza Express 123', categoria='Italiana', endereco='Rua das  (truncated)...]
2025-08-04 12:08:48.602 [main] DEBUG [71219c3b56b24439] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.RestauranteController.cadastrarRestaurante(com.deliverytech.delivery.dto.request.RestauranteRequestDTO); target is of class [com.deliverytech.delivery.controller.RestauranteController]
2025-08-04 12:08:48.603 [main] DEBUG [71219c3b56b24439] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.RestauranteController.cadastrarRestaurante(com.deliverytech.delivery.dto.request.RestauranteRequestDTO); target is of class [com.deliverytech.delivery.controller.RestauranteController]
2025-08-04 12:08:48.605 [main] DEBUG [71219c3b56b24439] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.nome=?
2025-08-04 12:08:48.607 [main] DEBUG [71219c3b56b24439] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:48.609 [main] DEBUG [71219c3b56b24439] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:08:48.609 [main] DEBUG [71219c3b56b24439] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@71956711]
2025-08-04 12:08:48.616 [main] INFO  [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.deliverytech.delivery.DeliveryApiApplicationTests]: DeliveryApiApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 12:08:48.620 [main] INFO  [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.deliverytech.delivery.DeliveryApiApplication for test class com.deliverytech.delivery.DeliveryApiApplicationTests
2025-08-04 12:08:48.622 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:08:48.631 [main] INFO  [] c.d.d.DeliveryApiApplicationTests - Starting DeliveryApiApplicationTests using Java 21.0.1 with PID 22168 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:08:48.631 [main] DEBUG [] c.d.d.DeliveryApiApplicationTests - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:08:48.631 [main] INFO  [] c.d.d.DeliveryApiApplicationTests - The following 1 profile is active: "development"
2025-08-04 12:08:48.632 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@3edfa8a9
2025-08-04 12:08:48.825 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:48.825 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:08:48.837 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 5 JPA repository interfaces.
2025-08-04 12:08:48.838 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:08:48.838 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:08:48.842 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:48.842 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:48.842 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:48.842 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:48.842 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:08:48.842 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-08-04 12:08:48.979 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:08:48.980 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-17 - Starting...
2025-08-04 12:08:48.981 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-17 - Added connection conn160: url=jdbc:h2:mem:deliverydb user=SA
2025-08-04 12:08:48.981 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-17 - Start completed.
2025-08-04 12:08:48.982 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:08:49.027 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:49.027 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:49.027 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:49.027 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:49.028 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:49.028 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:49.028 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:08:49.029 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:08:49.029 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:08:49.029 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:08:49.030 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:08:49.030 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:08:49.031 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:08:49.031 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:08:49.032 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:08:49.032 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:49.033 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:08:49.034 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:49.123 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:08:49.195 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:08:49.230 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:08:49.279 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:08:49.323 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:08:49.362 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:08:49.370 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:08:49.474 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-04 12:08:49.530 [main] INFO  [] c.d.d.DeliveryApiApplicationTests - Started DeliveryApiApplicationTests in 0.908 seconds (process running for 43.878)
2025-08-04 12:08:49.533 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:08:49.537 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:08:49.539 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:08:49.540 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:08:49.895 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.896 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.896 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.896 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.897 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.897 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.898 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.900 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.900 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.900 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.900 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.900 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.901 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.902 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.902 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.902 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.902 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.903 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.904 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:49.905 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:49.905 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:49.906 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:49.906 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:49.906 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:49.907 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.908 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.908 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.908 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.908 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.909 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.909 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.909 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.909 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.909 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.909 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.909 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.909 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.911 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.911 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.911 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.911 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.912 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.912 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:49.913 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:49.915 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:49.916 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:49.916 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.917 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.917 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.918 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:49.919 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:49.919 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:49.919 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:49.920 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.920 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.920 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.921 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:49.921 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:49.922 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:49.922 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:49.923 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.923 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.923 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.924 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:49.924 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:49.924 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:49.925 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:49.925 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.925 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.925 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.926 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:49.926 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:49.927 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:49.927 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:08:49.927 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:49.928 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.928 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.929 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.930 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:08:49.932 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:08:49.934 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:08:49.936 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:08:49.937 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:08:49.939 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:08:49.940 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:08:49.942 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:08:49.944 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:08:49.945 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:49.947 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:08:49.948 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:49.949 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:08:49.950 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:49.950 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:49.950 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:49.950 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:49.950 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:49.952 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:49.954 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:49.954 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:49.954 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:49.954 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:49.955 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:49.956 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:08:49.956 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:49.956 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:49.957 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:49.957 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:49.957 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:08:49.957 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:08:49.959 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:08:51.076 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-04 12:08:51.093 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-04 12:08:51.383 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:51.384 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:51.386 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:51.388 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:51.389 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:51.391 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:51.392 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:51.395 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-04 12:08:51.397 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-04 12:08:51.434 [SpringApplicationShutdownHook] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@360018fd, started on Mon Aug 04 12:08:47 BRT 2025
2025-08-04 12:08:51.446 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:51.447 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:51.449 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:51.450 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:51.451 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:51.453 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:51.453 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:51.455 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-16 - Shutdown initiated...
2025-08-04 12:08:51.457 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-16 - Shutdown completed.
2025-08-04 12:08:51.458 [SpringApplicationShutdownHook] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@3edfa8a9, started on Mon Aug 04 12:08:48 BRT 2025
2025-08-04 12:08:51.465 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:08:51.465 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:08:51.466 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:08:51.466 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:08:51.466 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:08:51.467 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:08:51.467 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:08:51.469 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-17 - Shutdown initiated...
2025-08-04 12:08:51.472 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-17 - Shutdown completed.
2025-08-04 12:09:34.776 [main] INFO  [] c.d.delivery.config.DataBaseTest - Starting DataBaseTest using Java 21.0.1 with PID 19832 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:09:34.830 [main] DEBUG [] c.d.delivery.config.DataBaseTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:09:34.832 [main] INFO  [] c.d.delivery.config.DataBaseTest - The following 1 profile is active: "test"
2025-08-04 12:09:34.866 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6f2d3391
2025-08-04 12:09:37.287 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:09:37.290 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:09:37.546 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 243 ms. Found 5 JPA repository interfaces.
2025-08-04 12:09:37.570 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:09:37.573 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:09:37.601 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:37.602 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:37.602 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:37.602 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:37.603 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:37.603 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2025-08-04 12:09:39.077 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:09:39.119 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-04 12:09:39.583 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:09:39.587 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-04 12:09:39.650 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:09:41.351 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:09:41.357 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:09:41.358 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:09:41.358 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:09:41.358 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:09:41.359 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:09:41.366 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:09:41.379 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:09:41.381 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:09:41.382 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:09:41.384 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:09:41.386 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:09:41.390 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:09:41.410 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:09:41.412 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:09:41.413 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:09:41.415 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:09:41.421 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:09:41.806 [main] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-04 12:09:43.334 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:09:43.999 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:09:44.172 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:09:44.723 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:09:44.884 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:09:45.089 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:09:45.161 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:09:45.984 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:09:46.053 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:09:46.053 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:09:46.054 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:09:46.054 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:09:46.056 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 12:09:46.157 [main] INFO  [] c.d.delivery.config.DataBaseTest - Started DataBaseTest in 12.284 seconds (process running for 14.677)
2025-08-04 12:09:46.396 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:09:46.470 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:09:46.472 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:09:46.474 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:09:46.870 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.888 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.888 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.890 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.891 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.892 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.904 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.906 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.906 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.907 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.908 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.909 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.924 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.927 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.928 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.929 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.930 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.931 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.946 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:46.958 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:46.959 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:46.961 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:46.962 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:46.963 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:46.965 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.966 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.967 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.968 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.968 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.969 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.970 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.971 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.971 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.972 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.973 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.974 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.975 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.976 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.977 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.977 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.978 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.979 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.983 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:46.986 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:46.987 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:46.989 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:46.991 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.994 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:46.995 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:47.002 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:47.004 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:47.006 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:47.008 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:47.010 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:47.011 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:47.011 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:47.013 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:47.014 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:47.015 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:47.016 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:47.018 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:47.018 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:47.019 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:47.021 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:47.022 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:47.023 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:47.024 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:47.026 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:47.027 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:47.027 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:47.029 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:47.030 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:47.031 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:47.032 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:47.034 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:47.035 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:47.036 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:47.037 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:47.038 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:47.084 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:09:47.090 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:09:47.100 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:09:47.107 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:09:47.112 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:09:47.118 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:09:47.123 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:09:47.128 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:09:47.130 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:47.136 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:09:47.137 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:47.140 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:09:47.141 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:47.142 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:47.142 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:47.143 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:47.144 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:47.148 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:09:47.153 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:09:47.155 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:47.156 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:47.157 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:47.158 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:47.166 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:09:47.167 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:47.167 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:47.168 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:47.169 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:47.170 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:47.170 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:47.175 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:09:47.198 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:47.200 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:47.762 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@6f2d3391, started on Mon Aug 04 12:09:34 BRT 2025
2025-08-04 12:09:47.784 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:09:47.785 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:09:47.787 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:09:47.787 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:09:47.788 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:09:47.789 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:09:47.789 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:09:47.792 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-04 12:09:47.794 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-04 12:09:47.811 [main] INFO  [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.deliverytech.delivery.config.SwaggerIntegrationTest]: SwaggerIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 12:09:47.813 [main] INFO  [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.deliverytech.delivery.DeliveryApiApplication for test class com.deliverytech.delivery.config.SwaggerIntegrationTest
2025-08-04 12:09:47.827 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:09:47.872 [main] INFO  [] c.d.d.config.SwaggerIntegrationTest - Starting SwaggerIntegrationTest using Java 21.0.1 with PID 19832 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:09:47.872 [main] DEBUG [] c.d.d.config.SwaggerIntegrationTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:09:47.872 [main] INFO  [] c.d.d.config.SwaggerIntegrationTest - The following 1 profile is active: "development"
2025-08-04 12:09:48.206 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:09:48.206 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:09:48.225 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 5 JPA repository interfaces.
2025-08-04 12:09:48.227 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:09:48.227 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:09:48.234 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:48.235 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:48.235 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:48.235 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:48.235 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:48.235 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-08-04 12:09:48.530 [main] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2025-08-04 12:09:48.553 [main] INFO  [] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2025-08-04 12:09:48.556 [main] INFO  [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-04 12:09:48.556 [main] INFO  [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-04 12:09:48.659 [main] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-04 12:09:48.660 [main] INFO  [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 786 ms
2025-08-04 12:09:48.806 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:09:48.807 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-04 12:09:48.809 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:deliverydb user=SA
2025-08-04 12:09:48.809 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-04 12:09:48.810 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:09:48.899 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:09:48.900 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:09:48.900 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:09:48.900 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:09:48.900 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:09:48.900 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:09:48.901 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:09:48.902 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:09:48.903 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:09:48.904 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:09:48.905 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:09:48.906 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:09:48.907 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:09:48.908 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:09:48.909 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:09:48.910 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:09:48.912 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:09:48.913 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:09:48.984 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:09:48.984 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:09:49.129 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:09:49.216 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:09:49.258 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:09:49.308 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:09:49.354 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:09:49.384 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:09:49.394 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:09:49.489 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-04 12:09:49.531 [main] INFO  [] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2025-08-04 12:09:49.548 [main] INFO  [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 58679 (http) with context path '/'
2025-08-04 12:09:49.556 [main] INFO  [] c.d.d.config.SwaggerIntegrationTest - Started SwaggerIntegrationTest in 1.73 seconds (process running for 18.079)
2025-08-04 12:09:49.561 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:09:49.565 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:09:49.567 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:09:49.569 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:09:49.928 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.930 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.931 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.932 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.932 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.933 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.936 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.937 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.939 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.940 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.940 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.941 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.944 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.946 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.947 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.948 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.949 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.951 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.954 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:49.956 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:49.957 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:49.958 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:49.959 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:49.960 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:49.962 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.963 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.964 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.964 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.965 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.966 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.967 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.967 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.968 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.969 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.970 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.970 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.971 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.971 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.972 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.972 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.973 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.974 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.976 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:49.979 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:49.980 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:49.982 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:49.984 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.985 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.986 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.988 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:49.989 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:49.990 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:49.991 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:49.992 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.993 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.994 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:49.996 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:49.998 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:49.999 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:50.000 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:50.002 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:50.003 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:50.003 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:50.005 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:50.007 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:50.008 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:50.010 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:50.011 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:50.013 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:50.014 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:50.015 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:50.017 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:50.018 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:50.018 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:50.019 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:50.021 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:50.022 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:50.023 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:50.025 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:50.028 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:09:50.031 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:09:50.035 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:09:50.038 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:09:50.040 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:09:50.044 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:09:50.048 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:09:50.052 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:09:50.052 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:50.055 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:09:50.056 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:50.060 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:09:50.062 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:50.062 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:50.063 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:50.064 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:50.065 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:50.068 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:09:50.071 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:09:50.072 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:50.073 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:50.074 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:50.074 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:50.077 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:09:50.078 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:50.079 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:50.079 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:50.080 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:50.080 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:50.081 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:50.084 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:09:50.110 [main] DEBUG [] o.s.web.client.RestTemplate - HTTP GET http://localhost:58679/api-docs
2025-08-04 12:09:50.116 [main] DEBUG [] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-04 12:09:50.314 [http-nio-auto-1-exec-1] INFO  [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-04 12:09:50.315 [http-nio-auto-1-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-04 12:09:50.315 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-04 12:09:50.315 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-04 12:09:50.315 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-04 12:09:50.316 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1d2288eb
2025-08-04 12:09:50.316 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@6097fd30
2025-08-04 12:09:50.317 [http-nio-auto-1-exec-1] DEBUG [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-04 12:09:50.317 [http-nio-auto-1-exec-1] INFO  [] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-04 12:09:50.347 [http-nio-auto-1-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api-docs
2025-08-04 12:09:50.363 [http-nio-auto-1-exec-1] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:09:50.366 [http-nio-auto-1-exec-1] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 12:09:50.377 [http-nio-auto-1-exec-1] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api-docs
2025-08-04 12:09:50.393 [http-nio-auto-1-exec-1] DEBUG [bffa61f02ed04da4] o.s.web.servlet.DispatcherServlet - GET "/api-docs", parameters={}
2025-08-04 12:09:50.396 [http-nio-auto-1-exec-1] DEBUG [bffa61f02ed04da4] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
2025-08-04 12:09:52.959 [http-nio-auto-1-exec-1] INFO  [bffa61f02ed04da4] o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 2534 ms
2025-08-04 12:09:53.000 [http-nio-auto-1-exec-1] DEBUG [bffa61f02ed04da4] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [text/plain, application/json, application/yaml, application/*+json, */*] and supported [application/json]
2025-08-04 12:09:53.009 [http-nio-auto-1-exec-1] DEBUG [bffa61f02ed04da4] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 49, 46, 48, 34, 44, 34, 105, 110, 10 (truncated)...]
2025-08-04 12:09:53.016 [http-nio-auto-1-exec-1] DEBUG [bffa61f02ed04da4] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-04 12:09:53.055 [main] DEBUG [] o.s.web.client.RestTemplate - Response 200 OK
2025-08-04 12:09:53.057 [main] DEBUG [] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json"
2025-08-04 12:09:53.084 [main] DEBUG [] o.s.web.client.RestTemplate - HTTP GET http://localhost:58679/api-docs
2025-08-04 12:09:53.085 [main] DEBUG [] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-04 12:09:53.089 [http-nio-auto-1-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api-docs
2025-08-04 12:09:53.090 [http-nio-auto-1-exec-3] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:09:53.090 [http-nio-auto-1-exec-3] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 12:09:53.091 [http-nio-auto-1-exec-3] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api-docs
2025-08-04 12:09:53.092 [http-nio-auto-1-exec-3] DEBUG [83bebd402b504b65] o.s.web.servlet.DispatcherServlet - GET "/api-docs", parameters={}
2025-08-04 12:09:53.092 [http-nio-auto-1-exec-3] DEBUG [83bebd402b504b65] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
2025-08-04 12:09:53.102 [http-nio-auto-1-exec-3] DEBUG [83bebd402b504b65] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [text/plain, application/json, application/yaml, application/*+json, */*] and supported [application/json]
2025-08-04 12:09:53.107 [http-nio-auto-1-exec-3] DEBUG [83bebd402b504b65] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 49, 46, 48, 34, 44, 34, 105, 110, 10 (truncated)...]
2025-08-04 12:09:53.108 [http-nio-auto-1-exec-3] DEBUG [83bebd402b504b65] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-04 12:09:53.109 [main] DEBUG [] o.s.web.client.RestTemplate - Response 200 OK
2025-08-04 12:09:53.109 [main] DEBUG [] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json"
2025-08-04 12:09:53.128 [main] DEBUG [] o.s.web.client.RestTemplate - HTTP GET http://localhost:58679/swagger-ui.html
2025-08-04 12:09:53.129 [main] DEBUG [] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-08-04 12:09:53.132 [http-nio-auto-1-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui.html
2025-08-04 12:09:53.133 [http-nio-auto-1-exec-4] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:09:53.133 [http-nio-auto-1-exec-4] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 12:09:53.134 [http-nio-auto-1-exec-4] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui.html
2025-08-04 12:09:53.135 [http-nio-auto-1-exec-4] DEBUG [00c45dc5ddbc47b7] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui.html", parameters={}
2025-08-04 12:09:53.135 [http-nio-auto-1-exec-4] DEBUG [00c45dc5ddbc47b7] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.ui.SwaggerWelcomeWebMvc#redirectToUi(HttpServletRequest)
2025-08-04 12:09:53.141 [http-nio-auto-1-exec-4] DEBUG [00c45dc5ddbc47b7] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [text/plain, application/json, application/yaml, application/*+json, */*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:09:53.141 [http-nio-auto-1-exec-4] DEBUG [00c45dc5ddbc47b7] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Nothing to write: null body
2025-08-04 12:09:53.141 [http-nio-auto-1-exec-4] DEBUG [00c45dc5ddbc47b7] o.s.web.servlet.DispatcherServlet - Completed 302 FOUND
2025-08-04 12:09:53.155 [http-nio-auto-1-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-08-04 12:09:53.157 [http-nio-auto-1-exec-2] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:09:53.158 [http-nio-auto-1-exec-2] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 12:09:53.159 [http-nio-auto-1-exec-2] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-08-04 12:09:53.160 [http-nio-auto-1-exec-2] DEBUG [96b2213cd367457e] o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/index.html", parameters={}
2025-08-04 12:09:53.162 [http-nio-auto-1-exec-2] DEBUG [96b2213cd367457e] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-08-04 12:09:53.167 [http-nio-auto-1-exec-2] DEBUG [96b2213cd367457e] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-04 12:09:53.168 [main] DEBUG [] o.s.web.client.RestTemplate - Response 200 OK
2025-08-04 12:09:53.168 [main] DEBUG [] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "text/html"
2025-08-04 12:09:53.180 [main] INFO  [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.deliverytech.delivery.controller.ClienteControllerITTest]: ClienteControllerITTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 12:09:53.195 [main] INFO  [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.deliverytech.delivery.DeliveryApiApplication for test class com.deliverytech.delivery.controller.ClienteControllerITTest
2025-08-04 12:09:53.199 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:09:53.229 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 19832 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:09:53.229 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:09:53.230 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:09:53.232 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@70e7aee2
2025-08-04 12:09:53.595 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:09:53.595 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:09:53.613 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 5 JPA repository interfaces.
2025-08-04 12:09:53.615 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:09:53.615 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:09:53.620 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:53.620 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:53.621 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:53.621 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:53.621 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:53.621 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-08-04 12:09:53.735 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:09:53.737 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-08-04 12:09:53.739 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection conn20: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:09:53.739 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-08-04 12:09:53.740 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:09:53.813 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:09:53.813 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:09:53.814 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:09:53.814 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:09:53.814 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:09:53.814 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:09:53.814 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:09:53.815 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:09:53.816 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:09:53.817 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:09:53.818 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:09:53.819 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:09:53.820 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:09:53.821 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:09:53.822 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:09:53.823 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:09:53.825 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:09:53.826 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:09:54.017 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:09:54.135 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:09:54.179 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:09:54.258 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:09:54.317 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:09:54.392 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:09:54.404 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:09:54.520 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:09:54.537 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:09:54.537 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:09:54.537 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:09:54.537 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:09:54.538 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 12:09:54.567 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 1.368 seconds (process running for 23.089)
2025-08-04 12:09:54.570 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:09:54.574 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:09:54.577 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:09:54.578 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:09:54.936 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.937 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.938 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.938 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.939 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.939 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.942 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.943 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.943 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.944 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.945 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.945 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.947 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.949 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.950 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.951 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.951 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.952 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.954 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:54.955 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:54.957 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:54.958 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:54.959 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:54.960 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:54.961 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.962 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.962 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.963 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.963 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.964 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.964 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.965 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.966 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.966 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.967 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.967 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.968 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.968 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.969 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.969 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.971 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.972 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.974 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:54.976 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:54.978 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:54.979 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:54.981 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.982 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.983 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.984 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:54.985 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:54.986 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:54.987 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:54.989 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.990 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.990 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.992 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:54.994 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:54.994 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:54.995 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:54.996 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.996 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.997 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:54.998 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:54.999 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:55.000 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:55.001 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:55.002 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:55.004 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:55.005 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:55.006 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:55.007 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:55.008 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:55.009 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:55.010 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:55.011 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:55.012 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:55.013 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:55.013 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:55.016 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:09:55.019 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:09:55.022 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:09:55.024 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:09:55.026 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:09:55.028 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:09:55.031 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:09:55.035 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:09:55.036 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:55.038 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:09:55.039 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:55.043 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:09:55.045 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:55.046 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:55.046 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:55.047 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:55.047 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:55.051 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:09:55.053 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:09:55.054 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:55.055 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:55.055 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:55.056 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:55.058 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:09:55.059 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:55.060 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:55.060 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:55.060 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:55.061 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:55.061 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:55.063 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:09:55.069 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:55.071 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:55.085 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:09:55.098 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing DELETE /api/clientes/7
2025-08-04 12:09:55.100 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:09:55.102 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured DELETE /api/clientes/7
2025-08-04 12:09:55.104 [main] DEBUG [b77f90b556254fe4] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#deletarCliente(Long)
2025-08-04 12:09:55.106 [main] DEBUG [b77f90b556254fe4] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.deletarCliente(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:09:55.116 [main] DEBUG [b77f90b556254fe4] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.deletarCliente(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:09:55.117 [main] DEBUG [b77f90b556254fe4] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:55.126 [main] DEBUG [b77f90b556254fe4] org.hibernate.SQL - 
    /* delete for com.deliverytech.delivery.entity.Cliente */delete 
    from
        clientes 
    where
        id=?
2025-08-04 12:09:55.134 [main] DEBUG [b77f90b556254fe4] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:09:55.135 [main] DEBUG [b77f90b556254fe4] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Nothing to write: null body
2025-08-04 12:09:55.147 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/clientes/7
2025-08-04 12:09:55.148 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:09:55.149 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/clientes/7
2025-08-04 12:09:55.149 [main] DEBUG [6c4990736be448c6] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#buscarPorId(Long)
2025-08-04 12:09:55.150 [main] DEBUG [6c4990736be448c6] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:09:55.150 [main] DEBUG [6c4990736be448c6] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:09:55.153 [main] DEBUG [6c4990736be448c6] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:55.157 [main] DEBUG [6c4990736be448c6] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleEntityNotFoundException(EntityNotFoundException, WebRequest)
2025-08-04 12:09:55.161 [main] DEBUG [6c4990736be448c6] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:09:55.161 [main] DEBUG [6c4990736be448c6] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@3d479fd6]
2025-08-04 12:09:55.165 [main] DEBUG [6c4990736be448c6] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.deliverytech.delivery.exceptions.EntityNotFoundException: Cliente não encontrado: 7]
2025-08-04 12:09:55.169 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@70e7aee2, started on Mon Aug 04 12:09:53 BRT 2025
2025-08-04 12:09:55.174 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:09:55.174 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:09:55.175 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:09:55.175 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:09:55.176 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:09:55.176 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:09:55.176 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:09:55.177 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2025-08-04 12:09:55.178 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2025-08-04 12:09:55.181 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:09:55.210 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 19832 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:09:55.210 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:09:55.210 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:09:55.211 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@575988fe
2025-08-04 12:09:55.498 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:09:55.498 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:09:55.516 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 5 JPA repository interfaces.
2025-08-04 12:09:55.518 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:09:55.518 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:09:55.525 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:55.525 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:55.525 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:55.525 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:55.525 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:55.525 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-08-04 12:09:55.642 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:09:55.643 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
2025-08-04 12:09:55.645 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Added connection conn30: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:09:55.645 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
2025-08-04 12:09:55.645 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:09:55.709 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:09:55.710 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:09:55.710 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:09:55.710 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:09:55.710 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:09:55.710 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:09:55.710 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:09:55.711 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:09:55.712 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:09:55.713 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:09:55.714 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:09:55.715 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:09:55.716 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:09:55.717 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:09:55.718 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:09:55.719 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:09:55.720 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:09:55.721 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:09:55.858 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:09:55.957 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:09:55.992 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:09:56.053 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:09:56.097 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:09:56.150 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:09:56.158 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:09:56.245 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:09:56.259 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:09:56.260 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:09:56.260 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:09:56.260 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:09:56.260 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-08-04 12:09:56.277 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 1.097 seconds (process running for 24.801)
2025-08-04 12:09:56.280 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:09:56.283 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:09:56.286 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:09:56.288 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:09:56.642 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.644 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.645 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.646 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.646 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.647 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.649 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.650 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.650 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.651 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.652 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.652 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.654 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.656 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.657 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.657 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.658 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.659 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.661 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:56.663 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:56.664 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:56.665 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:56.667 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:56.668 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:56.670 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.671 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.672 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.672 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.673 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.673 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.675 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.675 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.676 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.677 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.677 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.678 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.678 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.679 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.680 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.680 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.681 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.681 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.684 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:56.686 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:56.687 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:56.688 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:56.690 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.692 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.693 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.695 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:56.696 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:56.697 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:56.698 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:56.700 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.700 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.701 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.702 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:56.704 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:56.705 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:56.707 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:56.708 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.709 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.709 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.711 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:56.712 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:56.713 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:56.714 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:56.715 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.716 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.716 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.718 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:56.719 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:56.720 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:56.721 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:56.723 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:56.724 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.725 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.726 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.727 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.730 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:09:56.733 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:09:56.736 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:09:56.739 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:09:56.742 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:09:56.744 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:09:56.747 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:09:56.750 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:09:56.751 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:56.753 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:09:56.754 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:56.757 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:09:56.758 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:56.758 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:56.759 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:56.759 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:56.760 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:56.762 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:09:56.764 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:09:56.765 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:56.766 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:56.767 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:56.767 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:56.770 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:09:56.770 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:56.771 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:56.771 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:56.772 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:56.772 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:56.772 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:56.775 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:09:56.779 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.781 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.787 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/clientes
2025-08-04 12:09:56.788 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:09:56.789 [main] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 12:09:56.790 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/clientes
2025-08-04 12:09:56.791 [main] DEBUG [e65715e6be514c5e] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#cadastrarCliente(ClienteRequestDTO)
2025-08-04 12:09:56.805 [main] DEBUG [e65715e6be514c5e] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ClienteRequestDTO{email='mariacliente@email.com', nome='Maria Silva', telefone='11888888888', endere (truncated)...]
2025-08-04 12:09:56.864 [main] DEBUG [e65715e6be514c5e] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:09:56.866 [main] DEBUG [e65715e6be514c5e] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.cpf=? 
    fetch
        first ? rows only
2025-08-04 12:09:56.897 [main] DEBUG [e65715e6be514c5e] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:56.901 [main] DEBUG [e65715e6be514c5e] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:09:56.901 [main] DEBUG [e65715e6be514c5e] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@35d4c85b]
2025-08-04 12:09:56.959 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@575988fe, started on Mon Aug 04 12:09:55 BRT 2025
2025-08-04 12:09:56.964 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:09:56.964 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:09:56.964 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:09:56.965 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:09:56.965 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:09:56.965 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:09:56.966 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:09:56.966 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown initiated...
2025-08-04 12:09:56.968 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown completed.
2025-08-04 12:09:56.970 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:09:57.000 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 19832 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:09:57.001 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:09:57.001 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:09:57.003 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@2540e6bc
2025-08-04 12:09:57.301 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:09:57.302 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:09:57.318 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 5 JPA repository interfaces.
2025-08-04 12:09:57.320 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:09:57.320 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:09:57.325 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:57.325 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:57.325 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:57.325 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:57.325 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:57.325 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-08-04 12:09:57.406 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:09:57.406 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Starting...
2025-08-04 12:09:57.408 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-5 - Added connection conn40: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:09:57.408 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Start completed.
2025-08-04 12:09:57.408 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:09:57.465 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:09:57.466 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:09:57.466 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:09:57.466 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:09:57.466 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:09:57.466 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:09:57.466 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:09:57.467 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:09:57.467 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:09:57.468 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:09:57.469 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:09:57.470 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:09:57.470 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:09:57.471 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:09:57.472 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:09:57.473 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:09:57.474 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:09:57.475 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:09:57.602 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:09:57.703 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:09:57.736 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:09:57.807 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:09:57.854 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:09:57.897 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:09:57.904 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:09:57.992 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:09:58.007 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:09:58.007 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:09:58.007 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:09:58.007 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:09:58.008 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 12:09:58.025 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 1.055 seconds (process running for 26.548)
2025-08-04 12:09:58.029 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:09:58.032 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:09:58.034 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:09:58.035 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:09:58.391 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.392 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.393 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.393 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.393 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.394 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.395 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.396 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.396 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.397 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.397 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.397 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.399 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.399 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.400 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.401 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.401 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.402 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.404 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:58.407 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:58.408 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:58.409 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:58.410 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:58.411 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:58.412 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.413 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.414 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.414 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.414 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.415 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.415 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.416 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.416 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.417 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.417 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.417 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.418 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.418 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.419 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.420 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.420 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.421 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.423 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:58.425 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:58.426 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:58.427 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:58.428 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.429 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.429 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.430 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:58.431 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:58.432 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:58.432 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:58.433 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.434 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.434 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.436 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:58.437 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:58.438 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:58.439 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:58.440 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.441 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.441 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.443 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:58.444 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:58.444 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:58.445 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:58.446 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.446 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.447 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.448 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:58.448 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:58.449 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:58.450 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:58.451 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:58.452 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.453 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.453 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.453 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.456 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:09:58.458 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:09:58.460 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:09:58.462 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:09:58.463 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:09:58.465 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:09:58.467 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:09:58.471 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:09:58.472 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:58.475 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:09:58.476 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:58.479 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:09:58.480 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:58.480 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:58.481 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:58.481 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:58.482 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:58.485 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:09:58.487 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:09:58.487 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:58.488 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:58.489 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:58.489 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:58.491 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:09:58.492 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:58.492 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:58.493 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:58.493 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:58.493 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:58.494 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:58.496 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:09:58.501 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.503 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:58.508 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:09:58.511 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/clientes/1
2025-08-04 12:09:58.512 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:09:58.513 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/clientes/1
2025-08-04 12:09:58.514 [main] DEBUG [7d45da4be880400f] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#buscarPorId(Long)
2025-08-04 12:09:58.516 [main] DEBUG [7d45da4be880400f] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:09:58.517 [main] DEBUG [7d45da4be880400f] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:09:58.517 [main] DEBUG [7d45da4be880400f] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:58.522 [main] DEBUG [7d45da4be880400f] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:09:58.522 [main] DEBUG [7d45da4be880400f] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@5bb48bbd]
2025-08-04 12:09:58.529 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@2540e6bc, started on Mon Aug 04 12:09:57 BRT 2025
2025-08-04 12:09:58.534 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:09:58.534 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:09:58.535 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:09:58.535 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:09:58.535 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:09:58.536 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:09:58.536 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:09:58.537 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown initiated...
2025-08-04 12:09:58.537 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown completed.
2025-08-04 12:09:58.540 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:09:58.567 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 19832 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:09:58.567 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:09:58.567 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:09:58.569 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@1cb0355b
2025-08-04 12:09:58.825 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:09:58.825 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:09:58.841 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 5 JPA repository interfaces.
2025-08-04 12:09:58.843 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:09:58.843 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:09:58.848 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:58.849 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:58.849 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:58.849 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:58.849 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:09:58.849 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-08-04 12:09:58.948 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:09:58.949 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Starting...
2025-08-04 12:09:58.950 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-6 - Added connection conn50: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:09:58.951 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Start completed.
2025-08-04 12:09:58.951 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:09:59.013 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:09:59.013 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:09:59.013 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:09:59.013 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:09:59.014 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:09:59.014 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:09:59.014 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:09:59.015 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:09:59.015 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:09:59.016 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:09:59.017 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:09:59.017 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:09:59.018 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:09:59.019 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:09:59.020 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:09:59.021 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:09:59.022 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:09:59.023 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:09:59.145 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:09:59.230 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:09:59.266 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:09:59.336 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:09:59.406 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:09:59.448 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:09:59.456 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:09:59.543 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:09:59.557 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:09:59.557 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:09:59.557 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:09:59.557 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:09:59.558 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 12:09:59.573 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 1.032 seconds (process running for 28.097)
2025-08-04 12:09:59.576 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:09:59.579 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:09:59.581 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:09:59.582 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:09:59.936 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.937 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.938 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.938 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.938 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.939 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.941 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.941 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.942 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.942 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.942 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.943 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.946 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.947 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.948 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.949 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.949 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.950 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.952 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:59.953 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:59.954 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:59.955 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:59.955 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:59.956 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:59.957 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.959 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.960 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.960 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.961 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.961 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.962 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.963 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.963 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.964 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.964 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.964 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.965 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.965 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.966 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.966 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.966 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.967 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.968 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:59.970 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:59.971 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:59.972 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:59.974 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.975 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.976 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.977 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:59.978 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:59.979 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:59.979 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:59.980 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.981 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.981 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.982 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:59.983 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:59.984 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:59.984 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:59.985 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.986 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.986 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.987 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:59.988 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:59.989 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:59.990 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:59.991 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.992 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.992 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.993 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:59.994 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:59.995 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:09:59.995 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:09:59.996 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:09:59.997 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.997 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.998 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:09:59.998 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:00.000 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:10:00.002 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:10:00.004 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:10:00.009 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:10:00.012 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:10:00.017 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:10:00.021 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:10:00.027 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:10:00.028 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:00.033 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:10:00.034 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:00.038 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:10:00.039 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:00.040 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:00.041 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:00.041 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:00.042 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:00.044 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:00.047 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:00.049 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:00.049 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:00.050 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:00.051 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:00.054 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:10:00.054 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:00.055 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:00.055 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:00.056 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:00.056 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:00.057 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:00.059 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:00.066 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:00.071 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:00.079 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:10:00.086 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing PUT /api/clientes/1
2025-08-04 12:10:00.087 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:10:00.089 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured PUT /api/clientes/1
2025-08-04 12:10:00.089 [main] DEBUG [53f4c542d61345ff] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#atualizarCliente(Long, ClienteRequestDTO)
2025-08-04 12:10:00.092 [main] DEBUG [53f4c542d61345ff] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ClienteRequestDTO{email='novoemail@email.com', nome='Nome Atualizado', telefone='11777777777', ender (truncated)...]
2025-08-04 12:10:00.098 [main] DEBUG [53f4c542d61345ff] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.atualizarCliente(java.lang.Long,com.deliverytech.delivery.dto.request.ClienteRequestDTO); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:10:00.099 [main] DEBUG [53f4c542d61345ff] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.atualizarCliente(java.lang.Long,com.deliverytech.delivery.dto.request.ClienteRequestDTO); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:10:00.100 [main] DEBUG [53f4c542d61345ff] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:00.119 [main] DEBUG [53f4c542d61345ff] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Cliente */update clientes 
    set
        ativo=?,
        cpf=?,
        data_cadastro=?,
        email=?,
        endereco=?,
        nome=?,
        telefone=? 
    where
        id=?
2025-08-04 12:10:00.122 [main] DEBUG [53f4c542d61345ff] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:10:00.122 [main] DEBUG [53f4c542d61345ff] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@7b9628a5]
2025-08-04 12:10:00.129 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@1cb0355b, started on Mon Aug 04 12:09:58 BRT 2025
2025-08-04 12:10:00.133 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:10:00.133 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:10:00.133 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:10:00.134 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:10:00.134 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:10:00.134 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:10:00.135 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:10:00.135 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown initiated...
2025-08-04 12:10:00.136 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown completed.
2025-08-04 12:10:00.139 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:10:00.163 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 19832 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:10:00.164 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:10:00.164 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:10:00.165 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@873c12e
2025-08-04 12:10:00.479 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:10:00.479 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:10:00.495 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2025-08-04 12:10:00.497 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:10:00.497 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:10:00.503 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:00.503 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:00.503 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:00.503 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:00.503 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:00.503 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-08-04 12:10:00.591 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:10:00.591 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Starting...
2025-08-04 12:10:00.592 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-7 - Added connection conn60: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:10:00.593 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Start completed.
2025-08-04 12:10:00.593 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:10:00.647 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:10:00.647 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:10:00.647 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:10:00.647 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:10:00.647 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:10:00.647 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:10:00.648 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:10:00.649 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:10:00.650 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:10:00.651 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:10:00.652 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:10:00.652 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:10:00.653 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:10:00.654 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:10:00.655 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:10:00.656 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:10:00.657 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:10:00.659 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:10:00.791 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:10:00.894 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:10:00.944 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:10:01.006 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:10:01.048 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:10:01.089 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:10:01.097 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:10:01.189 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:10:01.210 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:10:01.210 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:10:01.210 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:10:01.210 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:10:01.211 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 12:10:01.230 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 1.091 seconds (process running for 29.753)
2025-08-04 12:10:01.232 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:10:01.235 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:10:01.237 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:10:01.239 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:10:01.596 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.597 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.597 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.598 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.598 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.599 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.600 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.601 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.601 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.602 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.602 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.602 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.604 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.606 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.606 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.607 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.607 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.608 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.609 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:01.610 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:01.612 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:01.613 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:01.614 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:01.615 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:01.616 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.616 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.617 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.617 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.618 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.618 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.618 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.619 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.619 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.619 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.620 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.620 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.621 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.621 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.621 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.622 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.622 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.622 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.624 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:01.626 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:01.626 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:01.628 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:01.629 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.630 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.630 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.632 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:01.633 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:01.633 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:01.634 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:01.635 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.635 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.636 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.637 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:01.638 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:01.639 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:01.639 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:01.640 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.641 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.641 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.642 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:01.644 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:01.644 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:01.645 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:01.646 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.646 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.647 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.648 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:01.649 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:01.649 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:01.650 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:01.651 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:01.652 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.653 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.653 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.654 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.656 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:10:01.659 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:10:01.662 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:10:01.665 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:10:01.667 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:10:01.669 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:10:01.671 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:10:01.674 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:10:01.675 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:01.678 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:10:01.678 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:01.680 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:10:01.681 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:01.681 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:01.682 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:01.682 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:01.683 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:01.685 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:01.687 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:01.688 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:01.689 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:01.689 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:01.690 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:01.692 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:10:01.693 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:01.693 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:01.694 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:01.694 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:01.694 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:01.695 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:01.697 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:01.702 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.704 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:01.712 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/clientes
2025-08-04 12:10:01.713 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:10:01.715 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/clientes
2025-08-04 12:10:01.716 [main] DEBUG [0c697ecd4e584f7f] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#listarClientesAtivos(Pageable)
2025-08-04 12:10:01.719 [main] DEBUG [0c697ecd4e584f7f] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.listarClientesAtivos(org.springframework.data.domain.Pageable); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:10:01.722 [main] DEBUG [0c697ecd4e584f7f] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.listarClientesAtivos(org.springframework.data.domain.Pageable); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:10:01.726 [main] DEBUG [0c697ecd4e584f7f] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo 
    fetch
        first ? rows only
2025-08-04 12:10:01.741 [main] DEBUG [0c697ecd4e584f7f] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:10:01.741 [main] DEBUG [0c697ecd4e584f7f] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.PagedResponseWrapper@24b2836a]
2025-08-04 12:10:01.759 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@873c12e, started on Mon Aug 04 12:10:00 BRT 2025
2025-08-04 12:10:01.763 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:10:01.763 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:10:01.764 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:10:01.764 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:10:01.764 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:10:01.765 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:10:01.765 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:10:01.766 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown initiated...
2025-08-04 12:10:01.766 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown completed.
2025-08-04 12:10:01.769 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:10:01.794 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 19832 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:10:01.794 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:10:01.794 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:10:01.795 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4e123b26
2025-08-04 12:10:02.056 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:10:02.056 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:10:02.071 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
2025-08-04 12:10:02.073 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:10:02.073 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:10:02.077 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:02.077 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:02.077 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:02.077 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:02.077 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:02.077 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-08-04 12:10:02.155 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:10:02.156 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Starting...
2025-08-04 12:10:02.157 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-8 - Added connection conn70: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:10:02.157 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Start completed.
2025-08-04 12:10:02.158 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:10:02.208 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:10:02.209 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:10:02.209 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:10:02.209 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:10:02.209 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:10:02.209 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:10:02.209 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:10:02.211 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:10:02.211 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:10:02.212 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:10:02.213 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:10:02.213 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:10:02.214 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:10:02.215 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:10:02.216 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:10:02.217 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:10:02.217 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:10:02.218 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:10:02.360 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:10:02.461 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:10:02.495 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:10:02.553 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:10:02.594 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:10:02.630 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:10:02.638 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:10:02.722 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:10:02.736 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:10:02.736 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:10:02.736 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:10:02.736 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:10:02.737 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-08-04 12:10:02.751 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 0.982 seconds (process running for 31.275)
2025-08-04 12:10:02.754 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:10:02.757 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:10:02.758 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:10:02.760 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:10:03.114 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.115 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.116 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.116 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.117 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.117 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.118 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.119 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.120 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.120 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.120 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.121 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.122 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.123 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.124 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.125 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.126 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.127 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.128 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:03.130 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:03.131 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:03.131 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:03.132 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:03.132 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:03.133 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.134 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.134 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.135 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.135 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.135 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.136 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.136 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.136 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.136 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.137 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.137 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.137 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.138 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.138 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.138 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.139 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.139 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.141 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:03.142 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:03.143 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:03.143 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:03.144 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.145 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.145 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.146 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:03.147 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:03.148 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:03.148 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:03.149 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.149 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.150 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.151 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:03.152 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:03.152 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:03.153 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:03.154 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.154 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.155 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.156 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:03.157 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:03.158 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:03.158 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:03.159 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.159 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.160 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.161 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:03.162 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:03.162 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:03.163 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:03.163 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:03.164 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.165 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.165 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.165 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.167 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:10:03.169 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:10:03.171 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:10:03.173 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:10:03.175 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:10:03.178 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:10:03.180 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:10:03.182 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:10:03.183 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:03.185 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:10:03.185 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:03.187 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:10:03.188 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:03.188 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:03.189 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:03.189 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:03.190 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:03.192 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:03.194 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:03.195 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:03.195 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:03.195 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:03.196 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:03.197 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:10:03.198 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:03.198 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:03.199 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:03.199 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:03.199 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:03.200 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:03.201 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:03.207 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.208 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:03.214 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/clientes/999
2025-08-04 12:10:03.215 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:10:03.217 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/clientes/999
2025-08-04 12:10:03.217 [main] DEBUG [dee155e09ffe4778] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#buscarPorId(Long)
2025-08-04 12:10:03.218 [main] DEBUG [dee155e09ffe4778] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:10:03.219 [main] DEBUG [dee155e09ffe4778] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.ClienteController.buscarPorId(java.lang.Long); target is of class [com.deliverytech.delivery.controller.ClienteController]
2025-08-04 12:10:03.220 [main] DEBUG [dee155e09ffe4778] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:03.222 [main] DEBUG [dee155e09ffe4778] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleEntityNotFoundException(EntityNotFoundException, WebRequest)
2025-08-04 12:10:03.224 [main] DEBUG [dee155e09ffe4778] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:10:03.224 [main] DEBUG [dee155e09ffe4778] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@109bd5]
2025-08-04 12:10:03.225 [main] DEBUG [dee155e09ffe4778] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.deliverytech.delivery.exceptions.EntityNotFoundException: Cliente não encontrado: 999]
2025-08-04 12:10:03.231 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@4e123b26, started on Mon Aug 04 12:10:01 BRT 2025
2025-08-04 12:10:03.250 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:10:03.250 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:10:03.250 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:10:03.251 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:10:03.252 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:10:03.252 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:10:03.252 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:10:03.253 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown initiated...
2025-08-04 12:10:03.254 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown completed.
2025-08-04 12:10:03.256 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:10:03.282 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Starting ClienteControllerITTest using Java 21.0.1 with PID 19832 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:10:03.282 [main] DEBUG [] c.d.d.c.ClienteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:10:03.282 [main] INFO  [] c.d.d.c.ClienteControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:10:03.283 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@138a3210
2025-08-04 12:10:03.532 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:10:03.532 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:10:03.545 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2025-08-04 12:10:03.548 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:10:03.548 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:10:03.552 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:03.553 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:03.553 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:03.553 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:03.553 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:03.553 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-08-04 12:10:03.628 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:10:03.630 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Starting...
2025-08-04 12:10:03.630 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-9 - Added connection conn80: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:10:03.630 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Start completed.
2025-08-04 12:10:03.630 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:10:03.678 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:10:03.679 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:10:03.679 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:10:03.679 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:10:03.679 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:10:03.679 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:10:03.679 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:10:03.680 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:10:03.680 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:10:03.681 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:10:03.681 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:10:03.682 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:10:03.683 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:10:03.683 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:10:03.684 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:10:03.685 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:10:03.685 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:10:03.687 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:10:03.811 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:10:03.942 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:10:03.976 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:10:04.027 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:10:04.070 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:10:04.110 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:10:04.118 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:10:04.208 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:10:04.220 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:10:04.220 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:10:04.220 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:10:04.220 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:10:04.221 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 12:10:04.236 [main] INFO  [] c.d.d.c.ClienteControllerITTest - Started ClienteControllerITTest in 0.979 seconds (process running for 32.759)
2025-08-04 12:10:04.239 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:10:04.243 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:10:04.245 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:10:04.246 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:10:04.605 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.606 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.606 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.607 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.607 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.607 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.609 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.611 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.611 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.611 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.612 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.612 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.614 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.615 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.616 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.616 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.617 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.617 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.619 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:04.621 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:04.621 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:04.622 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:04.623 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:04.624 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:04.626 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.628 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.628 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.629 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.629 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.629 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.630 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.630 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.630 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.631 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.631 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.631 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.632 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.632 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.633 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.633 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.633 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.634 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.635 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:04.637 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:04.638 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:04.639 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:04.640 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.641 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.641 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.643 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:04.644 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:04.644 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:04.645 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:04.645 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.646 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.646 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.647 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:04.648 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:04.649 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:04.649 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:04.650 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.651 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.651 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.654 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:04.655 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:04.656 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:04.656 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:04.658 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.658 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.659 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.660 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:04.661 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:04.661 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:04.662 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:04.662 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:04.663 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.664 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.665 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.665 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.667 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:10:04.669 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:10:04.671 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:10:04.673 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:10:04.676 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:10:04.678 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:10:04.679 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:10:04.681 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:10:04.681 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:04.684 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:10:04.684 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:04.686 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:10:04.687 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:04.687 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:04.688 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:04.688 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:04.688 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:04.690 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:04.693 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:04.694 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:04.694 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:04.694 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:04.695 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:04.697 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:10:04.697 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:04.698 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:04.698 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:04.698 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:04.699 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:04.699 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:04.701 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:04.707 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.709 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:04.715 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/clientes
2025-08-04 12:10:04.716 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:10:04.717 [main] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 12:10:04.717 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/clientes
2025-08-04 12:10:04.718 [main] DEBUG [8c65abc4c6e046f1] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.ClienteController#cadastrarCliente(ClienteRequestDTO)
2025-08-04 12:10:04.720 [main] DEBUG [8c65abc4c6e046f1] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ClienteRequestDTO{email='email-invalido', nome='', telefone='', endereco=''}]
2025-08-04 12:10:04.732 [main] DEBUG [8c65abc4c6e046f1] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException, WebRequest)
2025-08-04 12:10:04.734 [main] DEBUG [8c65abc4c6e046f1] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:10:04.734 [main] DEBUG [8c65abc4c6e046f1] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@852121f]
2025-08-04 12:10:04.735 [main] DEBUG [8c65abc4c6e046f1] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.deliverytech.delivery.dto.response.ApiResponseWrapper<com.deliverytech.delivery.dto.response.ClienteResponseDTO>> com.deliverytech.delivery.controller.ClienteController.cadastrarCliente(com.deliverytech.delivery.dto.request.ClienteRequestDTO) with 7 errors: [Field error in object 'clienteRequestDTO' on field 'endereco': rejected value []; codes [NotBlank.clienteRequestDTO.endereco,NotBlank.endereco,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.endereco,endereco]; arguments []; default message [endereco]]; default message [O endereço é obrigatório]] [Field error in object 'clienteRequestDTO' on field 'email': rejected value [email-invalido]; codes [Email.clienteRequestDTO.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@5ea3b435,.*]; default message [O email deve ser válido]] [Field error in object 'clienteRequestDTO' on field 'nome': rejected value []; codes [NotBlank.clienteRequestDTO.nome,NotBlank.nome,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.nome,nome]; arguments []; default message [nome]]; default message [O nome é obrigatório]] [Field error in object 'clienteRequestDTO' on field 'cpf': rejected value [null]; codes [NotBlank.clienteRequestDTO.cpf,NotBlank.cpf,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.cpf,cpf]; arguments []; default message [cpf]]; default message [O CPF é obrigatório]] [Field error in object 'clienteRequestDTO' on field 'cpf': rejected value [null]; codes [ValidCPF.clienteRequestDTO.cpf,ValidCPF.cpf,ValidCPF.java.lang.String,ValidCPF]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.cpf,cpf]; arguments []; default message [cpf]]; default message [CPF deve ter formato válido 12345678909 ou 123.456.789-09)]] [Field error in object 'clienteRequestDTO' on field 'telefone': rejected value []; codes [Pattern.clienteRequestDTO.telefone,Pattern.telefone,Pattern.java.lang.String,Pattern]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.telefone,telefone]; arguments []; default message [telefone],[Ljakarta.validation.constraints.Pattern$Flag;@2fbf01ba,^\+?[0-9]{10,15}$]; default message [O telefone deve ser um número válido com 10 a 15 dígitos]] [Field error in object 'clienteRequestDTO' on field 'telefone': rejected value []; codes [Pattern.clienteRequestDTO.telefone,Pattern.telefone,Pattern.java.lang.String,Pattern]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [clienteRequestDTO.telefone,telefone]; arguments []; default message [telefone],[Ljakarta.validation.constraints.Pattern$Flag;@2fbf01ba,^\+?[0-9]{10,15}$]; default message [O telefone deve ser um número válido com 10 a 15 dígitos, podendo iniciar com '+']] ]
2025-08-04 12:10:04.741 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@138a3210, started on Mon Aug 04 12:10:03 BRT 2025
2025-08-04 12:10:04.745 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:10:04.745 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:10:04.745 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:10:04.746 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:10:04.746 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:10:04.746 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:10:04.747 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:10:04.747 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Shutdown initiated...
2025-08-04 12:10:04.748 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-9 - Shutdown completed.
2025-08-04 12:10:04.752 [main] INFO  [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.deliverytech.delivery.controller.PedidoControllerITTest]: PedidoControllerITTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 12:10:04.754 [main] INFO  [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.deliverytech.delivery.DeliveryApiApplication for test class com.deliverytech.delivery.controller.PedidoControllerITTest
2025-08-04 12:10:04.756 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:10:04.778 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 19832 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:10:04.778 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:10:04.778 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:10:04.779 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@55b45aec
2025-08-04 12:10:04.993 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:10:04.993 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:10:05.006 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2025-08-04 12:10:05.008 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:10:05.008 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:10:05.012 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:05.012 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:05.012 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:05.012 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:05.013 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:05.013 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-08-04 12:10:05.088 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:10:05.089 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Starting...
2025-08-04 12:10:05.090 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-10 - Added connection conn90: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:10:05.090 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Start completed.
2025-08-04 12:10:05.090 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:10:05.160 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:10:05.160 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:10:05.160 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:10:05.160 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:10:05.161 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:10:05.161 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:10:05.161 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:10:05.162 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:10:05.162 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:10:05.163 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:10:05.164 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:10:05.164 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:10:05.165 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:10:05.166 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:10:05.167 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:10:05.168 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:10:05.169 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:10:05.170 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:10:05.283 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:10:05.363 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:10:05.396 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:10:05.453 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:10:05.513 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:10:05.596 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:10:05.613 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:10:05.716 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:10:05.732 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:10:05.733 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:10:05.733 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:10:05.733 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:10:05.734 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 12:10:05.751 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 0.995 seconds (process running for 34.274)
2025-08-04 12:10:05.754 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:10:05.760 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:10:05.761 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:10:05.763 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:10:06.122 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.124 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.125 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.126 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.127 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.128 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.130 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.132 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.132 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.133 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.133 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.134 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.136 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.138 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.139 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.140 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.140 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.142 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.144 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.146 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.149 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.151 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.152 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.154 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.156 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.157 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.158 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.158 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.159 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.159 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.160 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.160 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.161 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.163 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.163 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.164 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.164 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.165 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.166 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.167 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.167 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.168 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.170 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:06.172 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:06.175 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:06.177 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.180 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.181 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.183 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.185 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:06.186 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:06.188 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:06.189 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.192 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.193 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.193 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.195 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:06.197 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:06.198 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:06.199 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.201 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.202 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.202 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.204 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:06.205 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:06.205 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:06.207 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.208 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.208 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.209 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.211 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:06.212 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:06.213 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:06.214 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:06.215 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.216 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.218 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.219 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.220 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.223 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:10:06.228 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:10:06.231 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:10:06.233 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:10:06.235 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:10:06.237 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:10:06.239 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:10:06.244 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:10:06.245 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.248 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:10:06.249 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.254 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:10:06.255 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.256 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.259 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.260 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.260 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.264 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:06.269 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:06.270 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:06.270 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.271 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:06.271 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.275 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:10:06.276 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:06.277 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.278 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:06.278 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.279 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:06.279 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.284 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:06.298 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.303 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.313 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:10:06.316 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:10:06.317 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.318 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.318 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.318 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.319 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.319 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.325 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:06.330 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.restaurante_id,
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco 
    from
        produtos p1_0 
    where
        p1_0.restaurante_id=?
2025-08-04 12:10:06.347 [main] DEBUG [] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-04 12:10:06.349 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.358 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-04 12:10:06.360 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:10:06.362 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-04 12:10:06.363 [main] DEBUG [a576873f92f84a50] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-04 12:10:06.373 [main] DEBUG [a576873f92f84a50] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=1, numeroPedido='PEDIDO20250729', dataPedido='2025-08-04T12:10:06.3483025 (truncated)...]
2025-08-04 12:10:06.703 [main] DEBUG [a576873f92f84a50] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 12:10:06.708 [main] DEBUG [a576873f92f84a50] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 12:10:06.711 [main] DEBUG [a576873f92f84a50] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:06.715 [main] DEBUG [a576873f92f84a50] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:06.720 [main] DEBUG [a576873f92f84a50] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:06.726 [main] DEBUG [a576873f92f84a50] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.762 [main] DEBUG [a576873f92f84a50] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:06.766 [main] DEBUG [a576873f92f84a50] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-04 12:10:06.772 [main] DEBUG [a576873f92f84a50] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:10:06.772 [main] DEBUG [a576873f92f84a50] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@7a975e03]
2025-08-04 12:10:06.801 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@55b45aec, started on Mon Aug 04 12:10:04 BRT 2025
2025-08-04 12:10:06.813 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:10:06.814 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:10:06.815 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:10:06.817 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:10:06.818 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:10:06.818 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:10:06.818 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:10:06.819 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Shutdown initiated...
2025-08-04 12:10:06.821 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-10 - Shutdown completed.
2025-08-04 12:10:06.828 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:10:06.869 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 19832 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:10:06.869 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:10:06.869 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:10:06.872 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6c149d21
2025-08-04 12:10:07.093 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:10:07.093 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:10:07.106 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2025-08-04 12:10:07.108 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:10:07.108 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:10:07.113 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:07.113 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:07.113 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:07.113 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:07.113 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:07.113 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-08-04 12:10:07.184 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:10:07.185 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-11 - Starting...
2025-08-04 12:10:07.185 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-11 - Added connection conn100: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:10:07.186 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-11 - Start completed.
2025-08-04 12:10:07.186 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:10:07.232 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:10:07.232 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:10:07.232 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:10:07.232 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:10:07.232 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:10:07.232 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:10:07.233 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:10:07.233 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:10:07.234 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:10:07.234 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:10:07.235 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:10:07.235 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:10:07.236 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:10:07.237 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:10:07.237 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:10:07.238 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:10:07.238 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:10:07.240 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:10:07.348 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:10:07.425 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:10:07.457 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:10:07.508 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:10:07.548 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:10:07.585 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:10:07.592 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:10:07.719 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:10:07.735 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:10:07.736 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:10:07.736 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:10:07.736 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:10:07.736 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-08-04 12:10:07.753 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 0.926 seconds (process running for 36.276)
2025-08-04 12:10:07.756 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:10:07.759 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:10:07.761 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:10:07.762 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:10:08.120 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.121 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.121 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.122 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.122 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.123 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.124 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.125 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.125 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.126 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.126 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.126 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.128 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.129 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.130 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.130 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.131 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.131 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.132 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.133 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.134 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.134 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.135 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.135 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.136 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.137 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.137 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.138 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.138 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.139 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.139 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.139 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.139 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.139 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.140 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.141 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.141 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.141 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.142 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.142 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.142 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.143 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.144 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:08.145 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:08.146 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:08.146 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.147 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.148 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.148 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.149 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:08.150 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:08.150 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:08.151 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.151 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.152 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.152 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.153 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:08.153 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:08.154 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:08.154 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.155 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.155 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.156 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.158 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:08.159 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:08.160 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:08.160 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.161 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.161 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.162 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.163 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:08.163 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:08.164 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:08.164 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:08.165 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.165 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.166 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.167 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.167 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.169 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:10:08.171 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:10:08.173 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:10:08.175 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:10:08.177 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:10:08.178 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:10:08.180 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:10:08.182 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:10:08.182 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.184 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:10:08.185 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.186 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:10:08.187 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.187 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.187 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.188 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.188 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.190 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:08.192 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:08.193 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:08.193 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.194 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:08.194 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.196 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:10:08.196 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:08.197 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.197 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:08.197 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.197 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:08.198 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.199 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:08.203 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.204 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:08.208 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:10:08.210 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:10:08.211 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.211 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.211 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.211 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.212 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.212 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.216 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-04 12:10:08.217 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:10:08.218 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-04 12:10:08.219 [main] DEBUG [c1162230cca44dfc] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-04 12:10:08.221 [main] DEBUG [c1162230cca44dfc] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=null, numeroPedido='null', dataPedido='null', valorTotal=null, observacoe (truncated)...]
2025-08-04 12:10:08.242 [main] DEBUG [c1162230cca44dfc] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException, WebRequest)
2025-08-04 12:10:08.244 [main] DEBUG [c1162230cca44dfc] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:10:08.244 [main] DEBUG [c1162230cca44dfc] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@1a07d7d9]
2025-08-04 12:10:08.245 [main] DEBUG [c1162230cca44dfc] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.deliverytech.delivery.dto.response.ApiResponseWrapper<com.deliverytech.delivery.dto.response.PedidoResponseDTO>> com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO) with 9 errors: [Field error in object 'pedidoRequestDTO' on field 'clienteId': rejected value [null]; codes [NotNull.pedidoRequestDTO.clienteId,NotNull.clienteId,NotNull.java.lang.Long,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.clienteId,clienteId]; arguments []; default message [clienteId]]; default message [O status do pedido é obrigatório]] [Field error in object 'pedidoRequestDTO' on field 'dataPedido': rejected value [null]; codes [NotNull.pedidoRequestDTO.dataPedido,NotNull.dataPedido,NotNull.java.time.LocalDateTime,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.dataPedido,dataPedido]; arguments []; default message [dataPedido]]; default message [A data do pedido é obrigatória]] [Field error in object 'pedidoRequestDTO' on field 'cep': rejected value [null]; codes [NotBlank.pedidoRequestDTO.cep,NotBlank.cep,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.cep,cep]; arguments []; default message [cep]]; default message [CEP é obrigatório]] [Field error in object 'pedidoRequestDTO' on field 'cep': rejected value [null]; codes [ValidCEP.pedidoRequestDTO.cep,ValidCEP.cep,ValidCEP.java.lang.String,ValidCEP]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.cep,cep]; arguments []; default message [cep]]; default message [CEP deve ter formato válido (00000-000 ou 00000000)]] [Field error in object 'pedidoRequestDTO' on field 'restauranteId': rejected value [null]; codes [NotNull.pedidoRequestDTO.restauranteId,NotNull.restauranteId,NotNull.java.lang.Long,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.restauranteId,restauranteId]; arguments []; default message [restauranteId]]; default message [O restaurante é obrigatório]] [Field error in object 'pedidoRequestDTO' on field 'formaPagamento': rejected value [null]; codes [NotBlank.pedidoRequestDTO.formaPagamento,NotBlank.formaPagamento,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.formaPagamento,formaPagamento]; arguments []; default message [formaPagamento]]; default message [Forma de pagamento é obrigatória]] [Field error in object 'pedidoRequestDTO' on field 'numeroPedido': rejected value [null]; codes [NotNull.pedidoRequestDTO.numeroPedido,NotNull.numeroPedido,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.numeroPedido,numeroPedido]; arguments []; default message [numeroPedido]]; default message [O número do pedido é obrigatório]] [Field error in object 'pedidoRequestDTO' on field 'clienteId': rejected value [null]; codes [NotNull.pedidoRequestDTO.clienteId,NotNull.clienteId,NotNull.java.lang.Long,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.clienteId,clienteId]; arguments []; default message [clienteId]]; default message [O id do cliente é obrigatório]] [Field error in object 'pedidoRequestDTO' on field 'valorTotal': rejected value [null]; codes [NotNull.pedidoRequestDTO.valorTotal,NotNull.valorTotal,NotNull.java.math.BigDecimal,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [pedidoRequestDTO.valorTotal,valorTotal]; arguments []; default message [valorTotal]]; default message [O valor do pedido é obrigatório]] ]
2025-08-04 12:10:08.248 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/pedidos/clientes/1/pedidos
2025-08-04 12:10:08.249 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:10:08.249 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/pedidos/clientes/1/pedidos
2025-08-04 12:10:08.250 [main] DEBUG [01ce3bc4ae3c4cef] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#buscarPedidosPorCliente(Long)
2025-08-04 12:10:08.250 [main] DEBUG [01ce3bc4ae3c4cef] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.buscarPedidosPorCliente(java.lang.Long); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 12:10:08.251 [main] DEBUG [01ce3bc4ae3c4cef] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.buscarPedidosPorCliente(java.lang.Long); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 12:10:08.253 [main] DEBUG [01ce3bc4ae3c4cef] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:08.253 [main] DEBUG [01ce3bc4ae3c4cef] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:08.254 [main] DEBUG [01ce3bc4ae3c4cef] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:08.258 [main] DEBUG [01ce3bc4ae3c4cef] org.hibernate.SQL - 
    select
        i1_0.pedido_id,
        i1_0.id,
        i1_0.preco_unitario,
        p2_0.id,
        p2_0.categoria,
        p2_0.descricao,
        p2_0.disponivel,
        p2_0.estoque,
        p2_0.nome,
        p2_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos,
        i1_0.quantidade,
        i1_0.subtotal 
    from
        itens_pedido i1_0 
    left join
        produtos p2_0 
            on p2_0.id=i1_0.produto_id 
    left join
        restaurantes r1_0 
            on r1_0.id=p2_0.restaurante_id 
    where
        i1_0.pedido_id=?
2025-08-04 12:10:08.262 [main] DEBUG [01ce3bc4ae3c4cef] org.hibernate.SQL - 
    select
        i1_0.pedido_id,
        i1_0.id,
        i1_0.preco_unitario,
        p2_0.id,
        p2_0.categoria,
        p2_0.descricao,
        p2_0.disponivel,
        p2_0.estoque,
        p2_0.nome,
        p2_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos,
        i1_0.quantidade,
        i1_0.subtotal 
    from
        itens_pedido i1_0 
    left join
        produtos p2_0 
            on p2_0.id=i1_0.produto_id 
    left join
        restaurantes r1_0 
            on r1_0.id=p2_0.restaurante_id 
    where
        i1_0.pedido_id=?
2025-08-04 12:10:08.264 [main] DEBUG [01ce3bc4ae3c4cef] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:10:08.264 [main] DEBUG [01ce3bc4ae3c4cef] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@72880aed]
2025-08-04 12:10:08.272 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@6c149d21, started on Mon Aug 04 12:10:06 BRT 2025
2025-08-04 12:10:08.276 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:10:08.276 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:10:08.276 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:10:08.277 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:10:08.277 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:10:08.277 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:10:08.277 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:10:08.278 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-11 - Shutdown initiated...
2025-08-04 12:10:08.278 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-11 - Shutdown completed.
2025-08-04 12:10:08.281 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:10:08.304 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 19832 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:10:08.304 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:10:08.304 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:10:08.305 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@19a9ae31
2025-08-04 12:10:08.502 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:10:08.502 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:10:08.516 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2025-08-04 12:10:08.518 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:10:08.518 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:10:08.522 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:08.522 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:08.522 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:08.522 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:08.522 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:08.522 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-08-04 12:10:08.594 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:10:08.595 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-12 - Starting...
2025-08-04 12:10:08.596 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-12 - Added connection conn110: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:10:08.596 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-12 - Start completed.
2025-08-04 12:10:08.597 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:10:08.642 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:10:08.642 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:10:08.642 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:10:08.643 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:10:08.643 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:10:08.643 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:10:08.643 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:10:08.644 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:10:08.645 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:10:08.645 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:10:08.646 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:10:08.647 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:10:08.648 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:10:08.649 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:10:08.650 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:10:08.651 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:10:08.652 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:10:08.654 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:10:08.790 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:10:08.880 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:10:08.919 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:10:08.977 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:10:09.025 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:10:09.068 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:10:09.079 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:10:09.190 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:10:09.215 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:10:09.215 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:10:09.215 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:10:09.215 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:10:09.216 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 12:10:09.230 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 0.949 seconds (process running for 37.753)
2025-08-04 12:10:09.232 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:10:09.234 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:10:09.236 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:10:09.237 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:10:09.595 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.596 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.596 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.597 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.597 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.597 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.599 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.599 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.600 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.600 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.600 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.600 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.602 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.603 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.603 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.603 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.604 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.604 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.606 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.607 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.608 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.608 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.609 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.609 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.610 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.610 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.610 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.612 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.612 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.612 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.612 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.613 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.613 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.613 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.613 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.614 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.614 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.614 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.615 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.615 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.615 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.616 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.617 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:09.618 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:09.619 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:09.620 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.620 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.622 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.623 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.624 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:09.625 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:09.625 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:09.626 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.626 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.627 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.627 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.628 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:09.629 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:09.630 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:09.630 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.631 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.631 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.632 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.633 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:09.633 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:09.634 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:09.634 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.635 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.636 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.637 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.638 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:09.640 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:09.641 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:09.642 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:09.643 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.643 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.644 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.645 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.645 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.647 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:10:09.648 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:10:09.650 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:10:09.652 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:10:09.654 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:10:09.656 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:10:09.658 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:10:09.660 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:10:09.660 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.662 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:10:09.662 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.664 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:10:09.665 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.665 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.666 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.666 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.666 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.668 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:09.670 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:09.671 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:09.672 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.672 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:09.672 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.674 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:10:09.674 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:09.675 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.675 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:09.675 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.675 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:09.676 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.677 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:09.681 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.682 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.688 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:10:09.691 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:10:09.691 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.691 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.692 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.692 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.692 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.692 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.693 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:09.694 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.restaurante_id,
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco 
    from
        produtos p1_0 
    where
        p1_0.restaurante_id=?
2025-08-04 12:10:09.696 [main] DEBUG [] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-04 12:10:09.697 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.700 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-04 12:10:09.701 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:10:09.702 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-04 12:10:09.702 [main] DEBUG [4acf71081e2f41e6] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-04 12:10:09.704 [main] DEBUG [4acf71081e2f41e6] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=1, numeroPedido='PEDIDO20250729', dataPedido='2025-08-04T12:10:09.6972042 (truncated)...]
2025-08-04 12:10:09.721 [main] DEBUG [4acf71081e2f41e6] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 12:10:09.722 [main] DEBUG [4acf71081e2f41e6] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 12:10:09.723 [main] DEBUG [4acf71081e2f41e6] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:09.725 [main] DEBUG [4acf71081e2f41e6] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:09.725 [main] DEBUG [4acf71081e2f41e6] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:09.726 [main] DEBUG [4acf71081e2f41e6] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.731 [main] DEBUG [4acf71081e2f41e6] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:09.733 [main] DEBUG [4acf71081e2f41e6] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-04 12:10:09.735 [main] DEBUG [4acf71081e2f41e6] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:10:09.735 [main] DEBUG [4acf71081e2f41e6] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@7c23a163]
2025-08-04 12:10:09.740 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing PATCH /api/pedidos/6/status
2025-08-04 12:10:09.741 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:10:09.741 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured PATCH /api/pedidos/6/status
2025-08-04 12:10:09.742 [main] DEBUG [dc0175cd011f4673] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#atualizarStatus(Long, StatusPedido)
2025-08-04 12:10:09.743 [main] DEBUG [dc0175cd011f4673] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [CONFIRMADO]
2025-08-04 12:10:09.748 [main] DEBUG [dc0175cd011f4673] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.atualizarStatus(java.lang.Long,com.deliverytech.delivery.enums.StatusPedido); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 12:10:09.749 [main] DEBUG [dc0175cd011f4673] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.atualizarStatus(java.lang.Long,com.deliverytech.delivery.enums.StatusPedido); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 12:10:09.750 [main] DEBUG [dc0175cd011f4673] org.hibernate.SQL - 
    select
        p1_0.id,
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:09.753 [main] DEBUG [dc0175cd011f4673] org.hibernate.SQL - 
    select
        i1_0.pedido_id,
        i1_0.id,
        i1_0.preco_unitario,
        p2_0.id,
        p2_0.categoria,
        p2_0.descricao,
        p2_0.disponivel,
        p2_0.estoque,
        p2_0.nome,
        p2_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos,
        i1_0.quantidade,
        i1_0.subtotal 
    from
        itens_pedido i1_0 
    left join
        produtos p2_0 
            on p2_0.id=i1_0.produto_id 
    left join
        restaurantes r1_0 
            on r1_0.id=p2_0.restaurante_id 
    where
        i1_0.pedido_id=?
2025-08-04 12:10:09.755 [main] DEBUG [dc0175cd011f4673] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Pedido */update pedidos 
    set
        cliente_id=?,
        data_pedido=?,
        endereco_entrega=?,
        numero_pedido=?,
        observacoes=?,
        restaurante_id=?,
        status=?,
        subtotal=?,
        taxa_entrega=?,
        valor_total=? 
    where
        id=?
2025-08-04 12:10:09.756 [main] DEBUG [dc0175cd011f4673] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:10:09.756 [main] DEBUG [dc0175cd011f4673] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@6f061ec9]
2025-08-04 12:10:09.761 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@19a9ae31, started on Mon Aug 04 12:10:08 BRT 2025
2025-08-04 12:10:09.766 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:10:09.766 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:10:09.766 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:10:09.767 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:10:09.767 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:10:09.767 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:10:09.767 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:10:09.768 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-12 - Shutdown initiated...
2025-08-04 12:10:09.769 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-12 - Shutdown completed.
2025-08-04 12:10:09.771 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:10:09.800 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 19832 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:10:09.800 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:10:09.800 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:10:09.801 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@10fda184
2025-08-04 12:10:10.018 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:10:10.018 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:10:10.032 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
2025-08-04 12:10:10.035 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:10:10.035 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:10:10.040 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:10.040 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:10.040 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:10.040 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:10.040 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:10.040 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-08-04 12:10:10.114 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:10:10.115 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-13 - Starting...
2025-08-04 12:10:10.116 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-13 - Added connection conn120: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:10:10.116 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-13 - Start completed.
2025-08-04 12:10:10.116 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:10:10.161 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:10:10.161 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:10:10.161 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:10:10.161 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:10:10.162 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:10:10.162 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:10:10.162 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:10:10.162 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:10:10.163 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:10:10.163 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:10:10.164 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:10:10.164 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:10:10.164 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:10:10.165 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:10:10.166 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:10:10.166 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:10:10.167 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:10:10.168 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:10:10.309 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:10:10.432 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:10:10.467 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:10:10.524 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:10:10.566 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:10:10.603 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:10:10.610 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:10:10.690 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:10:10.702 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:10:10.702 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:10:10.702 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:10:10.702 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:10:10.703 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-08-04 12:10:10.718 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 0.947 seconds (process running for 39.241)
2025-08-04 12:10:10.721 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:10:10.725 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:10:10.726 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:10:10.728 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:10:11.087 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.088 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.089 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.089 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.089 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.089 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.091 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.091 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.091 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.092 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.092 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.092 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.094 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.094 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.095 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.095 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.095 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.095 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.096 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.098 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.098 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.099 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.099 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.100 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.100 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.100 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.102 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.102 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.102 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.102 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.103 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.103 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.103 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.103 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.103 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.103 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.104 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.104 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.104 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.104 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.105 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.105 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.106 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:11.107 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:11.107 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:11.108 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.109 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.109 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.110 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.110 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:11.110 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:11.112 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:11.112 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.113 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.113 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.113 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.114 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:11.114 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:11.115 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:11.115 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.116 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.116 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.116 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.117 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:11.118 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:11.118 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:11.118 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.119 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.119 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.120 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.120 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:11.121 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:11.121 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:11.122 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:11.122 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.123 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.123 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.124 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.124 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.126 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:10:11.128 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:10:11.130 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:10:11.132 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:10:11.134 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:10:11.136 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:10:11.138 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:10:11.141 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:10:11.141 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.144 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:10:11.145 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.146 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:10:11.147 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.147 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.148 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.148 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.148 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.150 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:11.152 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:11.153 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:11.153 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.154 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:11.154 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.156 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:10:11.156 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:11.157 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.157 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:11.157 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.157 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:11.158 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.160 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:11.164 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.165 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:11.170 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:10:11.172 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:10:11.172 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.173 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.173 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.174 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.174 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.174 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.175 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.180 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-04 12:10:11.180 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:10:11.181 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-04 12:10:11.182 [main] DEBUG [10671819eac04f25] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-04 12:10:11.184 [main] DEBUG [10671819eac04f25] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=1, numeroPedido='PEDIDO20250729', dataPedido='2025-08-04T12:10:11.175969' (truncated)...]
2025-08-04 12:10:11.209 [main] DEBUG [10671819eac04f25] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 12:10:11.210 [main] DEBUG [10671819eac04f25] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 12:10:11.210 [main] DEBUG [10671819eac04f25] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:11.210 [main] DEBUG [10671819eac04f25] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:11.212 [main] DEBUG [10671819eac04f25] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:11.213 [main] DEBUG [10671819eac04f25] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleEntityNotFoundException(EntityNotFoundException, WebRequest)
2025-08-04 12:10:11.215 [main] DEBUG [10671819eac04f25] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:10:11.215 [main] DEBUG [10671819eac04f25] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@4a285705]
2025-08-04 12:10:11.216 [main] DEBUG [10671819eac04f25] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.deliverytech.delivery.exceptions.EntityNotFoundException: Produto não encontrado: 999]
2025-08-04 12:10:11.221 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@10fda184, started on Mon Aug 04 12:10:09 BRT 2025
2025-08-04 12:10:11.225 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:10:11.225 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:10:11.225 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:10:11.226 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:10:11.226 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:10:11.226 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:10:11.226 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:10:11.226 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-13 - Shutdown initiated...
2025-08-04 12:10:11.227 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-13 - Shutdown completed.
2025-08-04 12:10:11.229 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:10:11.251 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 19832 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:10:11.251 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:10:11.251 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:10:11.252 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@425b17b6
2025-08-04 12:10:11.468 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:10:11.468 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:10:11.480 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 5 JPA repository interfaces.
2025-08-04 12:10:11.482 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:10:11.482 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:10:11.486 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:11.486 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:11.486 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:11.486 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:11.486 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:11.486 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-08-04 12:10:11.551 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:10:11.552 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-14 - Starting...
2025-08-04 12:10:11.552 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-14 - Added connection conn130: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:10:11.552 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-14 - Start completed.
2025-08-04 12:10:11.553 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:10:11.593 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:10:11.593 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:10:11.593 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:10:11.593 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:10:11.594 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:10:11.594 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:10:11.594 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:10:11.594 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:10:11.595 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:10:11.595 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:10:11.596 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:10:11.596 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:10:11.597 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:10:11.597 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:10:11.599 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:10:11.599 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:10:11.599 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:10:11.600 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:10:11.697 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:10:11.786 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:10:11.821 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:10:11.873 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:10:11.912 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:10:11.948 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:10:11.955 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:10:12.030 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:10:12.043 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:10:12.043 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:10:12.043 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:10:12.043 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:10:12.044 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 12:10:12.057 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 0.828 seconds (process running for 40.58)
2025-08-04 12:10:12.059 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:10:12.061 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:10:12.062 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:10:12.063 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:10:12.419 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.419 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.420 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.420 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.420 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.420 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.421 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.422 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.422 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.422 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.423 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.423 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.424 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.425 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.425 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.425 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.426 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.426 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.427 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.428 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.429 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.429 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.429 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.430 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.431 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.431 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.432 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.432 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.432 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.432 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.432 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.433 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.433 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.433 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.433 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.434 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.434 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.434 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.434 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.435 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.435 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.435 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.436 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:12.438 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:12.438 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:12.439 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.440 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.441 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.441 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.442 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:12.443 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:12.444 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:12.444 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.445 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.445 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.446 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.446 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:12.447 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:12.448 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:12.448 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.449 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.449 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.450 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.451 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:12.451 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:12.452 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:12.452 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.453 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.453 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.454 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.455 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:12.457 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:12.459 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:12.460 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:12.461 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.462 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.463 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.464 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.464 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.467 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:10:12.469 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:10:12.474 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:10:12.477 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:10:12.479 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:10:12.482 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:10:12.484 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:10:12.488 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:10:12.488 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.491 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:10:12.492 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.495 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:10:12.495 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.496 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.496 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.496 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.497 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.499 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:12.502 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:12.503 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:12.503 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.503 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:12.504 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.505 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:10:12.507 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:12.508 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.508 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:12.508 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.508 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:12.509 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.511 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:12.518 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.521 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:12.529 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:10:12.531 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:10:12.532 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.532 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.533 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.533 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.533 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.533 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.535 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:12.536 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.restaurante_id,
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco 
    from
        produtos p1_0 
    where
        p1_0.restaurante_id=?
2025-08-04 12:10:12.538 [main] DEBUG [] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-04 12:10:12.539 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.544 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-04 12:10:12.545 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:10:12.546 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-04 12:10:12.547 [main] DEBUG [6af1ba6b4f5a4de0] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-04 12:10:12.550 [main] DEBUG [6af1ba6b4f5a4de0] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=1, numeroPedido='PEDIDO20250729', dataPedido='2025-08-04T12:10:12.5403644 (truncated)...]
2025-08-04 12:10:12.567 [main] DEBUG [6af1ba6b4f5a4de0] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 12:10:12.568 [main] DEBUG [6af1ba6b4f5a4de0] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 12:10:12.569 [main] DEBUG [6af1ba6b4f5a4de0] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:12.569 [main] DEBUG [6af1ba6b4f5a4de0] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:12.570 [main] DEBUG [6af1ba6b4f5a4de0] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:12.571 [main] DEBUG [6af1ba6b4f5a4de0] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleBusinessException(Exception, WebRequest)
2025-08-04 12:10:12.573 [main] DEBUG [6af1ba6b4f5a4de0] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:10:12.573 [main] DEBUG [6af1ba6b4f5a4de0] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@5c7812b4]
2025-08-04 12:10:12.574 [main] DEBUG [6af1ba6b4f5a4de0] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.deliverytech.delivery.exceptions.BusinessException: Estoque insuficiente para o produto Pizza Margherita. Estoque atual: 5, Quantidade solicitada: 10]
2025-08-04 12:10:12.576 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:12.581 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@425b17b6, started on Mon Aug 04 12:10:11 BRT 2025
2025-08-04 12:10:12.586 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:10:12.587 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:10:12.587 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:10:12.587 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:10:12.587 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:10:12.588 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:10:12.588 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:10:12.588 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-14 - Shutdown initiated...
2025-08-04 12:10:12.589 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-14 - Shutdown completed.
2025-08-04 12:10:12.592 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:10:12.614 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Starting PedidoControllerITTest using Java 21.0.1 with PID 19832 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:10:12.614 [main] DEBUG [] c.d.d.c.PedidoControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:10:12.614 [main] INFO  [] c.d.d.c.PedidoControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:10:12.615 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@27f9d896
2025-08-04 12:10:12.860 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:10:12.860 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:10:12.874 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2025-08-04 12:10:12.875 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:10:12.875 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:10:12.881 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:12.881 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:12.881 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:12.881 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:12.881 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:12.881 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-08-04 12:10:12.957 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:10:12.958 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-15 - Starting...
2025-08-04 12:10:12.959 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-15 - Added connection conn140: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:10:12.959 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-15 - Start completed.
2025-08-04 12:10:12.959 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:10:13.005 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:10:13.005 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:10:13.005 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:10:13.005 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:10:13.005 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:10:13.005 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:10:13.005 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:10:13.007 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:10:13.008 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:10:13.009 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:10:13.009 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:10:13.009 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:10:13.010 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:10:13.011 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:10:13.012 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:10:13.012 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:10:13.013 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:10:13.013 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:10:13.121 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:10:13.204 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:10:13.246 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:10:13.296 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:10:13.336 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:10:13.372 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:10:13.379 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:10:13.453 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:10:13.465 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:10:13.465 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:10:13.465 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:10:13.465 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:10:13.466 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 12:10:13.479 [main] INFO  [] c.d.d.c.PedidoControllerITTest - Started PedidoControllerITTest in 0.887 seconds (process running for 42.003)
2025-08-04 12:10:13.481 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:10:13.483 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:10:13.485 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:10:13.486 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:10:13.843 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.844 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.845 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.845 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.845 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.846 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.847 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.848 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.848 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.848 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.848 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.849 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.850 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.851 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.851 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.852 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.852 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.852 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.853 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.855 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.855 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.855 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.856 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.856 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.857 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.857 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.858 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.858 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.858 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.858 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.859 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.859 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.859 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.859 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.859 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.860 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.860 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.860 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.860 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.861 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.861 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.861 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.862 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:13.864 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:13.864 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:13.865 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.865 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.866 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.866 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.867 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:13.868 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:13.868 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:13.869 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.869 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.870 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.870 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.871 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:13.872 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:13.872 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:13.873 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.873 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.874 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.874 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.875 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:13.876 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:13.876 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:13.876 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.877 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.878 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.878 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.879 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:13.879 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:13.880 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:13.880 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:13.881 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.881 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.882 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.882 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.883 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.885 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:10:13.887 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:10:13.889 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:10:13.891 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:10:13.893 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:10:13.896 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:10:13.897 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:10:13.899 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:10:13.900 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.901 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:10:13.901 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.903 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:10:13.903 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.904 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.904 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.904 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.905 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.907 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:13.908 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:13.908 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:13.910 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.910 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:13.911 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.912 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:10:13.913 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:13.913 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.913 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:13.913 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.913 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:13.913 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.916 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:13.919 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.921 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.925 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:10:13.927 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:10:13.927 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.927 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.928 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.928 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.928 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.928 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.929 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:13.930 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.restaurante_id,
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco 
    from
        produtos p1_0 
    where
        p1_0.restaurante_id=?
2025-08-04 12:10:13.931 [main] DEBUG [] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-04 12:10:13.932 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.936 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/pedidos
2025-08-04 12:10:13.937 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:10:13.938 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/pedidos
2025-08-04 12:10:13.939 [main] DEBUG [0cf142b3f7e94938] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.PedidoController#criarPedido(PedidoRequestDTO)
2025-08-04 12:10:13.942 [main] DEBUG [0cf142b3f7e94938] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [PedidoRequestDTO{clienteId=1, numeroPedido='PEDIDO20250729', dataPedido='2025-08-04T12:10:13.9339696 (truncated)...]
2025-08-04 12:10:13.957 [main] DEBUG [0cf142b3f7e94938] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 12:10:13.959 [main] DEBUG [0cf142b3f7e94938] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.PedidoController.criarPedido(com.deliverytech.delivery.dto.request.PedidoRequestDTO); target is of class [com.deliverytech.delivery.controller.PedidoController]
2025-08-04 12:10:13.959 [main] DEBUG [0cf142b3f7e94938] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:13.959 [main] DEBUG [0cf142b3f7e94938] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:13.959 [main] DEBUG [0cf142b3f7e94938] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:13.960 [main] DEBUG [0cf142b3f7e94938] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.964 [main] DEBUG [0cf142b3f7e94938] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.965 [main] DEBUG [0cf142b3f7e94938] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:13.966 [main] DEBUG [0cf142b3f7e94938] org.hibernate.SQL - 
    /* update
        for com.deliverytech.delivery.entity.Produto */update produtos 
    set
        categoria=?,
        descricao=?,
        disponivel=?,
        estoque=?,
        nome=?,
        preco=?,
        restaurante_id=? 
    where
        id=?
2025-08-04 12:10:13.968 [main] DEBUG [0cf142b3f7e94938] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:10:13.968 [main] DEBUG [0cf142b3f7e94938] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@4e6c008c]
2025-08-04 12:10:13.975 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@27f9d896, started on Mon Aug 04 12:10:12 BRT 2025
2025-08-04 12:10:13.978 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:10:13.979 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:10:13.979 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:10:13.979 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:10:13.979 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:10:13.980 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:10:13.980 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:10:13.980 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-15 - Shutdown initiated...
2025-08-04 12:10:13.981 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-15 - Shutdown completed.
2025-08-04 12:10:13.986 [main] INFO  [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.deliverytech.delivery.controller.RestauranteControllerITTest]: RestauranteControllerITTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 12:10:13.988 [main] INFO  [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.deliverytech.delivery.DeliveryApiApplication for test class com.deliverytech.delivery.controller.RestauranteControllerITTest
2025-08-04 12:10:13.991 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:10:14.020 [main] INFO  [] c.d.d.c.RestauranteControllerITTest - Starting RestauranteControllerITTest using Java 21.0.1 with PID 19832 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:10:14.021 [main] DEBUG [] c.d.d.c.RestauranteControllerITTest - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:10:14.021 [main] INFO  [] c.d.d.c.RestauranteControllerITTest - The following 1 profile is active: "test"
2025-08-04 12:10:14.023 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@43dc5d60
2025-08-04 12:10:14.253 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:10:14.253 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:10:14.267 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2025-08-04 12:10:14.269 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:10:14.269 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:10:14.273 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:14.273 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:14.273 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:14.273 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:14.273 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:14.273 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-08-04 12:10:14.343 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:10:14.343 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-16 - Starting...
2025-08-04 12:10:14.344 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-16 - Added connection conn150: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:10:14.344 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-16 - Start completed.
2025-08-04 12:10:14.344 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:10:14.385 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:10:14.386 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:10:14.386 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:10:14.386 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:10:14.386 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:10:14.386 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:10:14.386 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:10:14.387 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:10:14.387 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:10:14.388 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:10:14.388 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:10:14.388 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:10:14.389 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:10:14.389 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:10:14.390 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:10:14.390 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:10:14.391 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:10:14.392 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:10:14.493 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:10:14.573 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:10:14.606 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:10:14.670 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:10:14.752 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:10:14.803 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:10:14.810 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:10:14.886 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:10:14.899 [main] DEBUG [] o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-04 12:10:14.899 [main] DEBUG [] c.d.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 12:10:14.899 [main] INFO  [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:10:14.899 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:10:14.900 [main] INFO  [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-04 12:10:14.913 [main] INFO  [] c.d.d.c.RestauranteControllerITTest - Started RestauranteControllerITTest in 0.923 seconds (process running for 43.437)
2025-08-04 12:10:14.916 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:10:14.919 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:10:14.920 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:10:14.921 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:10:15.273 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.274 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.275 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.275 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.275 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.275 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.276 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.277 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.277 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.277 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.278 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.278 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.279 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.280 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.280 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.280 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.280 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.281 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.282 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:15.283 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:15.284 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:15.285 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:15.285 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:15.286 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:15.286 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.287 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.287 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.287 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.288 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.288 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.288 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.288 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.288 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.289 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.289 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.289 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.289 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.290 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.290 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.290 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.290 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.290 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.291 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:15.292 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:15.293 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:15.293 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:15.294 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.294 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.294 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.295 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:15.296 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:15.296 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:15.296 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:15.297 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.297 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.297 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.298 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:15.298 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:15.299 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:15.299 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:15.299 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.300 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.301 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.301 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:15.302 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:15.302 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:15.303 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:15.303 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.303 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.303 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.305 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:15.305 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:15.305 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:15.306 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:15.306 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:15.307 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.307 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.307 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.308 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.310 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:10:15.311 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:10:15.314 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:10:15.315 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:10:15.317 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:10:15.318 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:10:15.320 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:10:15.322 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:10:15.322 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:15.324 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:10:15.324 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:15.326 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:10:15.326 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:15.327 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:15.327 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:15.327 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:15.327 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:15.329 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:15.331 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:15.331 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:15.332 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:15.332 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:15.332 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:15.334 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:10:15.334 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:15.335 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:15.335 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:15.335 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:15.335 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:15.335 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:15.337 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:15.350 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.354 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes?page=0&size=10
2025-08-04 12:10:15.355 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:10:15.355 [main] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 12:10:15.356 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes?page=0&size=10
2025-08-04 12:10:15.356 [main] DEBUG [5c60e580911547b2] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#listarRestaurantesComFiltro(String, Boolean, Pageable)
2025-08-04 12:10:15.372 [main] DEBUG [5c60e580911547b2] org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Restaurante r 
    WHERE
        (
            :categoria IS NULL 
            OR r.categoria = :categoria
        ) 
        AND (
            :ativo IS NULL 
            OR r.ativo = :ativo
        ) */ select
            r1_0.id,
            r1_0.ativo,
            r1_0.avaliacao,
            r1_0.categoria,
            r1_0.data_criacao,
            r1_0.endereco,
            r1_0.horario_funcionamento,
            r1_0.nome,
            r1_0.taxa_entrega,
            r1_0.telefone,
            r1_0.tempo_entrega_minutos 
        from
            restaurantes r1_0 
        where
            (
                ? is null 
                or r1_0.categoria=?
            ) 
            and (
                ? is null 
                or r1_0.ativo=?
            ) 
        fetch
            first ? rows only
2025-08-04 12:10:15.377 [main] DEBUG [5c60e580911547b2] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:10:15.377 [main] DEBUG [5c60e580911547b2] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.PagedResponseWrapper@4d20ab03]
2025-08-04 12:10:15.399 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.402 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing PUT /api/restaurantes/8
2025-08-04 12:10:15.402 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:10:15.404 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured PUT /api/restaurantes/8
2025-08-04 12:10:15.404 [main] DEBUG [00b9658b61444c97] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#atualizarRestaurante(Long, RestauranteRequestDTO)
2025-08-04 12:10:15.407 [main] DEBUG [00b9658b61444c97] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RestauranteRequestDTO{ativo=true, nome='Pizza Express Atualizada', categoria='Italiana', endereco='R (truncated)...]
2025-08-04 12:10:15.418 [main] DEBUG [00b9658b61444c97] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.RestauranteController.atualizarRestaurante(java.lang.Long,com.deliverytech.delivery.dto.request.RestauranteRequestDTO); target is of class [com.deliverytech.delivery.controller.RestauranteController]
2025-08-04 12:10:15.420 [main] DEBUG [00b9658b61444c97] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.RestauranteController.atualizarRestaurante(java.lang.Long,com.deliverytech.delivery.dto.request.RestauranteRequestDTO); target is of class [com.deliverytech.delivery.controller.RestauranteController]
2025-08-04 12:10:15.425 [main] DEBUG [00b9658b61444c97] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:10:15.425 [main] DEBUG [00b9658b61444c97] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@77c652cc]
2025-08-04 12:10:15.434 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.436 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes
2025-08-04 12:10:15.436 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:10:15.436 [main] DEBUG [] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 12:10:15.437 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes
2025-08-04 12:10:15.437 [main] DEBUG [9e12e286ddc94534] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#listarRestaurantesComFiltro(String, Boolean, Pageable)
2025-08-04 12:10:15.439 [main] DEBUG [9e12e286ddc94534] org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Restaurante r 
    WHERE
        (
            :categoria IS NULL 
            OR r.categoria = :categoria
        ) 
        AND (
            :ativo IS NULL 
            OR r.ativo = :ativo
        ) */ select
            r1_0.id,
            r1_0.ativo,
            r1_0.avaliacao,
            r1_0.categoria,
            r1_0.data_criacao,
            r1_0.endereco,
            r1_0.horario_funcionamento,
            r1_0.nome,
            r1_0.taxa_entrega,
            r1_0.telefone,
            r1_0.tempo_entrega_minutos 
        from
            restaurantes r1_0 
        where
            (
                ? is null 
                or r1_0.categoria=?
            ) 
            and (
                ? is null 
                or r1_0.ativo=?
            ) 
        fetch
            first ? rows only
2025-08-04 12:10:15.440 [main] DEBUG [9e12e286ddc94534] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:10:15.440 [main] DEBUG [9e12e286ddc94534] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.PagedResponseWrapper@4ef2b8a4]
2025-08-04 12:10:15.453 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.455 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes/categoria/Americana
2025-08-04 12:10:15.456 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:10:15.456 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes/categoria/Americana
2025-08-04 12:10:15.457 [main] DEBUG [79adea7a52c84a18] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#buscarRestaurantePorCategoria(String)
2025-08-04 12:10:15.460 [main] DEBUG [79adea7a52c84a18] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:10:15.462 [main] DEBUG [79adea7a52c84a18] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:10:15.462 [main] DEBUG [79adea7a52c84a18] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@1bc03368]
2025-08-04 12:10:15.473 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.476 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes/999
2025-08-04 12:10:15.476 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:10:15.477 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes/999
2025-08-04 12:10:15.477 [main] DEBUG [2f6f67845dc1447b] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#buscarPorId(Long)
2025-08-04 12:10:15.478 [main] DEBUG [2f6f67845dc1447b] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:15.480 [main] DEBUG [2f6f67845dc1447b] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleEntityNotFoundException(EntityNotFoundException, WebRequest)
2025-08-04 12:10:15.481 [main] DEBUG [2f6f67845dc1447b] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:10:15.481 [main] DEBUG [2f6f67845dc1447b] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@58d3237a]
2025-08-04 12:10:15.482 [main] DEBUG [2f6f67845dc1447b] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.deliverytech.delivery.exceptions.EntityNotFoundException: Restaurante não encontrado com ID: 999]
2025-08-04 12:10:15.491 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.493 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing GET /api/restaurantes/12
2025-08-04 12:10:15.494 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:10:15.495 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured GET /api/restaurantes/12
2025-08-04 12:10:15.495 [main] DEBUG [2c5d0d64898f4249] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#buscarPorId(Long)
2025-08-04 12:10:15.496 [main] DEBUG [2c5d0d64898f4249] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:10:15.497 [main] DEBUG [2c5d0d64898f4249] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@5da2aad2]
2025-08-04 12:10:15.510 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.513 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing PATCH /api/restaurantes/13/status
2025-08-04 12:10:15.514 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:10:15.514 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured PATCH /api/restaurantes/13/status
2025-08-04 12:10:15.514 [main] DEBUG [4c69b473ce4a42b3] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#ativarDesativarRestaurante(Long)
2025-08-04 12:10:15.516 [main] DEBUG [4c69b473ce4a42b3] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:10:15.516 [main] DEBUG [4c69b473ce4a42b3] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@714f222b]
2025-08-04 12:10:15.525 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.527 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/restaurantes
2025-08-04 12:10:15.528 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:10:15.528 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/restaurantes
2025-08-04 12:10:15.529 [main] DEBUG [1f17bee5c34b4ede] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#cadastrarRestaurante(RestauranteRequestDTO)
2025-08-04 12:10:15.529 [main] DEBUG [1f17bee5c34b4ede] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RestauranteRequestDTO{ativo=true, nome='', categoria='Italiana', endereco='Rua das Flores, 123', tel (truncated)...]
2025-08-04 12:10:15.531 [main] DEBUG [1f17bee5c34b4ede] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.deliverytech.delivery.exceptions.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException, WebRequest)
2025-08-04 12:10:15.531 [main] DEBUG [1f17bee5c34b4ede] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:10:15.531 [main] DEBUG [1f17bee5c34b4ede] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ErrorResponseDTO@6e39b1da]
2025-08-04 12:10:15.532 [main] DEBUG [1f17bee5c34b4ede] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.deliverytech.delivery.dto.response.ApiResponseWrapper<com.deliverytech.delivery.dto.response.RestauranteResponseDTO>> com.deliverytech.delivery.controller.RestauranteController.cadastrarRestaurante(com.deliverytech.delivery.dto.request.RestauranteRequestDTO) with 5 errors: [Field error in object 'restauranteRequestDTO' on field 'telefone': rejected value [123]; codes [ValidTelefone.restauranteRequestDTO.telefone,ValidTelefone.telefone,ValidTelefone.java.lang.String,ValidTelefone]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restauranteRequestDTO.telefone,telefone]; arguments []; default message [telefone]]; default message [Telefone deve ter formato válido (10 ou 11 digitos)]] [Field error in object 'restauranteRequestDTO' on field 'telefone': rejected value [123]; codes [Pattern.restauranteRequestDTO.telefone,Pattern.telefone,Pattern.java.lang.String,Pattern]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restauranteRequestDTO.telefone,telefone]; arguments []; default message [telefone],[Ljakarta.validation.constraints.Pattern$Flag;@2fbf01ba,^\+?[0-9]{10,11}$]; default message [O telefone deve ser um número válido com 10 a 11 dígitos]] [Field error in object 'restauranteRequestDTO' on field 'nome': rejected value []; codes [NotBlank.restauranteRequestDTO.nome,NotBlank.nome,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restauranteRequestDTO.nome,nome]; arguments []; default message [nome]]; default message [O nome do restaurante é obrigatório]] [Field error in object 'restauranteRequestDTO' on field 'nome': rejected value []; codes [Size.restauranteRequestDTO.nome,Size.nome,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restauranteRequestDTO.nome,nome]; arguments []; default message [nome],100,3]; default message [O nome do restaurante deve ter entre 3 e 100 caracteres]] [Field error in object 'restauranteRequestDTO' on field 'nome': rejected value []; codes [Size.restauranteRequestDTO.nome,Size.nome,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restauranteRequestDTO.nome,nome]; arguments []; default message [nome],100,2]; default message [O nome do restaurante deve ter entre 3 e 100 caracteres]] ]
2025-08-04 12:10:15.542 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.544 [main] DEBUG [] o.s.security.web.FilterChainProxy - Securing POST /api/restaurantes
2025-08-04 12:10:15.544 [main] WARN  [] c.d.d.s.JwtAuthenticationFilter - JWT Token não começa com Bearer String
2025-08-04 12:10:15.545 [main] DEBUG [] o.s.security.web.FilterChainProxy - Secured POST /api/restaurantes
2025-08-04 12:10:15.545 [main] DEBUG [4ed0ed8d3cb34b32] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.deliverytech.delivery.controller.RestauranteController#cadastrarRestaurante(RestauranteRequestDTO)
2025-08-04 12:10:15.546 [main] DEBUG [4ed0ed8d3cb34b32] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RestauranteRequestDTO{ativo=true, nome='Pizza Express 123', categoria='Italiana', endereco='Rua das  (truncated)...]
2025-08-04 12:10:15.546 [main] DEBUG [4ed0ed8d3cb34b32] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.RestauranteController.cadastrarRestaurante(com.deliverytech.delivery.dto.request.RestauranteRequestDTO); target is of class [com.deliverytech.delivery.controller.RestauranteController]
2025-08-04 12:10:15.547 [main] DEBUG [4ed0ed8d3cb34b32] o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.deliverytech.delivery.controller.RestauranteController.cadastrarRestaurante(com.deliverytech.delivery.dto.request.RestauranteRequestDTO); target is of class [com.deliverytech.delivery.controller.RestauranteController]
2025-08-04 12:10:15.549 [main] DEBUG [4ed0ed8d3cb34b32] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.nome=?
2025-08-04 12:10:15.552 [main] DEBUG [4ed0ed8d3cb34b32] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:15.553 [main] DEBUG [4ed0ed8d3cb34b32] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-08-04 12:10:15.553 [main] DEBUG [4ed0ed8d3cb34b32] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.deliverytech.delivery.dto.response.ApiResponseWrapper@3a5c8916]
2025-08-04 12:10:15.561 [main] INFO  [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.deliverytech.delivery.DeliveryApiApplicationTests]: DeliveryApiApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 12:10:15.567 [main] INFO  [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.deliverytech.delivery.DeliveryApiApplication for test class com.deliverytech.delivery.DeliveryApiApplicationTests
2025-08-04 12:10:15.570 [main] INFO  [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:10:15.581 [main] INFO  [] c.d.d.DeliveryApiApplicationTests - Starting DeliveryApiApplicationTests using Java 21.0.1 with PID 19832 (started by ADM in E:\Documentos\Eclipse projetos\delivery-api)
2025-08-04 12:10:15.582 [main] DEBUG [] c.d.d.DeliveryApiApplicationTests - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-04 12:10:15.582 [main] INFO  [] c.d.d.DeliveryApiApplicationTests - The following 1 profile is active: "development"
2025-08-04 12:10:15.583 [main] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4920ca5b
2025-08-04 12:10:15.793 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:10:15.793 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:10:15.807 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2025-08-04 12:10:15.809 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-04 12:10:15.809 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-04 12:10:15.813 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:15.813 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:15.813 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:15.813 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:15.814 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-04 12:10:15.814 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-08-04 12:10:15.938 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:10:15.939 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-17 - Starting...
2025-08-04 12:10:15.940 [main] INFO  [] com.zaxxer.hikari.pool.HikariPool - HikariPool-17 - Added connection conn160: url=jdbc:h2:mem:deliverydb user=SA
2025-08-04 12:10:15.940 [main] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-17 - Start completed.
2025-08-04 12:10:15.940 [main] WARN  [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:10:15.984 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:10:15.985 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:10:15.985 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:10:15.985 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:10:15.985 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:10:15.985 [main] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:10:15.986 [main] DEBUG [] org.hibernate.SQL - 
    create table clientes (
        ativo boolean,
        data_cadastro timestamp(6),
        id bigint generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        endereco varchar(255),
        nome varchar(255),
        telefone varchar(255),
        primary key (id)
    )
2025-08-04 12:10:15.986 [main] DEBUG [] org.hibernate.SQL - 
    create table itens_pedido (
        preco_unitario numeric(38,2),
        quantidade integer not null,
        subtotal numeric(38,2),
        id bigint generated by default as identity,
        pedido_id bigint,
        produto_id bigint,
        primary key (id)
    )
2025-08-04 12:10:15.987 [main] DEBUG [] org.hibernate.SQL - 
    create table pedidos (
        subtotal numeric(38,2),
        taxa_entrega numeric(38,2),
        valor_total numeric(38,2),
        cliente_id bigint,
        data_pedido timestamp(6),
        id bigint generated by default as identity,
        restaurante_id bigint,
        endereco_entrega varchar(255),
        numero_pedido varchar(255),
        observacoes varchar(255),
        status enum ('CANCELADO','CONFIRMADO','ENTREGUE','PENDENTE','PREPARANDO','PRONTO','SAIU_PARA_ENTREGA'),
        primary key (id)
    )
2025-08-04 12:10:15.987 [main] DEBUG [] org.hibernate.SQL - 
    create table produtos (
        disponivel boolean,
        estoque integer,
        preco numeric(38,2),
        id bigint generated by default as identity,
        restaurante_id bigint,
        categoria varchar(255),
        descricao varchar(255),
        nome varchar(255),
        primary key (id)
    )
2025-08-04 12:10:15.987 [main] DEBUG [] org.hibernate.SQL - 
    create table restaurantes (
        ativo boolean not null,
        avaliacao numeric(3,2),
        taxa_entrega numeric(38,2),
        tempo_entrega_minutos integer,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        nome varchar(100) not null,
        categoria varchar(255) not null,
        endereco varchar(255) not null,
        horario_funcionamento varchar(255),
        telefone varchar(255) not null,
        primary key (id)
    )
2025-08-04 12:10:15.988 [main] DEBUG [] org.hibernate.SQL - 
    create table usuarios (
        ativo boolean not null,
        data_criacao timestamp(6) not null,
        id bigint generated by default as identity,
        restaurante_id bigint,
        email varchar(255) not null unique,
        nome varchar(255) not null,
        senha varchar(255) not null,
        role enum ('ADMIN','CLIENTE','ENTREGADOR','RESTAURANTE') not null,
        primary key (id)
    )
2025-08-04 12:10:15.988 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FK42mycompce3b7yt3l6ukdwsxy 
       foreign key (pedido_id) 
       references pedidos
2025-08-04 12:10:15.989 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists itens_pedido 
       add constraint FKxytdlekpdaobqphujy9bmuhl 
       foreign key (produto_id) 
       references produtos
2025-08-04 12:10:15.989 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKg7202lk0hwxn04bmdl2thth5b 
       foreign key (cliente_id) 
       references clientes
2025-08-04 12:10:15.990 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists pedidos 
       add constraint FKf3mf88pcxawf3nt06400qmqn3 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:10:15.990 [main] DEBUG [] org.hibernate.SQL - 
    alter table if exists produtos 
       add constraint FKsl3jhd8nhd103c5nm6yocnnkx 
       foreign key (restaurante_id) 
       references restaurantes
2025-08-04 12:10:15.991 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:10:16.087 [main] INFO  [] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService
2025-08-04 12:10:16.160 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 63 mappings in 'requestMappingHandlerMapping'
2025-08-04 12:10:16.204 [main] DEBUG [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-04 12:10:16.250 [main] INFO  [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-04 12:10:16.291 [main] DEBUG [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 12:10:16.329 [main] DEBUG [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-04 12:10:16.336 [main] DEBUG [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-04 12:10:16.411 [main] INFO  [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'
2025-08-04 12:10:16.433 [main] INFO  [] c.d.d.DeliveryApiApplicationTests - Started DeliveryApiApplicationTests in 0.864 seconds (process running for 44.957)
2025-08-04 12:10:16.435 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0
2025-08-04 12:10:16.437 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0
2025-08-04 12:10:16.438 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0
2025-08-04 12:10:16.439 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0
2025-08-04 12:10:16.792 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.793 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.793 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.793 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.794 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.794 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Usuario */insert 
    into
        usuarios (ativo, data_criacao, email, nome, restaurante_id, role, senha, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.795 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.795 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.795 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.796 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.796 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.796 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Cliente */insert 
    into
        clientes (ativo, cpf, data_cadastro, email, endereco, nome, telefone, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.797 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.798 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.798 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.798 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.799 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.799 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Restaurante */insert 
    into
        restaurantes (ativo, avaliacao, categoria, data_criacao, endereco, horario_funcionamento, nome, taxa_entrega, telefone, tempo_entrega_minutos, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.801 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:16.802 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:16.802 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:16.802 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:16.803 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:16.803 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:16.804 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.804 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.804 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.805 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.805 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.805 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.805 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.806 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.806 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.806 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.806 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.806 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.807 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.807 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.807 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.807 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.808 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.808 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Produto */insert 
    into
        produtos (categoria, descricao, disponivel, estoque, nome, preco, restaurante_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.809 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:16.810 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:16.810 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:16.811 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:16.812 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.812 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.813 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.813 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:16.814 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:16.814 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:16.815 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:16.815 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.816 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.816 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.817 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:16.818 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:16.818 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:16.818 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:16.819 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.819 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.819 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.820 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:16.820 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:16.821 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:16.821 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:16.821 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.822 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.822 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.823 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:16.823 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:16.823 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:16.824 [main] DEBUG [] org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        p1_0.id=?
2025-08-04 12:10:16.824 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:16.825 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.Pedido */insert 
    into
        pedidos (cliente_id, data_pedido, endereco_entrega, numero_pedido, observacoes, restaurante_id, status, subtotal, taxa_entrega, valor_total, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.825 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.826 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.826 [main] DEBUG [] org.hibernate.SQL - 
    /* insert for
        com.deliverytech.delivery.entity.ItemPedido */insert 
    into
        itens_pedido (pedido_id, preco_unitario, produto_id, quantidade, subtotal, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-04 12:10:16.828 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.email=?
2025-08-04 12:10:16.830 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.ativo
2025-08-04 12:10:16.832 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        upper(c1_0.nome) like upper(?) escape '\'
2025-08-04 12:10:16.834 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clientes c1_0 
    where
        c1_0.email=? 
    fetch
        first ? rows only
2025-08-04 12:10:16.835 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.categoria=? 
        and r1_0.ativo
2025-08-04 12:10:16.837 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.taxa_entrega<=?
2025-08-04 12:10:16.838 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    order by
        r1_0.nome 
    fetch
        first ? rows only
2025-08-04 12:10:16.840 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    left join
        restaurantes r1_0 
            on r1_0.id=p1_0.restaurante_id 
    where
        r1_0.id=? 
        and p1_0.disponivel
2025-08-04 12:10:16.840 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:16.842 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.categoria=? 
        and p1_0.disponivel
2025-08-04 12:10:16.843 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:16.844 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.categoria,
        p1_0.descricao,
        p1_0.disponivel,
        p1_0.estoque,
        p1_0.nome,
        p1_0.preco,
        p1_0.restaurante_id 
    from
        produtos p1_0 
    where
        p1_0.preco<=? 
        and p1_0.disponivel
2025-08-04 12:10:16.844 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:16.845 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:16.845 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:16.845 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:16.845 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:16.847 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    left join
        clientes c1_0 
            on c1_0.id=p1_0.cliente_id 
    where
        c1_0.id=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:16.849 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.status=? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:16.849 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:16.850 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:16.850 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:16.850 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:16.851 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    order by
        p1_0.data_pedido desc 
    fetch
        first ? rows only
2025-08-04 12:10:16.852 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:16.852 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:16.852 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:16.852 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:16.852 [main] DEBUG [] org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.ativo,
        c1_0.cpf,
        c1_0.data_cadastro,
        c1_0.email,
        c1_0.endereco,
        c1_0.nome,
        c1_0.telefone 
    from
        clientes c1_0 
    where
        c1_0.id=?
2025-08-04 12:10:16.853 [main] DEBUG [] org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.ativo,
        r1_0.avaliacao,
        r1_0.categoria,
        r1_0.data_criacao,
        r1_0.endereco,
        r1_0.horario_funcionamento,
        r1_0.nome,
        r1_0.taxa_entrega,
        r1_0.telefone,
        r1_0.tempo_entrega_minutos 
    from
        restaurantes r1_0 
    where
        r1_0.id=?
2025-08-04 12:10:16.854 [main] DEBUG [] org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.cliente_id,
        p1_0.data_pedido,
        p1_0.endereco_entrega,
        p1_0.numero_pedido,
        p1_0.observacoes,
        p1_0.restaurante_id,
        p1_0.status,
        p1_0.subtotal,
        p1_0.taxa_entrega,
        p1_0.valor_total 
    from
        pedidos p1_0 
    where
        p1_0.data_pedido between ? and ? 
    order by
        p1_0.data_pedido desc
2025-08-04 12:10:18.055 [SpringApplicationShutdownHook] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-04 12:10:18.063 [tomcat-shutdown] INFO  [] o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-04 12:10:18.347 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:10:18.347 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:10:18.349 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:10:18.350 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:10:18.352 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:10:18.353 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:10:18.354 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:10:18.356 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-04 12:10:18.359 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-04 12:10:18.375 [SpringApplicationShutdownHook] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@43dc5d60, started on Mon Aug 04 12:10:14 BRT 2025
2025-08-04 12:10:18.387 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:10:18.388 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:10:18.391 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:10:18.393 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:10:18.394 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:10:18.395 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:10:18.396 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:10:18.397 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-16 - Shutdown initiated...
2025-08-04 12:10:18.399 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-16 - Shutdown completed.
2025-08-04 12:10:18.400 [SpringApplicationShutdownHook] DEBUG [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@4920ca5b, started on Mon Aug 04 12:10:15 BRT 2025
2025-08-04 12:10:18.407 [SpringApplicationShutdownHook] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:10:18.407 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists clientes cascade 
2025-08-04 12:10:18.408 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists itens_pedido cascade 
2025-08-04 12:10:18.408 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists pedidos cascade 
2025-08-04 12:10:18.408 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists produtos cascade 
2025-08-04 12:10:18.408 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists restaurantes cascade 
2025-08-04 12:10:18.409 [SpringApplicationShutdownHook] DEBUG [] org.hibernate.SQL - 
    drop table if exists usuarios cascade 
2025-08-04 12:10:18.409 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-17 - Shutdown initiated...
2025-08-04 12:10:18.412 [SpringApplicationShutdownHook] INFO  [] com.zaxxer.hikari.HikariDataSource - HikariPool-17 - Shutdown completed.
